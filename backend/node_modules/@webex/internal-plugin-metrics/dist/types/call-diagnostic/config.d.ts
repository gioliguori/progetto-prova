import { ClientEventError, ClientSubServiceType } from '../metrics.types';
export declare const CALL_DIAGNOSTIC_LOG_IDENTIFIER = "call-diagnostic-events -> ";
export declare const AUTHENTICATION_FAILED_CODE = 1010;
export declare const NETWORK_ERROR = 1026;
export declare const NEW_LOCUS_ERROR_CLIENT_CODE = 4008;
export declare const MEETING_INFO_LOOKUP_ERROR_CLIENT_CODE = 4100;
export declare const UNKNOWN_ERROR = 9999;
export declare const ICE_FAILURE_CLIENT_CODE = 2004;
export declare const MISSING_ROAP_ANSWER_CLIENT_CODE = 2007;
export declare const DTLS_HANDSHAKE_FAILED_CLIENT_CODE = 2008;
export declare const ICE_FAILED_WITH_TURN_TLS_CLIENT_CODE = 2010;
export declare const ICE_FAILED_WITHOUT_TURN_TLS_CLIENT_CODE = 2009;
export declare const WBX_APP_API_URL = "wbxappapi";
export declare const WEBEX_SUB_SERVICE_TYPES: Record<string, ClientSubServiceType>;
export declare const BROWSER_MEDIA_ERROR_NAME_TO_CLIENT_ERROR_CODES_MAP: {
    [x: string]: number;
};
export declare const SDP_OFFER_CREATION_ERROR_MAP: {
    GENERAL: number;
    SDP_MUNGE_MISSING_CODECS: number;
};
export declare const ERROR_DESCRIPTIONS: {
    UNKNOWN_CALL_FAILURE: string;
    LOCUS_RATE_LIMITED_INCOMING: string;
    LOCUS_RATE_LIMITED_OUTGOING: string;
    LOCUS_UNAVAILABLE: string;
    LOCUS_CONFLICT: string;
    TIMEOUT: string;
    LOCUS_INVALID_SEQUENCE_HASH: string;
    AUTHENTICATION_FAILED: string;
    NETWORK_ERROR: string;
    UPDATE_MEDIA_FAILED: string;
    FAILED_TO_CONNECT_MEDIA: string;
    MEDIA_ENGINE_LOST: string;
    MEDIA_CONNECTION_LOST: string;
    ICE_FAILURE: string;
    MEDIA_ENGINE_HANG: string;
    ICE_SERVER_REJECTED: string;
    CALL_FULL: string;
    ROOM_TOO_LARGE: string;
    GUEST_ALREADY_ADDED: string;
    LOCUS_USER_NOT_AUTHORISED: string;
    CLOUDBERRY_UNAVAILABLE: string;
    ROOM_TOO_LARGE_FREE_ACCOUNT: string;
    MEETING_INACTIVE: string;
    MEETING_LOCKED: string;
    MEETING_TERMINATING: string;
    MODERATOR_PIN_OR_GUEST_REQUIRED: string;
    MODERATOR_PIN_OR_GUEST_PIN_REQUIRED: string;
    MODERATOR_REQUIRED: string;
    USER_NOT_MEMBER_OF_ROOM: string;
    NEW_LOCUS_ERROR: string;
    NETWORK_UNAVAILABLE: string;
    MEETING_UNAVAILABLE: string;
    MEETING_ID_INVALID: string;
    MEETING_SITE_INVALID: string;
    LOCUS_INVALID_JOINTIME: string;
    LOBBY_EXPIRED: string;
    MEDIA_CONNECTION_LOST_PAIRED: string;
    PHONE_NUMBER_NOT_A_NUMBER: string;
    PHONE_NUMBER_TOO_LONG: string;
    INVALID_DIALABLE_KEY: string;
    ONE_ON_ONE_TO_SELF_NOT_ALLOWED: string;
    REMOVED_PARTICIPANT: string;
    MEETING_LINK_NOT_FOUND: string;
    PHONE_NUMBER_TOO_SHORT_AFTER_IDD: string;
    INVALID_INVITEE_ADDRESS: string;
    PMR_USER_ACCOUNT_LOCKED_OUT: string;
    GUEST_FORBIDDEN: string;
    PMR_ACCOUNT_SUSPENDED: string;
    EMPTY_PHONE_NUMBER_OR_COUNTRY_CODE: string;
    CONVERSATION_NOT_FOUND: string;
    SIP_CALLEE_BUSY: string;
    SIP_CALLEE_NOT_FOUND: string;
    START_RECORDING_FAILED: string;
    RECORDING_IN_PROGRESS_FAILED: string;
    MEETING_INFO_LOOKUP_ERROR: string;
    CALL_FULL_ADD_GUEST: string;
    REQUIRE_WEBEX_LOGIN: string;
    USER_NOT_ALLOWED_ACCESS_MEETING: string;
    USER_NEEDS_ACTIVATION: string;
    SIGN_UP_INVALID_EMAIL: string;
    UNKNOWN_ERROR: string;
    NO_MEDIA_FOUND: string;
    STREAM_ERROR_NO_MEDIA: string;
    CAMERA_PERMISSION_DENIED: string;
    FRAUD_DETECTION: string;
    E2EE_NOT_SUPPORTED: string;
    LOCUS_LOBBY_FULL_CMR: string;
    USER_NOT_INVITED_TO_JOIN: string;
    MISSING_ROAP_ANSWER: string;
    DTLS_HANDSHAKE_FAILED: string;
    ICE_FAILED_WITHOUT_TURN_TLS: string;
    ICE_FAILED_WITH_TURN_TLS: string;
    SDP_OFFER_CREATION_ERROR: string;
    SDP_OFFER_CREATION_ERROR_MISSING_CODEC: string;
};
export declare const SERVICE_ERROR_CODES_TO_CLIENT_ERROR_CODES_MAP: {
    58400: number;
    99002: number;
    99009: number;
    58500: number;
    400001: number;
    403004: number;
    403028: number;
    403032: number;
    403034: number;
    403036: number;
    403038: number;
    403040: number;
    403041: number;
    403047: number;
    403408: number;
    403043: number;
    403048: number;
    403049: number;
    403100: number;
    403101: number;
    403102: number;
    403103: number;
    403104: number;
    404001: number;
    404006: number;
    423001: number;
    423005: number;
    423006: number;
    423010: number;
    423012: number;
    423013: number;
    429005: number;
    2403001: number;
    2403002: number;
    2403003: number;
    2403004: number;
    2403018: number;
    2403019: number;
    2423003: number;
    2423004: number;
    2423005: number;
    2423006: number;
    2423016: number;
    2423017: number;
    2423018: number;
    2423012: number;
    2423021: number;
    2423007: number;
    2403010: number;
    2403014: number;
    2403015: number;
    2423010: number;
    2400008: number;
    2400011: number;
    2400012: number;
    2403007: number;
    2401002: number;
    2404002: number;
    2400009: number;
    2400025: number;
    2423009: number;
    2403022: number;
    2423008: number;
    2400006: number;
    2400014: number;
    2404001: number;
    2403025: number;
    2405001: number;
    2409005: number;
    2409062: number;
    2423025: number;
    100002: number;
    100007: number;
    100001: number;
    100006: number;
    100005: number;
    100004: number;
};
export declare const CLIENT_ERROR_CODE_TO_ERROR_PAYLOAD: Record<number, Partial<ClientEventError>>;
export declare const CALL_DIAGNOSTIC_EVENT_FAILED_TO_SEND = "js_sdk_call_diagnostic_event_failed_to_send";
