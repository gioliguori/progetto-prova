{"version":3,"names":["_webexCore","require","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","_Reflect$construct","arguments","apply","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","e","CallDiagnosticLatencies","exports","_WebexPlugin","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","_defineProperty2","_assertThisInitialized2","latencyTimestamps","_map","precomputedLatencies","_createClass2","key","value","clearTimestamps","clear","setMeetingId","meetingId","getMeeting","webex","meetings","meetingCollection","get","undefined","saveTimestamp","_ref","_ref$value","Date","getTime","_ref$options","options","saveFirstTimestampOnly","set","saveLatency","accumulate","existingValue","measureLatency","callback","_this2","start","performance","now","finally","has","getDiffBetweenTimestamps","a","b","end","getMeetingInfoReqResp","getShowInterstitialTime","getU2CTime","u2cLatency","Math","floor","getRegisterWDMDeviceJMT","getCallInitJoinReq","getJoinReqResp","getTurnDiscoveryTime","getLocalSDPGenRemoteSDPRecv","getICESetupTime","getAudioICESetupTime","getVideoICESetupTime","getShareICESetupTime","getStayLobbyTime","getPageJMT","getDownloadTimeJMT","getClickToInterstitial","getInterstitialToJoinOK","getCallInitMediaEngineReady","getInterstitialToMediaOKJMT","interstitialJoinClickTimestamp","connectedMedia","lobbyTime","getTotalJMT","clickToInterstitial","interstitialToJoinOk","getJoinConfJMT","joinReqResp","ICESetupTime","getTotalMediaJMT","joinConfJMT","_this$getMeeting","totalMediaJMT","allowMediaInLobby","getClientJMT","getAudioJoinRespRxStart","getVideoJoinRespRxStart","getReachabilityClustersReqResp","reachablityClusterReqResp","getAudioJoinRespTxStart","getVideoJoinRespTxStart","getExchangeCITokenJMT","exchangeCITokenJMT","getRefreshCaptchaReqResp","refreshCaptchaReqResp","getDownloadIntelligenceModelsReqResp","downloadIntelligenceModelsReqResp","getOtherAppApiReqResp","otherAppApiJMT","WebexPlugin"],"sources":["call-diagnostic-metrics-latencies.ts"],"sourcesContent":["/* eslint-disable class-methods-use-this */\n/* eslint-disable valid-jsdoc */\nimport {WebexPlugin} from '@webex/webex-core';\n\nimport {MetricEventNames, PreComputedLatencies} from '../metrics.types';\n\n// we only care about client event and feature event for now\n\n/**\n * @description Helper class to store latencies timestamp and to calculate various latencies for CA.\n * @exports\n * @class CallDiagnosticLatencies\n */\nexport default class CallDiagnosticLatencies extends WebexPlugin {\n  latencyTimestamps: Map<MetricEventNames, number>;\n  precomputedLatencies: Map<PreComputedLatencies, number>;\n  // meetingId that the current latencies are for\n  private meetingId?: string;\n\n  /**\n   * @constructor\n   */\n  constructor(...args) {\n    super(...args);\n    this.latencyTimestamps = new Map();\n    this.precomputedLatencies = new Map();\n  }\n\n  /**\n   * Clear timestamps\n   */\n  public clearTimestamps() {\n    this.latencyTimestamps.clear();\n    this.precomputedLatencies.clear();\n  }\n\n  /**\n   * Associate current latencies with a meeting id\n   * @param meetingId\n   */\n  private setMeetingId(meetingId: string) {\n    this.meetingId = meetingId;\n  }\n\n  /**\n   * Returns the meeting object associated with current latencies\n   * @returns meeting object\n   */\n  private getMeeting() {\n    if (this.meetingId) {\n      // @ts-ignore\n      return this.webex.meetings.meetingCollection.get(this.meetingId);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Store timestamp value\n   * @param key - key\n   * @param value - value\n   * @param options - store options\n   * @throws\n   * @returns\n   */\n  public saveTimestamp({\n    key,\n    value = new Date().getTime(),\n    options = {},\n  }: {\n    key: MetricEventNames;\n    value?: number;\n    options?: {meetingId?: string};\n  }) {\n    // save the meetingId so we can use the meeting object in latency calculations if needed\n    const {meetingId} = options;\n    if (meetingId) {\n      this.setMeetingId(meetingId);\n    }\n    // for some events we're only interested in the first timestamp not last\n    // as these events can happen multiple times\n    if (\n      key === 'client.media.rx.start' ||\n      key === 'client.media.tx.start' ||\n      key === 'internal.client.meetinginfo.request' ||\n      key === 'internal.client.meetinginfo.response'\n    ) {\n      this.saveFirstTimestampOnly(key, value);\n    } else {\n      this.latencyTimestamps.set(key, value);\n    }\n  }\n\n  /**\n   * Store precomputed latency value\n   * @param key - key\n   * @param value - value\n   * @param accumulate - when it is true, it overwrites existing value with sum of the current value and the new measurement otherwise just store the new measurement\n   * @throws\n   * @returns\n   */\n  public saveLatency(key: PreComputedLatencies, value: number, accumulate = false) {\n    const existingValue = accumulate ? this.precomputedLatencies.get(key) || 0 : 0;\n    this.precomputedLatencies.set(key, value + existingValue);\n  }\n\n  /**\n   * Measure latency for a request\n   * @param callback - callback for which you would like to measure latency\n   * @param key - key\n   * @param accumulate - when it is true, it overwrites existing value with sum of the current value and the new measurement otherwise just store the new measurement\n   * @returns\n   */\n  public measureLatency(\n    callback: () => Promise<unknown>,\n    key: PreComputedLatencies,\n    accumulate = false\n  ) {\n    const start = performance.now();\n\n    return callback().finally(() => {\n      this.saveLatency(key, performance.now() - start, accumulate);\n    });\n  }\n\n  /**\n   * Store only the first timestamp value for the given key\n   * @param key - key\n   * @param  value -value\n   * @throws\n   * @returns\n   */\n  saveFirstTimestampOnly(key: MetricEventNames, value: number = new Date().getTime()) {\n    if (this.latencyTimestamps.has(key)) {\n      return;\n    }\n    this.latencyTimestamps.set(key, value);\n  }\n\n  /**\n   * Helper to calculate end - start\n   * @param a start\n   * @param b end\n   * @returns latency\n   */\n  public getDiffBetweenTimestamps(a: MetricEventNames, b: MetricEventNames) {\n    const start = this.latencyTimestamps.get(a);\n    const end = this.latencyTimestamps.get(b);\n    if (start && end) {\n      return end - start;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Meeting Info Request\n   * @note Meeting Info request happen not just in the join phase. CA requires\n   * metrics around meeting info request that are only part of join phase.\n   * This internal.* event is used to track the real timestamps\n   * (when the actual request/response happen). This is because the actual CA event is\n   * sent inside the join method on the meeting object based on some logic, but that's not exactly when\n   * those events are actually fired. The logic only confirms that they have happened, and we send them over.\n   * @returns - latency\n   */\n  public getMeetingInfoReqResp() {\n    return this.getDiffBetweenTimestamps(\n      'internal.client.meetinginfo.request',\n      'internal.client.meetinginfo.response'\n    );\n  }\n\n  /**\n   * Interstitial Time\n   * @returns - latency\n   */\n  public getShowInterstitialTime() {\n    return this.getDiffBetweenTimestamps(\n      'client.interstitial-window.start-launch',\n      'internal.client.interstitial-window.click.joinbutton'\n    );\n  }\n\n  /**\n   * getU2CTime\n   * @returns - latency\n   */\n  public getU2CTime() {\n    const u2cLatency = this.precomputedLatencies.get('internal.get.u2c.time');\n\n    return u2cLatency ? Math.floor(u2cLatency) : undefined;\n  }\n\n  /**\n   * Device Register Time\n   * @returns - latency\n   */\n  public getRegisterWDMDeviceJMT() {\n    return this.getDiffBetweenTimestamps(\n      'internal.register.device.request',\n      'internal.register.device.response'\n    );\n  }\n\n  /**\n   * Call Init Join Request\n   * @returns - latency\n   */\n  public getCallInitJoinReq() {\n    return this.getDiffBetweenTimestamps(\n      'internal.client.interstitial-window.click.joinbutton',\n      'client.locus.join.request'\n    );\n  }\n\n  /**\n   * Locus Join Request\n   * @returns - latency\n   */\n  public getJoinReqResp() {\n    return this.getDiffBetweenTimestamps('client.locus.join.request', 'client.locus.join.response');\n  }\n\n  /**\n   * Time taken to do turn discovery\n   * @returns - latency\n   */\n  public getTurnDiscoveryTime() {\n    return this.getDiffBetweenTimestamps(\n      'internal.client.add-media.turn-discovery.start',\n      'internal.client.add-media.turn-discovery.end'\n    );\n  }\n\n  /**\n   * Local SDP Generated Remote SDP REceived\n   * @returns - latency\n   */\n  public getLocalSDPGenRemoteSDPRecv() {\n    return this.getDiffBetweenTimestamps(\n      'client.media-engine.local-sdp-generated',\n      'client.media-engine.remote-sdp-received'\n    );\n  }\n\n  /**\n   * ICE Setup Time\n   * @returns - latency\n   */\n  public getICESetupTime() {\n    return this.getDiffBetweenTimestamps('client.ice.start', 'client.ice.end');\n  }\n\n  /**\n   * Audio ICE time\n   * @returns - latency\n   */\n  public getAudioICESetupTime() {\n    return this.getDiffBetweenTimestamps('client.ice.start', 'client.ice.end');\n  }\n\n  /**\n   * Video ICE Time\n   * @returns - latency\n   */\n  public getVideoICESetupTime() {\n    return this.getDiffBetweenTimestamps('client.ice.start', 'client.ice.end');\n  }\n\n  /**\n   * Share ICE Time\n   * @returns - latency\n   */\n  public getShareICESetupTime() {\n    return this.getDiffBetweenTimestamps('client.ice.start', 'client.ice.end');\n  }\n\n  /**\n   * Stay Lobby Time\n   * @returns - latency\n   */\n  public getStayLobbyTime() {\n    return this.getDiffBetweenTimestamps(\n      'client.locus.join.response',\n      'internal.host.meeting.participant.admitted'\n    );\n  }\n\n  /**\n   * Page JMT\n   * @returns - latency\n   */\n  public getPageJMT() {\n    return this.precomputedLatencies.get('internal.client.pageJMT') || undefined;\n  }\n\n  /**\n   * Download Time JMT\n   * @returns - latency\n   */\n  public getDownloadTimeJMT() {\n    return this.precomputedLatencies.get('internal.download.time') || undefined;\n  }\n\n  /**\n   * Click To Interstitial\n   * @returns - latency\n   */\n  public getClickToInterstitial() {\n    // for normal join (where green join button exists before interstitial, i.e reminder, space list etc)\n    if (this.latencyTimestamps.get('internal.client.meeting.click.joinbutton')) {\n      return this.getDiffBetweenTimestamps(\n        'internal.client.meeting.click.joinbutton',\n        'internal.client.meeting.interstitial-window.showed'\n      );\n    }\n\n    // for cross launch and guest flows\n    return this.precomputedLatencies.get('internal.click.to.interstitial') || undefined;\n  }\n\n  /**\n   * Interstitial To Join Ok\n   * @returns - latency\n   */\n  public getInterstitialToJoinOK() {\n    return this.getDiffBetweenTimestamps(\n      'internal.client.interstitial-window.click.joinbutton',\n      'client.locus.join.response'\n    );\n  }\n\n  /**\n   * Call Init To MediaEngineReady\n   * @returns - latency\n   */\n  public getCallInitMediaEngineReady() {\n    return this.getDiffBetweenTimestamps(\n      'internal.client.interstitial-window.click.joinbutton',\n      'client.media-engine.ready'\n    );\n  }\n\n  /**\n   * Interstitial To Media Ok\n   * @returns - latency\n   */\n  public getInterstitialToMediaOKJMT() {\n    const interstitialJoinClickTimestamp = this.latencyTimestamps.get(\n      'internal.client.interstitial-window.click.joinbutton'\n    );\n\n    // get the first timestamp\n    const connectedMedia = this.latencyTimestamps.get('client.ice.end');\n\n    const lobbyTime = this.getStayLobbyTime() || 0;\n\n    if (interstitialJoinClickTimestamp && connectedMedia) {\n      return connectedMedia - interstitialJoinClickTimestamp - lobbyTime;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Total JMT\n   * @returns - latency\n   */\n  public getTotalJMT() {\n    const clickToInterstitial = this.getClickToInterstitial();\n    const interstitialToJoinOk = this.getInterstitialToJoinOK();\n\n    if (clickToInterstitial && interstitialToJoinOk) {\n      return clickToInterstitial + interstitialToJoinOk;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Join Conf JMT\n   * @returns - latency\n   */\n  public getJoinConfJMT() {\n    const joinReqResp = this.getJoinReqResp();\n    const ICESetupTime = this.getICESetupTime();\n\n    if (joinReqResp && ICESetupTime) {\n      return joinReqResp + ICESetupTime;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Total Media JMT\n   * @returns - latency\n   */\n  public getTotalMediaJMT() {\n    const clickToInterstitial = this.getClickToInterstitial();\n    const interstitialToJoinOk = this.getInterstitialToJoinOK();\n    const joinConfJMT = this.getJoinConfJMT();\n    const lobbyTime = this.getStayLobbyTime();\n\n    if (clickToInterstitial && interstitialToJoinOk && joinConfJMT) {\n      const totalMediaJMT = clickToInterstitial + interstitialToJoinOk + joinConfJMT;\n      if (this.getMeeting()?.allowMediaInLobby) {\n        return totalMediaJMT;\n      }\n\n      return totalMediaJMT - lobbyTime;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Client JMT\n   * @returns - latency\n   */\n  public getClientJMT() {\n    const interstitialToJoinOk = this.getInterstitialToJoinOK();\n    const joinConfJMT = this.getJoinConfJMT();\n\n    if (interstitialToJoinOk && joinConfJMT) {\n      return interstitialToJoinOk - joinConfJMT;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Audio setup delay receive\n   */\n  public getAudioJoinRespRxStart() {\n    return this.getDiffBetweenTimestamps('client.locus.join.response', 'client.media.rx.start');\n  }\n\n  /**\n   * Video setup delay receive\n   */\n  public getVideoJoinRespRxStart() {\n    return this.getDiffBetweenTimestamps('client.locus.join.response', 'client.media.rx.start');\n  }\n\n  /**\n   * Total latency for all get cluster request.\n   */\n  public getReachabilityClustersReqResp() {\n    const reachablityClusterReqResp = this.precomputedLatencies.get('internal.get.cluster.time');\n\n    return reachablityClusterReqResp ? Math.floor(reachablityClusterReqResp) : undefined;\n  }\n\n  /**\n   * Audio setup delay transmit\n   */\n  public getAudioJoinRespTxStart() {\n    return this.getDiffBetweenTimestamps('client.locus.join.response', 'client.media.tx.start');\n  }\n\n  /**\n   * Video setup delay transmit\n   */\n  public getVideoJoinRespTxStart() {\n    return this.getDiffBetweenTimestamps('client.locus.join.response', 'client.media.tx.start');\n  }\n\n  /**\n   * Total latency for all exchange ci token.\n   */\n  public getExchangeCITokenJMT() {\n    const exchangeCITokenJMT = this.precomputedLatencies.get('internal.exchange.ci.token.time');\n\n    return exchangeCITokenJMT ? Math.floor(exchangeCITokenJMT) : undefined;\n  }\n\n  /**\n   * Total latency for all refresh captcha requests.\n   */\n  public getRefreshCaptchaReqResp() {\n    const refreshCaptchaReqResp = this.precomputedLatencies.get('internal.refresh.captcha.time');\n\n    return refreshCaptchaReqResp ? Math.floor(refreshCaptchaReqResp) : undefined;\n  }\n\n  /**\n   * Get the latency for downloading intelligence models.\n   * @returns - latency\n   */\n  public getDownloadIntelligenceModelsReqResp() {\n    const downloadIntelligenceModelsReqResp = this.precomputedLatencies.get(\n      'internal.api.fetch.intelligence.models'\n    );\n\n    return downloadIntelligenceModelsReqResp\n      ? Math.floor(downloadIntelligenceModelsReqResp)\n      : undefined;\n  }\n\n  /**\n   * Get the total latency for all other app API requests.\n   * Excludes meeting info, because it's measured separately.\n   * @returns - latency\n   */\n  public getOtherAppApiReqResp() {\n    const otherAppApiJMT = this.precomputedLatencies.get('internal.other.app.api.time');\n\n    return otherAppApiJMT > 0 ? Math.floor(otherAppApiJMT) : undefined;\n  }\n}\n"],"mappings":"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"}