{"version":3,"names":["_webexCore","require","_callDiagnosticMetrics","_interopRequireDefault","_callDiagnosticMetricsLatencies","_callDiagnosticMetrics2","_utils","_class","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","_Reflect$construct","arguments","apply","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","e","Metrics","_WebexPlugin","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","_defineProperty2","_assertThisInitialized2","callDiagnosticLatencies","CallDiagnosticLatencies","parent","webex","onReady","_createClass2","key","value","_this2","once","callDiagnosticMetrics","CallDiagnosticMetrics","submitInternalEvent","_ref","name","payload","options","clearTimestamps","saveTimestamp","submitBehavioralEvent","_ref2","Error","submitOperationalEvent","_ref3","submitMQE","_ref4","submitFeatureEvent","_ref5","submitClientEvent","_ref6","logger","log","_promise","resolve","meetingId","clientMetricsAliasUser","preLoginId","_this3","request","method","api","resource","headers","body","qs","alias","then","res","catch","err","error","generateCommonErrorMetadata","reject","_buildClientEventFetchRequestOptions","_asyncToGenerator2","_regenerator","mark","_callee","_ref7","wrap","_callee$","_context","prev","next","abrupt","buildClientEventFetchRequestOptions","stop","_x","setMetricTimingsAndFetch","setTimingsAndFetch","setMetricTimings","isServiceErrorExpected","serviceErrorCode","WebexPlugin","_default","exports"],"sources":["new-metrics.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable valid-jsdoc */\n\n// @ts-ignore\nimport {WebexPlugin} from '@webex/webex-core';\n\nimport CallDiagnosticMetrics from './call-diagnostic/call-diagnostic-metrics';\nimport {\n  RecursivePartial,\n  ClientEvent,\n  FeatureEvent,\n  BehavioralEvent,\n  OperationalEvent,\n  MediaQualityEvent,\n  InternalEvent,\n  SubmitClientEventOptions,\n} from './metrics.types';\nimport CallDiagnosticLatencies from './call-diagnostic/call-diagnostic-metrics-latencies';\nimport {setMetricTimings} from './call-diagnostic/call-diagnostic-metrics.util';\nimport {generateCommonErrorMetadata} from './utils';\n\n/**\n * Metrics plugin to centralize all types of metrics.\n * @class\n */\nclass Metrics extends WebexPlugin {\n  // eslint-disable-next-line no-use-before-define\n  static instance: Metrics;\n\n  // Call Diagnostic latencies\n  callDiagnosticLatencies: CallDiagnosticLatencies;\n  // Helper classes to handle the different types of metrics\n  callDiagnosticMetrics: CallDiagnosticMetrics;\n\n  /**\n   * Constructor\n   * @param args\n   * @constructor\n   * @private\n   * @returns\n   */\n  constructor(...args) {\n    super(...args);\n\n    // @ts-ignore\n    this.callDiagnosticLatencies = new CallDiagnosticLatencies({}, {parent: this.webex});\n    this.onReady();\n  }\n\n  /**\n   * On Ready\n   */\n  private onReady() {\n    // @ts-ignore\n    this.webex.once('ready', () => {\n      // @ts-ignore\n      this.callDiagnosticMetrics = new CallDiagnosticMetrics({}, {parent: this.webex});\n    });\n  }\n\n  /**\n   * Used for internal purposes only\n   * @param args\n   */\n  submitInternalEvent({\n    name,\n    payload,\n    options,\n  }: {\n    name: InternalEvent['name'];\n    payload?: RecursivePartial<InternalEvent['payload']>;\n    options?: any;\n  }) {\n    if (name === 'internal.reset.join.latencies') {\n      this.callDiagnosticLatencies.clearTimestamps();\n    } else {\n      this.callDiagnosticLatencies.saveTimestamp({key: name});\n    }\n  }\n\n  /**\n   * Behavioral event\n   * @param args\n   */\n  submitBehavioralEvent({\n    name,\n    payload,\n    options,\n  }: {\n    name: BehavioralEvent['name'];\n    payload?: RecursivePartial<BehavioralEvent['payload']>;\n    options?: any;\n  }) {\n    this.callDiagnosticLatencies.saveTimestamp({key: name});\n    throw new Error('Not implemented.');\n  }\n\n  /**\n   * Operational event\n   * @param args\n   */\n  submitOperationalEvent({\n    name,\n    payload,\n    options,\n  }: {\n    name: OperationalEvent['name'];\n    payload?: RecursivePartial<OperationalEvent['payload']>;\n    options?: any;\n  }) {\n    throw new Error('Not implemented.');\n  }\n\n  /**\n   * Call Analyzer: Media Quality Event\n   * @param args\n   */\n  submitMQE({\n    name,\n    payload,\n    options,\n  }: {\n    name: MediaQualityEvent['name'];\n    payload: RecursivePartial<MediaQualityEvent['payload']> & {\n      intervals: MediaQualityEvent['payload']['intervals'];\n    };\n    options: any;\n  }) {\n    this.callDiagnosticLatencies.saveTimestamp({key: name});\n    this.callDiagnosticMetrics.submitMQE({name, payload, options});\n  }\n\n  /**\n   * Call Analyzer: Feature Usage Event\n   * @param args\n   */\n  submitFeatureEvent({\n    name,\n    payload,\n    options,\n  }: {\n    name: FeatureEvent['name'];\n    payload?: RecursivePartial<FeatureEvent['payload']>;\n    options: any;\n  }) {\n    throw new Error('Not implemented.');\n  }\n\n  /**\n   * Call Analyzer: Client Event\n   * @public\n   * @param args\n   */\n  public submitClientEvent({\n    name,\n    payload,\n    options,\n  }: {\n    name: ClientEvent['name'];\n    payload?: RecursivePartial<ClientEvent['payload']>;\n    options?: SubmitClientEventOptions;\n  }): Promise<any> {\n    if (!this.callDiagnosticLatencies || !this.callDiagnosticMetrics) {\n      // @ts-ignore\n      this.webex.logger.log(\n        `NewMetrics: @submitClientEvent. Attempted to submit before webex.ready. Event name: ${name}`\n      );\n\n      return Promise.resolve();\n    }\n    this.callDiagnosticLatencies.saveTimestamp({\n      key: name,\n      options: {meetingId: options?.meetingId},\n    });\n\n    return this.callDiagnosticMetrics.submitClientEvent({name, payload, options});\n  }\n\n  /**\n   * Issue request to alias a user's pre-login ID with their CI UUID\n   * @param {string} preLoginId\n   * @returns {Object} HttpResponse object\n   */\n  public clientMetricsAliasUser(preLoginId: string) {\n    // @ts-ignore\n    return this.webex\n      .request({\n        method: 'POST',\n        api: 'metrics',\n        resource: 'clientmetrics',\n        headers: {\n          'x-prelogin-userid': preLoginId,\n        },\n        body: {},\n        qs: {\n          alias: true,\n        },\n      })\n      .then((res) => {\n        // @ts-ignore\n        this.webex.logger.log(`NewMetrics: @clientMetricsAliasUser. Request successful.`);\n\n        return res;\n      })\n      .catch((err) => {\n        // @ts-ignore\n        this.logger.error(\n          `NewMetrics: @clientMetricsAliasUser. Request failed:`,\n          `err: ${generateCommonErrorMetadata(err)}`\n        );\n\n        return Promise.reject(err);\n      });\n  }\n\n  /**\n   * Returns a promise that will resolve to fetch options for submitting a metric.\n   *\n   * This is to support quickly submitting metrics when the browser/tab is closing.\n   * Calling submitClientEvent will not work because there some async steps that will\n   * not complete before the browser is closed.  Instead, we pre-gather all the\n   * information/options needed for the request(s), and then simply and quickly\n   * fire the fetch(es) when beforeUnload is triggered.\n   *\n   * We must use fetch instead of request because fetch has a keepalive option that\n   * allows the request it to outlive the page.\n   *\n   * Note: the timings values will be wrong, but setMetricTimingsAndFetch() will\n   * properly adjust them before submitting.\n   *\n   * @public\n   * @param {Object} arg\n   * @param {String} arg.name - event name\n   * @param {Object} arg.payload - event payload\n   * @param {Object} arg.options - other options\n   * @returns {Promise} promise that resolves to options to be used with fetch\n   */\n  public async buildClientEventFetchRequestOptions({\n    name,\n    payload,\n    options,\n  }: {\n    name: ClientEvent['name'];\n    payload?: RecursivePartial<ClientEvent['payload']>;\n    options?: SubmitClientEventOptions;\n  }): Promise<any> {\n    return this.callDiagnosticMetrics.buildClientEventFetchRequestOptions({\n      name,\n      payload,\n      options,\n    });\n  }\n\n  /**\n   * Submits a metric from pre-built request options via the fetch API. Updates\n   * the \"$timings\" and \"originTime\" values to Date.now() since the existing times\n   * were set when the options were built (not submitted).\n\n   * @param {any} options - the pre-built request options for submitting a metric\n   * @returns {Promise} promise that resolves to the response object\n   */\n  public setMetricTimingsAndFetch(options: any): Promise<any> {\n    // @ts-ignore\n    return this.webex.setTimingsAndFetch(setMetricTimings(options));\n  }\n\n  /**\n   * Returns true if the specified serviceErrorCode maps to an expected error.\n   * @param {number} serviceErrorCode the service error code\n   * @returns {boolean}\n   */\n  public isServiceErrorExpected(serviceErrorCode: number): boolean {\n    return this.callDiagnosticMetrics.isServiceErrorExpected(serviceErrorCode);\n  }\n}\n\nexport default Metrics;\n"],"mappings":"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"}