{"version":3,"names":["_common","require","_webexCore","_commonTimers","_metrics","_interopRequireDefault","_constants","_featuresModel","_ipNetworkDetector","_dec","_dec2","_dec3","_dec4","_dec5","_obj","ownKeys","e","r","t","_Object$keys","_Object$getOwnPropertySymbols","o","filter","_Object$getOwnPropertyDescriptor2","enumerable","push","apply","_objectSpread","arguments","length","Object","forEach","_defineProperty2","default","_Object$getOwnPropertyDescriptors","_Object$defineProperties","_Object$defineProperty","decider","config","ephemeral","Device","WebexPlugin","extend","waitForValue","deprecated","persist","namespace","extraProperties","idAttribute","children","features","FeaturesModel","ipNetworkDetector","IpNetworkDetector","props","clientMessagingGiphy","customerCompanyName","customerLogoUrl","deviceType","helpUrl","intranetInactivityDuration","intranetInactivityCheckUrl","inNetworkInactivityDuration","ecmEnabledForAllUsers","ecmSupportedStorageProviders","modificationTime","navigationBarColor","partnerCompanyName","partnerLogoUrl","peopleInsightsEnabled","reportingSiteDesc","reportingSiteUrl","searchEncryptionKeyUrl","showSupportText","supportProviderCompanyName","supportProviderLogoUrl","url","userId","webFileShareControl","webSocketUrl","whiteboardFileShareControl","derived","registered","deps","fn","session","logoutTimer","lastUserActivityDate","isReachabilityChecked","isInMeeting","isInNetwork","meetingStarted","webex","trigger","meetingEnded","refresh","_this","logger","info","canRegister","then","register","body","serialize","mediaCluster","etag","ttl","ephemeralDeviceTTL","headers","defaults","request","method","uri","response","processRegistrationSuccess","catch","reason","statusCode","clear","_promise","reject","_this2","internal","newMetrics","callDiagnosticMetrics","setDeviceInfo","submitInternalEvent","name","service","resource","error","metrics","submitClientMetrics","METRICS","JS_SDK_WDM_REGISTRATION_SUCCESSFUL","JS_SDK_WDM_REGISTRATION_FAILED","fields","unregister","_this3","warn","resolve","services","waitForCatalog","canRegisterWaitDuration","get","Error","join","checkNetworkReachability","_this4","resetLogoutTimer","trackingid","_len","args","Array","_key","_apply","prototype","getWebSocketUrl","_this5","wait","undefined","waitForRegistration","convertUrlToPriorityHostUrl","message","wsUrl","_this6","serviceHostMap","_ref","user","reset","entitlement","set","delay","refreshTimer","safeSetTimeout","DEVICE_EVENT_REGISTRATION_SUCCESS","clearTimeout","off","unset","enableInactivityEnforcement","setLogoutTimer","duration","_this7","on","logout","_this8","timeout","timeoutTimer","once","markUrlFailedAndGetNew","markFailedUrl","initialize","_this9","_len2","_key2","FEATURE_COLLECTION_NAMES","collectionName","concat","model","value","options","listenTo","_now","version","_applyDecoratedDescriptor2","oneFlight","_getOwnPropertyDescriptor","_default","exports"],"sources":["device.js"],"sourcesContent":["// Internal Dependencies\nimport {deprecated, oneFlight} from '@webex/common';\nimport {persist, waitForValue, WebexPlugin} from '@webex/webex-core';\nimport {safeSetTimeout} from '@webex/common-timers';\n\nimport METRICS from './metrics';\nimport {FEATURE_COLLECTION_NAMES, DEVICE_EVENT_REGISTRATION_SUCCESS} from './constants';\nimport FeaturesModel from './features/features-model';\nimport IpNetworkDetector from './ipNetworkDetector';\n\n/**\n * Determine if the plugin should be initialized based on cached storage.\n *\n * @returns {boolean} - If the device is ephemeral.\n */\nfunction decider() {\n  return !this.config.ephemeral;\n}\n\nconst Device = WebexPlugin.extend({\n  // Ampersand property members.\n\n  namespace: 'Device',\n\n  // Allow for extra properties to prevent the plugin from failing due to\n  // **WDM** service DTO changes.\n  extraProperties: 'allow',\n\n  idAttribute: 'url',\n\n  children: {\n    /**\n     * The class object that contains all of the feature collections.\n     *\n     * @type {FeaturesModel}\n     */\n    features: FeaturesModel,\n    /**\n     * Helper class for detecting what IP network version (ipv4, ipv6) we're on.\n     *\n     * @type {IpNetworkDetector}\n     */\n    ipNetworkDetector: IpNetworkDetector,\n  },\n\n  /**\n   * A collection of device properties mostly assigned by the retrieved DTO from\n   * the **WDM** service that are mapped against the ampersand properties.\n   *\n   * @type {Object}\n   */\n  props: {\n    /**\n     * This property determines whether or not giphy support is enabled.\n     *\n     * @type {'ALLOW' | 'BLOCK'}\n     */\n    clientMessagingGiphy: 'string',\n\n    /**\n     * This property should store the company name.\n     *\n     * @type {string}\n     */\n    customerCompanyName: 'string',\n\n    /**\n     * This property should store the logo url.\n     *\n     * @type {string}\n     */\n    customerLogoUrl: 'string',\n\n    /**\n     * This property doesn't have any real values, but is sent during device\n     * refresh to prevent the **wdm** service from falling back to an iOS device\n     * type.\n     *\n     * @type {string}\n     */\n    deviceType: 'string',\n\n    /**\n     * This property should store the help url.\n     *\n     * @type {string}\n     */\n    helpUrl: 'string',\n\n    /**\n     * This property should store the intranet inactivity timer duration.\n     *\n     * @type {number}\n     */\n    intranetInactivityDuration: 'number',\n\n    /**\n     * This property stores the url required to validate if the device is able\n     * to actively reach the intranet network.\n     *\n     * @type {string}\n     */\n    intranetInactivityCheckUrl: 'string',\n\n    /**\n     * This property stores the inactivity timer duration, and could possibly\n     * deprecate the `intranetInactivityDuration` property.\n     *\n     * @type {number}\n     */\n    inNetworkInactivityDuration: 'number',\n\n    /**\n     * This property stores the ECM (external content management) enabled value\n     * for the whole organization.\n     *\n     * @type {boolean}\n     */\n    ecmEnabledForAllUsers: ['boolean', false, false],\n\n    /**\n     * This property stores an array of ECM (external content management)\n     * providers that are currently available.\n     *\n     * @returns {Array<string>}\n     */\n    ecmSupportedStorageProviders: ['array', false, () => []],\n\n    /**\n     * This property stores the modification time value retrieved from the\n     * **WDM** endpoint formatted as ISO 8601.\n     *\n     * @type {string}\n     */\n    modificationTime: 'string',\n\n    /**\n     * This property stores the navigation bar color.\n     *\n     * @type {string}\n     */\n    navigationBarColor: 'string',\n\n    /**\n     * This property stores the partner company's name when available.\n     *\n     * @type {string}\n     */\n    partnerCompanyName: 'string',\n\n    /**\n     * This property stores the partner company's logo when available.\n     *\n     * @type {string}\n     */\n    partnerLogoUrl: 'string',\n\n    /**\n     * This property stores the availability of people data from the **WDM**\n     * service.\n     *\n     * @type {boolean}\n     */\n    peopleInsightsEnabled: 'boolean',\n\n    /**\n     * This property stores the reporting site's description when available.\n     *\n     * @type {string}\n     */\n    reportingSiteDesc: 'string',\n\n    /**\n     * This property stores the reporting site's access url when available.\n     *\n     * @type {string}\n     */\n    reportingSiteUrl: 'string',\n\n    /**\n     * This property stores the encryption key url when available.\n     *\n     * @type {string}\n     */\n    searchEncryptionKeyUrl: 'string',\n\n    /**\n     * This property stores the availability of support-provided text from the\n     * **WDM** service.\n     *\n     * @type {boolean}\n     */\n    showSupportText: 'boolean',\n\n    /**\n     * This property stores the support provider's company name when available.\n     *\n     * @type {string}\n     */\n    supportProviderCompanyName: 'string',\n\n    /**\n     * This property stores the support provider's logo url when available.\n     *\n     * @type {string}\n     */\n    supportProviderLogoUrl: 'string',\n\n    /**\n     * This property stores the device's url retrieved from a registration\n     * request. This property gets set via the initial registration process by a\n     * `this.set()` method.\n     *\n     * @type {string}\n     */\n    url: 'string',\n\n    /**\n     * This property stores the device's userId uuid value, which can also be\n     * derived from the device's registerd user's userId retrieved from\n     * the **Hydra** service.\n     *\n     * @type {string}\n     */\n    userId: 'string',\n\n    /**\n     * This property stores whether or not file sharing is enabled\n     *\n     * @type {'BLOCK_BOTH' | 'BLOCK_UPLOAD'}\n     */\n    webFileShareControl: 'string',\n\n    /**\n     * This property stores the current web socket url used by the registered\n     * device.\n     *\n     * @type {string}\n     */\n    webSocketUrl: 'string',\n\n    /**\n     * This property stores the value indicating whether or not white board file\n     * sharing is enabled for the current device.\n     *\n     * @type {'ALLOW' | 'BLOCK'}\n     */\n    whiteboardFileShareControl: 'string',\n  },\n\n  /**\n   * A list of derived properties that populate based when their parent data\n   * available via the device's properties.\n   *\n   * @type {Object}\n   */\n  derived: {\n    /**\n     * This property determines if the current device is registered.\n     *\n     * @type {boolean}\n     */\n    registered: {\n      deps: ['url'],\n\n      /**\n       * Checks if the device is registered by validating that the url exists.\n       * Amperstand does not allow this to method to be written as an arrow\n       * function.\n       *\n       * @returns {boolean}\n       */\n      fn() {\n        return !!this.url;\n      },\n    },\n  },\n\n  /**\n   * Stores timer data as well as other state details.\n   *\n   * @type {Object}\n   */\n  session: {\n    /**\n     * This property stores the logout timer object\n     *\n     * @type {any}\n     */\n    logoutTimer: 'any',\n\n    /**\n     * This property stores the date for the last activity the user made\n     * with the current device.\n     *\n     * @type {number}\n     */\n    lastUserActivityDate: 'number',\n\n    /**\n     * This property stores whether or not the reachability check has been\n     * performed to prevent the reachability check from performing its\n     * operation more than once after a successful check.\n     *\n     * @returns {boolean}\n     */\n    isReachabilityChecked: ['boolean', false, false],\n\n    /**\n     * This property stores whether or not the current device is in a meeting\n     * to prevent an unneeded timeout of a meeting due to inactivity.\n     *\n     * @type {boolean}\n     */\n    isInMeeting: 'boolean',\n\n    /**\n     * This property identifies if the device is currently in network to prevent\n     * the `resetLogoutTimer()` method from being called repeatedly once its\n     * known client is connected to the organization's internal network.\n     *\n     * @type {boolean}\n     */\n    isInNetwork: 'boolean',\n  },\n\n  // Event method members.\n\n  /**\n   * Trigger meeting started event for webex instance. Used by web-client team.\n   *\n   * @returns {void}\n   */\n  meetingStarted() {\n    this.webex.trigger('meeting started');\n  },\n\n  /**\n   * Trigger meeting ended event for webex instance. Used by web-client team.\n   *\n   * @returns {void}\n   */\n  meetingEnded() {\n    this.webex.trigger('meeting ended');\n  },\n\n  // Registration method members\n\n  /* eslint-disable require-jsdoc */\n  /**\n   * Refresh the current registered device if able.\n   *\n   * @returns {Promise<void, Error>}\n   */\n  @oneFlight\n  @waitForValue('@')\n  refresh() {\n    this.logger.info('device: refreshing');\n\n    // Validate that the device can be registered.\n    return this.canRegister().then(() => {\n      // Validate if the device is not registered and register instead.\n      if (!this.registered) {\n        this.logger.info('device: device not registered, registering');\n\n        return this.register();\n      }\n\n      // Merge body configurations, overriding defaults.\n      const body = {\n        ...this.serialize(),\n        ...(this.config.body ? this.config.body : {}),\n      };\n\n      // Remove unneeded properties from the body object.\n      delete body.features;\n      delete body.mediaCluster;\n      delete body.etag;\n\n      // Append a ttl value if the device is marked as ephemeral.\n      if (this.config.ephemeral) {\n        body.ttl = this.config.ephemeralDeviceTTL;\n      }\n\n      // Merge header configurations, overriding defaults.\n      const headers = {\n        ...(this.config.defaults.headers ? this.config.defaults.headers : {}),\n        ...(this.config.headers ? this.config.headers : {}),\n        // If etag is sent, WDM will not send developer feature toggles unless they have changed\n        ...(this.etag ? {'If-None-Match': this.etag} : {}),\n      };\n\n      return this.request({\n        method: 'PUT',\n        uri: this.url,\n        body,\n        headers,\n      })\n        .then((response) => this.processRegistrationSuccess(response))\n        .catch((reason) => {\n          // Handle a 404 error, which indicates that the device is no longer\n          // valid and needs to be registered as a new device.\n          if (reason.statusCode === 404) {\n            this.logger.info('device: refresh failed, device is not valid');\n            this.logger.info('device: attempting to register a new device');\n\n            this.clear();\n\n            return this.register();\n          }\n\n          return Promise.reject(reason);\n        });\n    });\n  },\n\n  /**\n   * Register or refresh a device depending on the current device state. Device\n   * registration utilizes the services plugin to send the request to the\n   * **WDM** service.\n   *\n   * @returns {Promise<void, Error>}\n   */\n  @oneFlight\n  @waitForValue('@')\n  register() {\n    this.logger.info('device: registering');\n\n    this.webex.internal.newMetrics.callDiagnosticMetrics.setDeviceInfo(this);\n\n    // Validate that the device can be registered.\n    return this.canRegister().then(() => {\n      // Validate if the device is already registered and refresh instead.\n      if (this.registered) {\n        this.logger.info('device: device already registered, refreshing');\n\n        return this.refresh();\n      }\n\n      // Merge body configurations, overriding defaults.\n      const body = {\n        ...(this.config.defaults.body ? this.config.defaults.body : {}),\n        ...(this.config.body ? this.config.body : {}),\n      };\n\n      // Merge header configurations, overriding defaults.\n      const headers = {\n        ...(this.config.defaults.headers ? this.config.defaults.headers : {}),\n        ...(this.config.headers ? this.config.headers : {}),\n      };\n\n      // Append a ttl value if the device is marked as ephemeral\n      if (this.config.ephemeral) {\n        body.ttl = this.config.ephemeralDeviceTTL;\n      }\n      this.webex.internal.newMetrics.submitInternalEvent({\n        name: 'internal.register.device.request',\n      });\n\n      // This will be replaced by a `create()` method.\n      return this.request({\n        method: 'POST',\n        service: 'wdm',\n        resource: 'devices',\n        body,\n        headers,\n      })\n        .catch((error) => {\n          this.webex.internal.newMetrics.submitInternalEvent({\n            name: 'internal.register.device.response',\n          });\n\n          throw error;\n        })\n        .then((response) => {\n          // Do not add any processing of response above this as that will affect timestamp\n          this.webex.internal.newMetrics.submitInternalEvent({\n            name: 'internal.register.device.response',\n          });\n\n          this.webex.internal.metrics.submitClientMetrics(\n            METRICS.JS_SDK_WDM_REGISTRATION_SUCCESSFUL\n          );\n\n          return this.processRegistrationSuccess(response);\n        })\n        .catch((error) => {\n          this.webex.internal.metrics.submitClientMetrics(METRICS.JS_SDK_WDM_REGISTRATION_FAILED, {\n            fields: {error},\n          });\n          throw error;\n        });\n    });\n  },\n\n  /**\n   * Unregister the current registered device if available. Unregistering a\n   * device utilizes the services plugin to send the request to the **WDM**\n   * service.\n   *\n   * @returns {Promise<void, Error>}\n   */\n  @oneFlight\n  @waitForValue('@')\n  unregister() {\n    this.logger.info('device: unregistering');\n\n    if (!this.registered) {\n      this.logger.warn('device: not registered');\n\n      return Promise.resolve();\n    }\n\n    return this.request({\n      uri: this.url,\n      method: 'DELETE',\n    }).then(() => this.clear());\n  },\n  /* eslint-enable require-jsdoc */\n\n  // Helper method members\n\n  /**\n   * Determine if registration methods can be performed. This method utilizes\n   * the `services` plugin to confirm if the appropriate service urls are\n   * available for device registration.\n   *\n   * @returns {Promise<void, Error>}\n   */\n  canRegister() {\n    this.logger.info('device: validating if registration can occur');\n\n    // Destructure the services plugin for ease of reference.\n    const {services} = this.webex.internal;\n\n    // Wait for the postauth catalog to populate.\n    return services.waitForCatalog('postauth', this.config.canRegisterWaitDuration).then(() =>\n      // Validate that the service exists after waiting for the catalog.\n      services.get('wdm')\n        ? Promise.resolve()\n        : Promise.reject(\n            new Error(\n              [\n                'device: cannot register,',\n                \"'wdm' service is not available from the postauth catalog\",\n              ].join(' ')\n            )\n          )\n    );\n  },\n\n  /**\n   * Check if the device can currently reach the inactivity check url.\n   *\n   * @returns {Promise<void, Error>}\n   */\n  checkNetworkReachability() {\n    this.logger.info('device: checking network reachability');\n\n    // Validate if the device has been checked and reset the logout timer.\n    if (this.isReachabilityChecked) {\n      return Promise.resolve(this.resetLogoutTimer());\n    }\n\n    this.isReachabilityChecked = true;\n\n    // Validate if the device has a intranet checking url.\n    if (!this.intranetInactivityCheckUrl) {\n      this.isInNetwork = false;\n\n      return Promise.resolve(this.resetLogoutTimer());\n    }\n\n    // Clear unnecessary headers for reachability request.\n    const headers = {\n      'cisco-no-http-redirect': null,\n      'spark-user-agent': null,\n      trackingid: null,\n    };\n\n    // Send the network reachability request.\n    return this.request({\n      headers,\n      method: 'GET',\n      uri: this.intranetInactivityCheckUrl,\n    })\n      .then(() => {\n        this.isInNetwork = true;\n\n        return Promise.resolve(this.resetLogoutTimer());\n      })\n      .catch(() => {\n        this.logger.info('device: did not reach ping endpoint');\n        this.logger.info('device: triggering off-network timer');\n\n        this.isInNetwork = false;\n\n        return Promise.resolve(this.resetLogoutTimer());\n      });\n  },\n\n  /**\n   * Clears the registration ttl value if available.\n   *\n   * @param {Object} options - Values to be cleared.\n   * @returns {void}\n   */\n  clear(...args) {\n    this.logger.info('device: clearing registered device');\n\n    // Prototype the extended class in order to preserve the parent member.\n    Reflect.apply(WebexPlugin.prototype.clear, this, args);\n  },\n\n  /**\n   * Get the current websocket url with the appropriate priority host.\n   *\n   * @param {boolean} [wait=false] - Willing to wait on a valid url.\n   * @returns {Promise<string, Error>} - The priority-mapped web socket url.\n   */\n  getWebSocketUrl(wait = false) {\n    this.logger.info('device: getting the current websocket url');\n\n    // Destructure the services plugin for ease of reference.\n    const {services} = this.webex.internal;\n\n    // Validate if the method should wait for registration.\n    if (wait) {\n      return this.waitForRegistration()\n        .then(() => services.convertUrlToPriorityHostUrl(this.webSocketUrl))\n        .catch((error) => {\n          this.logger.warn(error.message);\n\n          return Promise.reject(new Error('device: failed to get the current websocket url'));\n        });\n    }\n\n    // Validate if the device is registered.\n    if (!this.registered) {\n      return Promise.reject(\n        new Error('device: cannot get websocket url, device is not registered')\n      );\n    }\n\n    // Attempt to collect the priority-host-mapped web socket URL.\n    const wsUrl = services.convertUrlToPriorityHostUrl(this.webSocketUrl);\n\n    // Validate that the url was collected.\n    if (wsUrl) {\n      return Promise.resolve(wsUrl);\n    }\n\n    return Promise.reject(new Error('device: failed to get the current websocket url'));\n  },\n\n  /**\n   * Process a successful device registration.\n   *\n   * @param {Object} response - response object from registration success.\n   * @returns {void}\n   */\n  processRegistrationSuccess(response) {\n    this.logger.info('device: received registration payload');\n\n    // Clone the response body for service cleaning.\n    const body = {...response.body};\n\n    // Clean service data.\n    delete body.services;\n    delete body.serviceHostMap;\n\n    const {etag} = response.headers || {};\n\n    if (this.etag && etag && this.etag === etag) {\n      // If current etag matches the previous one and we have sent\n      // If-None-Match header the developer and entitlement feature\n      // toggles will not be returned\n      const {features} = body;\n\n      delete body.features;\n      // When using the etag feature cache, user and entitlement features are still returned\n      this.features.user.reset(features.user);\n      this.features.entitlement.reset(features.entitlement);\n    }\n\n    // Assign the recieved DTO from **WDM** to this device.\n    this.set(body);\n\n    // Assign the new etag to this device.\n    this.set({etag});\n\n    // Validate if device is ephemeral and setup refresh timer.\n    if (this.config.ephemeral) {\n      this.logger.info('device: enqueuing device refresh');\n\n      const delay = (this.config.ephemeralDeviceTTL / 2 + 60) * 1000;\n\n      this.refreshTimer = safeSetTimeout(() => this.refresh(), delay);\n    }\n\n    // Emit the registration:success event.\n    this.trigger(DEVICE_EVENT_REGISTRATION_SUCCESS, this);\n  },\n\n  /**\n   * Reset the current local logout timer for the registered device if\n   * registered.\n   *\n   * @returns {void}\n   */\n  resetLogoutTimer() {\n    this.logger.info('device: resetting logout timer');\n\n    // Clear current logout timer.\n    clearTimeout(this.logoutTimer);\n\n    // Remove last activity date event listener.\n    this.off('change:lastUserActivityDate');\n\n    // Remove the logout timer.\n    this.unset('logoutTimer');\n\n    // Validate if the device is currently in a meeting and is configured to\n    // required inactivity enforcement.\n    if (\n      !this.isInMeeting &&\n      this.config.enableInactivityEnforcement &&\n      this.isReachabilityChecked\n    ) {\n      if (this.isInNetwork) {\n        this.setLogoutTimer(this.inNetworkInactivityDuration);\n      } else {\n        this.setLogoutTimer(this.intranetInactivityDuration);\n      }\n    }\n  },\n\n  /**\n   * Set the value of the logout timer for the current registered device.\n   *\n   * @param {number} duration - Value in seconds of the new logout timer.\n   * @returns {void}\n   */\n  setLogoutTimer(duration) {\n    this.logger.info('device: setting logout timer');\n\n    if (!duration || duration <= 0) {\n      return;\n    }\n\n    // Setup user activity date event listener.\n    this.on('change:lastUserActivityDate', () => {\n      this.resetLogoutTimer();\n    });\n\n    // Initialize a new timer.\n    this.logoutTimer = safeSetTimeout(() => {\n      this.webex.logout();\n    }, duration * 1000);\n  },\n\n  /**\n   * Wait for the device to be registered.\n   *\n   * @param {number} [timeout=10] - The maximum duration to wait, in seconds.\n   * @returns {Promise<void, Error>}\n   */\n  waitForRegistration(timeout = 10) {\n    this.logger.info('device: waiting for registration');\n\n    return new Promise((resolve, reject) => {\n      if (this.registered) {\n        resolve();\n      }\n\n      const timeoutTimer = safeSetTimeout(\n        () => reject(new Error('device: timeout occured while waiting for registration')),\n        timeout * 1000\n      );\n\n      this.once(DEVICE_EVENT_REGISTRATION_SUCCESS, () => {\n        clearTimeout(timeoutTimer);\n        resolve();\n      });\n    });\n  },\n\n  // Deprecated methods.\n\n  /**\n   * Mark a url as failed and get the next priority host url.\n   *\n   * @param {string} url - The url to mark as failed.\n   * @returns {Promise<string>} - The next priority url.\n   */\n  @deprecated('device#markUrlFailedAndGetNew(): Use services#markFailedUrl()')\n  markUrlFailedAndGetNew(url) {\n    return Promise.resolve(this.webex.internal.services.markFailedUrl(url));\n  },\n\n  // Ampersand method members\n\n  /* eslint-disable require-jsdoc */\n  /**\n   * Initializer method for the device plugin.\n   *\n   * @override\n   * @param {Array<any>} args - An array of items to be mapped as properties.\n   * @returns {void}\n   */\n  @persist('@', decider)\n  initialize(...args) {\n    // Prototype the extended class in order to preserve the parent member.\n    Reflect.apply(WebexPlugin.prototype.initialize, this, args);\n\n    // Initialize feature events and listeners.\n    FEATURE_COLLECTION_NAMES.forEach((collectionName) => {\n      this.features.on(`change:${collectionName}`, (model, value, options) => {\n        this.trigger('change', this, options);\n        this.trigger('change:features', this, this.features, options);\n      });\n    });\n\n    // Initialize network reachability checking event for url change.\n    this.on('change:intranetInactivityCheckUrl', () => {\n      this.checkNetworkReachability();\n    });\n\n    // Initialize network reachability checking event for duration change.\n    this.on('change:intranetInactivityDuration', () => {\n      this.checkNetworkReachability();\n    });\n\n    // Initialize network reachability checking event for duration change.\n    this.on('change:inNetworkInactivityDuration', () => {\n      this.checkNetworkReachability();\n    });\n\n    // Initialize listener for activity checking.\n    this.listenTo(this.webex, 'user-activity', () => {\n      this.lastUserActivityDate = Date.now();\n    });\n\n    // Initialize listener for meeting started event.\n    this.listenTo(this.webex, 'meeting started', () => {\n      this.isInMeeting = true;\n      this.resetLogoutTimer();\n    });\n\n    // Initialize listener for meeting ended event.\n    this.listenTo(this.webex, 'meeting ended', () => {\n      this.isInMeeting = false;\n      this.resetLogoutTimer();\n    });\n  },\n  /* eslint-enable require-jsdoc */\n});\n\nexport default Device;\n"],"mappings":"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"}