{"version":3,"names":["_lodash","require","_common","_httpErrorSubtypes","_interopRequireDefault","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","_Reflect$construct","arguments","apply","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","e","HttpError","exports","_Exception","_inherits2","_super","_classCallCheck2","_createClass2","key","value","parse","res","body","message","_typeof2","JSON","parseObject","err","defaultMessage","_defineProperties","enumerable","httpVersion","headers","rawHeaders","trailers","rawTrailers","method","url","statusCode","statusMessage","socket","_res","messages","_values","pick","errorKeys","length","_stringify","Exception","_defineProperty2","makeSubTypes"],"sources":["http-error.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {pick} from 'lodash';\nimport {Exception} from '@webex/common';\n\nimport makeSubTypes from './http-error-subtypes';\n\n/**\n * Base HttpError class. Unlikely to be thrown directly, but handy for general\n * type comparison.\n */\nexport default class HttpError extends Exception {\n  /**\n   * @example Extend via\n   * MyError extends HttpError {\n   *  static errorKeys = HttpError.errorKeys.concat([\n   *    `key1`,\n   *    `key2`\n   *  ])\n   * }\n   *\n   * @type {Array}\n   */\n  static errorKeys = ['error', 'errorString', 'response', 'errorResponse', 'message', 'msg'];\n\n  /**\n   * Default error string if no error can be extracted from the http response\n   * @type {string}\n   */\n  static defaultMessage = 'An error was received while trying to fulfill the request';\n\n  /**\n   * Parses HttpResponse objects for useful information (status, headers, etc)\n   * as well as attempting to extract a useful error message.\n   * @param {HttpResponse} res\n   * @returns {string}\n   */\n  parse(res) {\n    // complexity is high here because of all the default values below.\n    /* eslint complexity: [0] */\n    let {body} = res;\n    let message;\n\n    switch (typeof body) {\n      case 'string':\n        try {\n          body = JSON.parse(body);\n          message = this.parseObject(body);\n        } catch (err) {\n          message = body;\n        }\n        break;\n      case 'object':\n        message = this.parseObject(body);\n        break;\n      default:\n    }\n\n    if (!message) {\n      message = this.defaultMessage;\n    }\n\n    Object.defineProperties(this, {\n      body: {\n        enumerable: false,\n        value: body,\n      },\n      httpVersion: {\n        enumerable: false,\n        value: res.httpVersion,\n      },\n      headers: {\n        enumerable: false,\n        value: res.headers || {},\n      },\n      rawHeaders: {\n        enumerable: false,\n        value: res.rawHeaders || [],\n      },\n      trailers: {\n        enumerable: false,\n        value: res.trailers || {},\n      },\n      rawTrailers: {\n        enumerable: false,\n        value: res.rawTrailers || [],\n      },\n      method: {\n        enumerable: false,\n        value: res.method,\n      },\n      url: {\n        enumerable: false,\n        value: res.url,\n      },\n      statusCode: {\n        enumerable: false,\n        value: res.statusCode,\n      },\n      statusMessage: {\n        enumerable: false,\n        value: res.statusMessage,\n      },\n      socket: {\n        enumerable: false,\n        value: res.socket,\n      },\n      _res: {\n        enumerable: false,\n        value: res,\n      },\n    });\n\n    return message;\n  }\n\n  /**\n   * Recursively parses an error body looking for a likely error candidate\n   * @param {object} body\n   * @returns {string}\n   */\n  parseObject(body) {\n    // Search body for common names of error strings\n    const messages = Object.values(pick(body, HttpError.errorKeys));\n\n    // If no error candidate was found, stringify the entire body\n    if (messages.length === 0) {\n      return JSON.stringify(body, null, 2);\n    }\n\n    // Assume the first key found was the error explanation\n    const message = messages[0];\n\n    // If the explanation is an object, recurse and try again\n    if (typeof message === 'object') {\n      return this.parseObject(message);\n    }\n\n    // Return the first key\n    return message;\n  }\n}\n\nmakeSubTypes(HttpError);\nHttpError.makeSubTypes = makeSubTypes;\n"],"mappings":"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"}