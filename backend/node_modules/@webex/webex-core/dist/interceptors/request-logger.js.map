{"version":3,"names":["_util","_interopRequireDefault","require","_lodash","_httpCore","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","_Reflect$construct","arguments","apply","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","e","RequestLoggerInterceptor","exports","_Interceptor","_inherits2","_super","_classCallCheck2","_createClass2","key","value","onRequest","options","logger","get","console","info","method","uri","has","now","Date","process","env","ENABLE_VERBOSE_NETWORK_LOGGING","getTime","toISOString","body","length","isArray","isString","util","inspect","omit","depth","warn","_promise","resolve","onRequestError","reason","error","stack","reject","create","webex","Interceptor"],"sources":["request-logger.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport util from 'util';\n\nimport {get, has, isArray, isString, omit} from 'lodash';\nimport {Interceptor} from '@webex/http-core';\n\n/**\n * @class\n */\nexport default class RequestLoggerInterceptor extends Interceptor {\n  /**\n   * @returns {RequestLoggerInterceptor}\n   */\n  static create() {\n    return new RequestLoggerInterceptor({webex: this});\n  }\n\n  /**\n   * @see Interceptor#onRequest\n   * @param {Object} options\n   * @returns {Object}\n   */\n  onRequest(options) {\n    const logger = get(this, 'webex.logger', console);\n\n    logger.info('/**********************************************************************\\\\ ');\n    logger.info('Request:', options.method || 'GET', options.uri);\n    logger.info('WEBEX_TRACKINGID: ', get(options, 'headers.trackingid'));\n    /* istanbul ignore next */\n    if (has(options, 'headers.x-trans-id')) {\n      logger.info('X-Trans-ID: ', get(options, 'headers.x-trans-id'));\n    }\n    const now = new Date();\n\n    if (process.env.ENABLE_VERBOSE_NETWORK_LOGGING) {\n      logger.info('timestamp (start): ', now.getTime(), now.toISOString());\n      try {\n        // Determine if body is a buffer without relying on Buffer to avoid\n        // node/browser conflicts.\n        if (\n          options.body &&\n          options.body.length &&\n          !isArray(options.body) &&\n          !isString(options.body)\n        ) {\n          logger.info('Request Options:', util.inspect(omit(options, 'body'), {depth: null}));\n        } else {\n          logger.info('Request Options:', util.inspect(options, {depth: null}));\n        }\n      } catch (e) {\n        logger.warn('Could not stringify request options:', e);\n      }\n    }\n\n    return Promise.resolve(options);\n  }\n\n  /**\n   * @see Interceptor#onRequest\n   * @param {Object} options\n   * @param {Error} reason\n   * @returns {Object}\n   */\n  onRequestError(options, reason) {\n    // We need to do the normal onRequest logging, but then log how the request\n    // failed since the response logger won't be called.\n    this.onRequest(options);\n    const logger = get(this, 'webex.logger', console);\n\n    logger.error('Request Failed: ', reason.stack);\n    logger.info('\\\\**********************************************************************/');\n\n    return Promise.reject(reason);\n  }\n}\n"],"mappings":"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"}