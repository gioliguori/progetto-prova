"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _antlr = _interopRequireDefault(require("antlr4"));

var _GraphQLFederationParserListener = _interopRequireDefault(require("./GraphQLFederationParserListener.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var serializedATN = ["\x03\u608B\uA72A\u8133\uB9ED\u417C\u3BE7\u7786", "\u5964\x03q\u03F0\x04\x02\t\x02\x04\x03\t\x03\x04\x04", "\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04\x07\t\x07", "\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\x0B\t\x0B\x04\f\t\f", "\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10", "\x04\x11\t\x11\x04\x12\t\x12\x04\x13\t\x13\x04\x14", "\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17", "\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B", "\t\x1B\x04\x1C\t\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E", "\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04#\t#\x04", "$\t$\x04%\t%\x04&\t&\x04'\t'\x04(\t(\x04)\t)\x04*\t*\x04", "+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x04", "2\t2\x043\t3\x044\t4\x045\t5\x046\t6\x047\t7\x048\t8\x04", "9\t9\x04:\t:\x04;\t;\x04<\t<\x04=\t=\x04>\t>\x04?\t?\x04", "@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04F\tF\x04", "G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04", "N\tN\x04O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x04T\tT\x04", "U\tU\x04V\tV\x04W\tW\x04X\tX\x04Y\tY\x04Z\tZ\x04[\t[\x04", "\\\t\\\x04]\t]\x04^\t^\x04_\t_\x04`\t`\x04a\ta\x04b\tb\x04", "c\tc\x04d\td\x04e\te\x04f\tf\x04g\tg\x04h\th\x04i\ti\x04", "j\tj\x04k\tk\x03\x02\x06\x02\xD8\n\x02\r\x02\x0E\x02", "\xD9\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x05", "\x03\xE1\n\x03\x03\x04\x03\x04\x05\x04\xE5\n\x04", "\x03\x05\x03\x05\x05\x05\xE9\n\x05\x03\x05\x05", "\x05\xEC\n\x05\x03\x05\x05\x05\xEF\n\x05\x03\x05", "\x03\x05\x03\x05\x05\x05\xF4\n\x05\x03\x06\x03", "\x06\x03\x07\x03\x07\x06\x07\xFA\n\x07\r\x07\x0E", "\x07\xFB\x03\x07\x03\x07\x03\b\x03\b\x03\b\x05\b", "\u0103\n\b\x03\t\x05\t\u0106\n\t\x03\t\x03\t\x05\t\u010A\n", "\t\x03\t\x05\t\u010D\n\t\x03\t\x05\t\u0110\n\t\x03\n\x03", "\n\x06\n\u0114\n\n\r\n\x0E\n\u0115\x03\n\x03\n\x03\x0B\x03", "\x0B\x03\x0B\x03\x0B\x03\f\x03\f\x03\f\x03\r\x03", "\r\x03\r\x05\r\u0124\n\r\x03\x0E\x03\x0E\x03\x0E\x03", "\x0E\x05\x0E\u012A\n\x0E\x03\x0E\x03\x0E\x03\x0F", "\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11", "\x05\x11\u0135\n\x11\x03\x11\x05\x11\u0138\n\x11\x03", "\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03", "\x12\x03\x12\x03\x12\x03\x12\x03\x12\x05\x12\u0145", "\n\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15", "\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18", "\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x06\x19", "\u0157\n\x19\r\x19\x0E\x19\u0158\x03\x19\x03\x19\x05", "\x19\u015D\n\x19\x03\x1A\x03\x1A\x07\x1A\u0161\n\x1A", "\f\x1A\x0E\x1A\u0164\x0B\x1A\x03\x1A\x03\x1A\x03", "\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03", "\x1C\x03\x1D\x03\x1D\x06\x1D\u0171\n\x1D\r\x1D\x0E", "\x1D\u0172\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E", "\x03\x1E\x05\x1E\u017B\n\x1E\x03\x1F\x03\x1F\x03", "\x1F\x03 \x03 \x05 \u0182\n \x03 \x03 \x05 \u0186\n \x05", " \u0188\n \x03!\x03!\x03\"\x03\"\x03\"\x03\"\x03#\x06", "#\u0191\n#\r#\x0E#\u0192\x03$\x03$\x03$\x05$\u0198\n$\x03", "%\x03%\x03%\x05%\u019D\n%\x03&\x03&\x05&\u01A1\n&\x03", "'\x05'\u01A4\n'\x03'\x03'\x07'\u01A8\n'\f'\x0E'\u01AB", "\x0B'\x03'\x03'\x06'\u01AF\n'\r'\x0E'\u01B0\x03'", "\x03'\x03(\x03(\x03(\x03(\x03)\x03)\x03)\x07)\u01BC", "\n)\f)\x0E)\u01BF\x0B)\x03)\x03)\x06)\u01C3\n)\r)\x0E)\u01C4", "\x03)\x03)\x03)\x03)\x03)\x06)\u01CC\n)\r)\x0E)\u01CD", "\x05)\u01D0\n)\x03*\x03*\x03*\x03*\x03+\x03+\x03,\x03", ",\x03,\x03,\x03,\x03,\x05,\u01DE\n,\x03-\x03-\x03-\x03", "-\x03-\x03-\x05-\u01E6\n-\x03.\x05.\u01E9\n.\x03.\x03", ".\x03.\x07.\u01EE\n.\f.\x0E.\u01F1\x0B.\x03/\x03/\x03", "/\x03/\x06/\u01F7\n/\r/\x0E/\u01F8\x030\x050\u01FC\n0\x03", "0\x030\x030\x050\u0201\n0\x030\x070\u0204\n0\f0\x0E0\u0207", "\x0B0\x030\x050\u020A\n0\x031\x031\x051\u020E\n1\x031", "\x031\x051\u0212\n1\x031\x071\u0215\n1\f1\x0E1\u0218\x0B", "1\x032\x032\x062\u021C\n2\r2\x0E2\u021D\x032\x032\x03", "3\x053\u0223\n3\x033\x033\x053\u0227\n3\x033\x033\x03", "3\x073\u022C\n3\f3\x0E3\u022F\x0B3\x033\x053\u0232\n3\x03", "3\x033\x053\u0236\n3\x033\x033\x033\x053\u023B\n3\x03", "4\x034\x064\u023F\n4\r4\x0E4\u0240\x034\x034\x035\x05", "5\u0246\n5\x035\x035\x035\x035\x055\u024C\n5\x035\x07", "5\u024F\n5\f5\x0E5\u0252\x0B5\x036\x036\x036\x036\x05", "6\u0258\n6\x036\x076\u025B\n6\f6\x0E6\u025E\x0B6\x036\x03", "6\x036\x036\x036\x036\x056\u0266\n6\x036\x066\u0269\n", "6\r6\x0E6\u026A\x036\x036\x036\x036\x036\x056\u0272\n", "6\x037\x057\u0275\n7\x037\x037\x037\x057\u027A\n7\x03", "7\x077\u027D\n7\f7\x0E7\u0280\x0B7\x037\x057\u0283\n7\x03", "8\x038\x038\x038\x058\u0289\n8\x038\x078\u028C\n8\f8\x0E", "8\u028F\x0B8\x038\x038\x038\x038\x038\x038\x058\u0297", "\n8\x038\x068\u029A\n8\r8\x0E8\u029B\x038\x038\x038\x03", "8\x038\x058\u02A3\n8\x039\x059\u02A6\n9\x039\x039\x03", "9\x079\u02AB\n9\f9\x0E9\u02AE\x0B9\x039\x059\u02B1\n9\x03", ":\x03:\x05:\u02B5\n:\x03:\x03:\x03:\x07:\u02BA\n:\f:\x0E", ":\u02BD\x0B:\x03;\x03;\x03;\x03;\x07;\u02C3\n;\f;\x0E", ";\u02C6\x0B;\x03;\x03;\x03;\x03;\x03;\x03;\x06;\u02CE", "\n;\r;\x0E;\u02CF\x05;\u02D2\n;\x03<\x05<\u02D5\n<\x03<\x03", "<\x03<\x07<\u02DA\n<\f<\x0E<\u02DD\x0B<\x03<\x05<\u02E0", "\n<\x03=\x03=\x06=\u02E4\n=\r=\x0E=\u02E5\x03=\x03=\x03", ">\x05>\u02EB\n>\x03>\x03>\x07>\u02EF\n>\f>\x0E>\u02F2\x0B", ">\x03?\x03?\x03?\x03?\x07?\u02F8\n?\f?\x0E?\u02FB\x0B", "?\x03?\x03?\x03?\x03?\x03?\x03?\x06?\u0303\n?\r?\x0E", "?\u0304\x05?\u0307\n?\x03@\x05@\u030A\n@\x03@\x03@\x03@", "\x07@\u030F\n@\f@\x0E@\u0312\x0B@\x03@\x05@\u0315\n@\x03", "A\x03A\x06A\u0319\nA\rA\x0EA\u031A\x03A\x03A\x03B\x03", "B\x03B\x03B\x07B\u0323\nB\fB\x0EB\u0326\x0BB\x03B\x03", "B\x03B\x03B\x03B\x03B\x06B\u032E\nB\rB\x0EB\u032F\x05", "B\u0332\nB\x03C\x05C\u0335\nC\x03C\x03C\x03C\x03C\x05", "C\u033B\nC\x03C\x05C\u033E\nC\x03C\x03C\x03C\x03D\x03", "D\x03D\x07D\u0346\nD\fD\x0ED\u0349\x0BD\x03E\x03E\x05", "E\u034D\nE\x03F\x03F\x03G\x03G\x03H\x03H\x03I\x03I\x03", "J\x03J\x03J\x03J\x03J\x03J\x03J\x03J\x03J\x03K\x03", "K\x03K\x03K\x03K\x03K\x03K\x03K\x03K\x03L\x03L\x03", "L\x03L\x03L\x03L\x03L\x03L\x03L\x03L\x03L\x03L\x03", "L\x03L\x03L\x03L\x03L\x03L\x03L\x03L\x03L\x05L\u037E", "\nL\x03M\x03M\x03N\x03N\x03N\x03N\x03N\x03N\x03N\x03", "N\x03N\x03O\x03O\x03O\x03P\x06P\u038F\nP\rP\x0EP\u0390", "\x03Q\x03Q\x05Q\u0395\nQ\x03R\x03R\x03R\x03R\x03S\x03", "S\x05S\u039D\nS\x03T\x03T\x03U\x03U\x05U\u03A3\nU\x03", "V\x03V\x03W\x03W\x05W\u03A9\nW\x03X\x03X\x03X\x05X\u03AE", "\nX\x03Y\x03Y\x05Y\u03B2\nY\x03Z\x03Z\x05Z\u03B6\nZ\x03", "[\x03[\x05[\u03BA\n[\x03\\\x03\\\x03]\x03]\x05]\u03C0", "\n]\x03^\x03^\x03_\x03_\x05_\u03C6\n_\x03`\x03`\x03", "a\x03a\x05a\u03CC\na\x03b\x03b\x03c\x03c\x05c\u03D2\n", "c\x03d\x03d\x03d\x03d\x03d\x03d\x05d\u03DA\nd\x03e\x03", "e\x05e\u03DE\ne\x03f\x03f\x03g\x03g\x05g\u03E4\ng\x03", "h\x03h\x05h\u03E8\nh\x03i\x03i\x03j\x03j\x03k\x03k\x03", "k\x02\x02l\x02\x04\x06\b\n\f\x0E\x10\x12\x14\x16", "\x18\x1A\x1C\x1E \"$&(*,.02468:<>@BDFHJLNPRTVXZ\\^`bdfhjlnp", "rtvxz|~\x80\x82\x84\x86\x88\x8A\x8C\x8E\x90\x92", "\x94\x96\x98\x9A\x9C\x9E\xA0\xA2\xA4\xA6\xA8\xAA", "\xAC\xAE\xB0\xB2\xB4\xB6\xB8\xBA\xBC\xBE\xC0\xC2", "\xC4\xC6\xC8\xCA\xCC\xCE\xD0\xD2\xD4\x02\n\x03", "\x02\x14\x16\x03\x02CD\x03\x02GH\x04\x02$&)-\x06", "\x02\x1D\x1F\"\"''.3\x03\x02UV\x04\x02\x0B3RT\x03", "\x02_n\x02\u0418\x02\xD7\x03\x02\x02\x02\x04\xE0", "\x03\x02\x02\x02\x06\xE4\x03\x02\x02\x02\b\xF3", "\x03\x02\x02\x02\n\xF5\x03\x02\x02\x02\f\xF7\x03", "\x02\x02\x02\x0E\u0102\x03\x02\x02\x02\x10\u0105\x03", "\x02\x02\x02\x12\u0111\x03\x02\x02\x02\x14\u0119\x03", "\x02\x02\x02\x16\u011D\x03\x02\x02\x02\x18\u0120\x03", "\x02\x02\x02\x1A\u0125\x03\x02\x02\x02\x1C\u012D\x03", "\x02\x02\x02\x1E\u012F\x03\x02\x02\x02 \u0132\x03", "\x02\x02\x02\"\u0144\x03\x02\x02\x02$\u0146\x03\x02", "\x02\x02&\u0148\x03\x02\x02\x02(\u014A\x03\x02\x02", "\x02*\u014C\x03\x02\x02\x02,\u014E\x03\x02\x02\x02", ".\u0150\x03\x02\x02\x020\u015C\x03\x02\x02\x022\u015E", "\x03\x02\x02\x024\u0167\x03\x02\x02\x026\u016B\x03", "\x02\x02\x028\u016E\x03\x02\x02\x02:\u0176\x03\x02", "\x02\x02<\u017C\x03\x02\x02\x02>\u0187\x03\x02\x02", "\x02@\u0189\x03\x02\x02\x02B\u018B\x03\x02\x02\x02", "D\u0190\x03\x02\x02\x02F\u0194\x03\x02\x02\x02H\u019C", "\x03\x02\x02\x02J\u01A0\x03\x02\x02\x02L\u01A3\x03", "\x02\x02\x02N\u01B4\x03\x02\x02\x02P\u01CF\x03\x02", "\x02\x02R\u01D1\x03\x02\x02\x02T\u01D5\x03\x02\x02", "\x02V\u01DD\x03\x02\x02\x02X\u01E5\x03\x02\x02\x02", "Z\u01E8\x03\x02\x02\x02\\\u01F2\x03\x02\x02\x02^\u01FB", "\x03\x02\x02\x02`\u020B\x03\x02\x02\x02b\u0219\x03", "\x02\x02\x02d\u023A\x03\x02\x02\x02f\u023C\x03\x02", "\x02\x02h\u0245\x03\x02\x02\x02j\u0271\x03\x02\x02", "\x02l\u0274\x03\x02\x02\x02n\u02A2\x03\x02\x02\x02", "p\u02A5\x03\x02\x02\x02r\u02B2\x03\x02\x02\x02t\u02D1", "\x03\x02\x02\x02v\u02D4\x03\x02\x02\x02x\u02E1\x03", "\x02\x02\x02z\u02EA\x03\x02\x02\x02|\u0306\x03\x02", "\x02\x02~\u0309\x03\x02\x02\x02\x80\u0316\x03\x02", "\x02\x02\x82\u0331\x03\x02\x02\x02\x84\u0334\x03\x02", "\x02\x02\x86\u0342\x03\x02\x02\x02\x88\u034C\x03\x02", "\x02\x02\x8A\u034E\x03\x02\x02\x02\x8C\u0350\x03\x02", "\x02\x02\x8E\u0352\x03\x02\x02\x02\x90\u0354\x03\x02", "\x02\x02\x92\u0356\x03\x02\x02\x02\x94\u035F\x03\x02", "\x02\x02\x96\u037D\x03\x02\x02\x02\x98\u037F\x03\x02", "\x02\x02\x9A\u0381\x03\x02\x02\x02\x9C\u038A\x03\x02", "\x02\x02\x9E\u038E\x03\x02\x02\x02\xA0\u0392\x03\x02", "\x02\x02\xA2\u0396\x03\x02\x02\x02\xA4\u039C\x03\x02", "\x02\x02\xA6\u039E\x03\x02\x02\x02\xA8\u03A2\x03\x02", "\x02\x02\xAA\u03A4\x03\x02\x02\x02\xAC\u03A8\x03\x02", "\x02\x02\xAE\u03AD\x03\x02\x02\x02\xB0\u03B1\x03\x02", "\x02\x02\xB2\u03B5\x03\x02\x02\x02\xB4\u03B9\x03\x02", "\x02\x02\xB6\u03BB\x03\x02\x02\x02\xB8\u03BF\x03\x02", "\x02\x02\xBA\u03C1\x03\x02\x02\x02\xBC\u03C5\x03\x02", "\x02\x02\xBE\u03C7\x03\x02\x02\x02\xC0\u03CB\x03\x02", "\x02\x02\xC2\u03CD\x03\x02\x02\x02\xC4\u03D1\x03\x02", "\x02\x02\xC6\u03D9\x03\x02\x02\x02\xC8\u03DD\x03\x02", "\x02\x02\xCA\u03DF\x03\x02\x02\x02\xCC\u03E3\x03\x02", "\x02\x02\xCE\u03E7\x03\x02\x02\x02\xD0\u03E9\x03\x02", "\x02\x02\xD2\u03EB\x03\x02\x02\x02\xD4\u03ED\x03\x02", "\x02\x02\xD6\xD8\x05\x04\x03\x02\xD7\xD6\x03\x02", "\x02\x02\xD8\xD9\x03\x02\x02\x02\xD9\xD7\x03\x02", "\x02\x02\xD9\xDA\x03\x02\x02\x02\xDA\xDB\x03\x02", "\x02\x02\xDB\xDC\x07\x02\x02\x03\xDC\x03\x03\x02", "\x02\x02\xDD\xE1\x05\x06\x04\x02\xDE\xE1\x05H", "%\x02\xDF\xE1\x05J&\x02\xE0\xDD\x03\x02\x02\x02", "\xE0\xDE\x03\x02\x02\x02\xE0\xDF\x03\x02\x02\x02", "\xE1\x05\x03\x02\x02\x02\xE2\xE5\x05\b\x05\x02", "\xE3\xE5\x05\x1A\x0E\x02\xE4\xE2\x03\x02\x02\x02", "\xE4\xE3\x03\x02\x02\x02\xE5\x07\x03\x02\x02\x02", "\xE6\xE8\x05\n\x06\x02\xE7\xE9\x05\xCCg\x02\xE8", "\xE7\x03\x02\x02\x02\xE8\xE9\x03\x02\x02\x02\xE9", "\xEB\x03\x02\x02\x02\xEA\xEC\x058\x1D\x02\xEB", "\xEA\x03\x02\x02\x02\xEB\xEC\x03\x02\x02\x02\xEC", "\xEE\x03\x02\x02\x02\xED\xEF\x05D#\x02\xEE\xED", "\x03\x02\x02\x02\xEE\xEF\x03\x02\x02\x02\xEF\xF0", "\x03\x02\x02\x02\xF0\xF1\x05\f\x07\x02\xF1\xF4", "\x03\x02\x02\x02\xF2\xF4\x05\f\x07\x02\xF3\xE6", "\x03\x02\x02\x02\xF3\xF2\x03\x02\x02\x02\xF4\t", "\x03\x02\x02\x02\xF5\xF6\t\x02\x02\x02\xF6\x0B", "\x03\x02\x02\x02\xF7\xF9\x074\x02\x02\xF8\xFA", "\x05\x0E\b\x02\xF9\xF8\x03\x02\x02\x02\xFA\xFB", "\x03\x02\x02\x02\xFB\xF9\x03\x02\x02\x02\xFB\xFC", "\x03\x02\x02\x02\xFC\xFD\x03\x02\x02\x02\xFD\xFE", "\x075\x02\x02\xFE\r\x03\x02\x02\x02\xFF\u0103\x05", "\x10\t\x02\u0100\u0103\x05\x18\r\x02\u0101\u0103\x05 \x11", "\x02\u0102\xFF\x03\x02\x02\x02\u0102\u0100\x03\x02\x02", "\x02\u0102\u0101\x03\x02\x02\x02\u0103\x0F\x03\x02\x02", "\x02\u0104\u0106\x05\x16\f\x02\u0105\u0104\x03\x02\x02", "\x02\u0105\u0106\x03\x02\x02\x02\u0106\u0107\x03\x02\x02", "\x02\u0107\u0109\x05\xCCg\x02\u0108\u010A\x05\x12\n\x02", "\u0109\u0108\x03\x02\x02\x02\u0109\u010A\x03\x02\x02\x02", "\u010A\u010C\x03\x02\x02\x02\u010B\u010D\x05D#\x02\u010C", "\u010B\x03\x02\x02\x02\u010C\u010D\x03\x02\x02\x02\u010D", "\u010F\x03\x02\x02\x02\u010E\u0110\x05\f\x07\x02\u010F", "\u010E\x03\x02\x02\x02\u010F\u0110\x03\x02\x02\x02\u0110", "\x11\x03\x02\x02\x02\u0111\u0113\x078\x02\x02\u0112", "\u0114\x05\x14\x0B\x02\u0113\u0112\x03\x02\x02\x02\u0114", "\u0115\x03\x02\x02\x02\u0115\u0113\x03\x02\x02\x02\u0115", "\u0116\x03\x02\x02\x02\u0116\u0117\x03\x02\x02\x02\u0117", "\u0118\x079\x02\x02\u0118\x13\x03\x02\x02\x02\u0119", "\u011A\x05\xCCg\x02\u011A\u011B\x07=\x02\x02\u011B\u011C", "\x05\"\x12\x02\u011C\x15\x03\x02\x02\x02\u011D\u011E", "\x05\xCCg\x02\u011E\u011F\x07=\x02\x02\u011F\x17\x03", "\x02\x02\x02\u0120\u0121\x07>\x02\x02\u0121\u0123\x05", "\x1C\x0F\x02\u0122\u0124\x05D#\x02\u0123\u0122\x03\x02", "\x02\x02\u0123\u0124\x03\x02\x02\x02\u0124\x19\x03\x02", "\x02\x02\u0125\u0126\x07\x18\x02\x02\u0126\u0127\x05\x1C", "\x0F\x02\u0127\u0129\x05\x1E\x10\x02\u0128\u012A\x05D", "#\x02\u0129\u0128\x03\x02\x02\x02\u0129\u012A\x03\x02", "\x02\x02\u012A\u012B\x03\x02\x02\x02\u012B\u012C\x05\f", "\x07\x02\u012C\x1B\x03\x02\x02\x02\u012D\u012E\x05\xCC", "g\x02\u012E\x1D\x03\x02\x02\x02\u012F\u0130\x07\x19", "\x02\x02\u0130\u0131\x05@!\x02\u0131\x1F\x03\x02\x02", "\x02\u0132\u0134\x07>\x02\x02\u0133\u0135\x05\x1E\x10", "\x02\u0134\u0133\x03\x02\x02\x02\u0134\u0135\x03\x02\x02", "\x02\u0135\u0137\x03\x02\x02\x02\u0136\u0138\x05D#\x02", "\u0137\u0136\x03\x02\x02\x02\u0137\u0138\x03\x02\x02\x02", "\u0138\u0139\x03\x02\x02\x02\u0139\u013A\x05\f\x07\x02", "\u013A!\x03\x02\x02\x02\u013B\u0145\x056\x1C\x02\u013C", "\u0145\x05$\x13\x02\u013D\u0145\x05&\x14\x02\u013E\u0145", "\x05*\x16\x02\u013F\u0145\x05(\x15\x02\u0140\u0145\x05", ",\x17\x02\u0141\u0145\x05.\x18\x02\u0142\u0145\x050\x19", "\x02\u0143\u0145\x052\x1A\x02\u0144\u013B\x03\x02\x02", "\x02\u0144\u013C\x03\x02\x02\x02\u0144\u013D\x03\x02\x02", "\x02\u0144\u013E\x03\x02\x02\x02\u0144\u013F\x03\x02\x02", "\x02\u0144\u0140\x03\x02\x02\x02\u0144\u0141\x03\x02\x02", "\x02\u0144\u0142\x03\x02\x02\x02\u0144\u0143\x03\x02\x02", "\x02\u0145#\x03\x02\x02\x02\u0146\u0147\x07J\x02\x02", "\u0147%\x03\x02\x02\x02\u0148\u0149\x07I\x02\x02\u0149", "'\x03\x02\x02\x02\u014A\u014B\t\x03\x02\x02\u014B)\x03", "\x02\x02\x02\u014C\u014D\t\x04\x02\x02\u014D+\x03\x02", "\x02\x02\u014E\u014F\x07E\x02\x02\u014F-\x03\x02\x02", "\x02\u0150\u0151\x05\xCCg\x02\u0151/\x03\x02\x02\x02", "\u0152\u0153\x076\x02\x02\u0153\u015D\x077\x02\x02\u0154", "\u0156\x076\x02\x02\u0155\u0157\x05\"\x12\x02\u0156\u0155", "\x03\x02\x02\x02\u0157\u0158\x03\x02\x02\x02\u0158\u0156", "\x03\x02\x02\x02\u0158\u0159\x03\x02\x02\x02\u0159\u015A", "\x03\x02\x02\x02\u015A\u015B\x077\x02\x02\u015B\u015D", "\x03\x02\x02\x02\u015C\u0152\x03\x02\x02\x02\u015C\u0154", "\x03\x02\x02\x02\u015D1\x03\x02\x02\x02\u015E\u0162", "\x074\x02\x02\u015F\u0161\x054\x1B\x02\u0160\u015F\x03", "\x02\x02\x02\u0161\u0164\x03\x02\x02\x02\u0162\u0160\x03", "\x02\x02\x02\u0162\u0163\x03\x02\x02\x02\u0163\u0165\x03", "\x02\x02\x02\u0164\u0162\x03\x02\x02\x02\u0165\u0166\x07", "5\x02\x02\u01663\x03\x02\x02\x02\u0167\u0168\x05\xCC", "g\x02\u0168\u0169\x07=\x02\x02\u0169\u016A\x05\"\x12\x02", "\u016A5\x03\x02\x02\x02\u016B\u016C\x07A\x02\x02\u016C", "\u016D\x05\xCCg\x02\u016D7\x03\x02\x02\x02\u016E\u0170", "\x078\x02\x02\u016F\u0171\x05:\x1E\x02\u0170\u016F\x03", "\x02\x02\x02\u0171\u0172\x03\x02\x02\x02\u0172\u0170\x03", "\x02\x02\x02\u0172\u0173\x03\x02\x02\x02\u0173\u0174\x03", "\x02\x02\x02\u0174\u0175\x079\x02\x02\u01759\x03\x02", "\x02\x02\u0176\u0177\x056\x1C\x02\u0177\u0178\x07=\x02", "\x02\u0178\u017A\x05> \x02\u0179\u017B\x05<\x1F\x02\u017A", "\u0179\x03\x02\x02\x02\u017A\u017B\x03\x02\x02\x02\u017B", ";\x03\x02\x02\x02\u017C\u017D\x07<\x02\x02\u017D\u017E", "\x05\"\x12\x02\u017E=\x03\x02\x02\x02\u017F\u0181\x05", "@!\x02\u0180\u0182\x07?\x02\x02\u0181\u0180\x03\x02\x02", "\x02\u0181\u0182\x03\x02\x02\x02\u0182\u0188\x03\x02\x02", "\x02\u0183\u0185\x05B\"\x02\u0184\u0186\x07?\x02\x02\u0185", "\u0184\x03\x02\x02\x02\u0185\u0186\x03\x02\x02\x02\u0186", "\u0188\x03\x02\x02\x02\u0187\u017F\x03\x02\x02\x02\u0187", "\u0183\x03\x02\x02\x02\u0188?\x03\x02\x02\x02\u0189", "\u018A\x05\xCCg\x02\u018AA\x03\x02\x02\x02\u018B\u018C", "\x076\x02\x02\u018C\u018D\x05> \x02\u018D\u018E\x077\x02", "\x02\u018EC\x03\x02\x02\x02\u018F\u0191\x05F$\x02\u0190", "\u018F\x03\x02\x02\x02\u0191\u0192\x03\x02\x02\x02\u0192", "\u0190\x03\x02\x02\x02\u0192\u0193\x03\x02\x02\x02\u0193", "E\x03\x02\x02\x02\u0194\u0195\x07:\x02\x02\u0195\u0197", "\x05\xCCg\x02\u0196\u0198\x05\x12\n\x02\u0197\u0196\x03", "\x02\x02\x02\u0197\u0198\x03\x02\x02\x02\u0198G\x03", "\x02\x02\x02\u0199\u019D\x05L'\x02\u019A\u019D\x05V,\x02", "\u019B\u019D\x05\x84C\x02\u019C\u0199\x03\x02\x02\x02", "\u019C\u019A\x03\x02\x02\x02\u019C\u019B\x03\x02\x02\x02", "\u019DI\x03\x02\x02\x02\u019E\u01A1\x05P)\x02\u019F\u01A1", "\x05X-\x02\u01A0\u019E\x03\x02\x02\x02\u01A0\u019F\x03", "\x02\x02\x02\u01A1K\x03\x02\x02\x02\u01A2\u01A4\x05", "T+\x02\u01A3\u01A2\x03\x02\x02\x02\u01A3\u01A4\x03\x02", "\x02\x02\u01A4\u01A5\x03\x02\x02\x02\u01A5\u01A9\x07\x17", "\x02\x02\u01A6\u01A8\x05\xA4S\x02\u01A7\u01A6\x03\x02", "\x02\x02\u01A8\u01AB\x03\x02\x02\x02\u01A9\u01A7\x03\x02", "\x02\x02\u01A9\u01AA\x03\x02\x02\x02\u01AA\u01AC\x03\x02", "\x02\x02\u01AB\u01A9\x03\x02\x02\x02\u01AC\u01AE\x074", "\x02\x02\u01AD\u01AF\x05N(\x02\u01AE\u01AD\x03\x02\x02", "\x02\u01AF\u01B0\x03\x02\x02\x02\u01B0\u01AE\x03\x02\x02", "\x02\u01B0\u01B1\x03\x02\x02\x02\u01B1\u01B2\x03\x02\x02", "\x02\u01B2\u01B3\x075\x02\x02\u01B3M\x03\x02\x02\x02", "\u01B4\u01B5\x05\n\x06\x02\u01B5\u01B6\x07=\x02\x02\u01B6", "\u01B7\x05@!\x02\u01B7O\x03\x02\x02\x02\u01B8\u01B9\x07", "\x11\x02\x02\u01B9\u01BD\x07\x17\x02\x02\u01BA\u01BC\x05", "\xA4S\x02\u01BB\u01BA\x03\x02\x02\x02\u01BC\u01BF\x03", "\x02\x02\x02\u01BD\u01BB\x03\x02\x02\x02\u01BD\u01BE\x03", "\x02\x02\x02\u01BE\u01C0\x03\x02\x02\x02\u01BF\u01BD\x03", "\x02\x02\x02\u01C0\u01C2\x074\x02\x02\u01C1\u01C3\x05", "R*\x02\u01C2\u01C1\x03\x02\x02\x02\u01C3\u01C4\x03\x02", "\x02\x02\u01C4\u01C2\x03\x02\x02\x02\u01C4\u01C5\x03\x02", "\x02\x02\u01C5\u01C6\x03\x02\x02\x02\u01C6\u01C7\x075", "\x02\x02\u01C7\u01D0\x03\x02\x02\x02\u01C8\u01C9\x07\x11", "\x02\x02\u01C9\u01CB\x07\x17\x02\x02\u01CA\u01CC\x05\xA4", "S\x02\u01CB\u01CA\x03\x02\x02\x02\u01CC\u01CD\x03\x02", "\x02\x02\u01CD\u01CB\x03\x02\x02\x02\u01CD\u01CE\x03\x02", "\x02\x02\u01CE\u01D0\x03\x02\x02\x02\u01CF\u01B8\x03\x02", "\x02\x02\u01CF\u01C8\x03\x02\x02\x02\u01D0Q\x03\x02", "\x02\x02\u01D1\u01D2\x05\n\x06\x02\u01D2\u01D3\x07=\x02", "\x02\u01D3\u01D4\x05@!\x02\u01D4S\x03\x02\x02\x02\u01D5", "\u01D6\x05*\x16\x02\u01D6U\x03\x02\x02\x02\u01D7\u01DE", "\x05Z.\x02\u01D8\u01DE\x05^0\x02\u01D9\u01DE\x05l7\x02\u01DA", "\u01DE\x05p9\x02\u01DB\u01DE\x05v<\x02\u01DC\u01DE\x05~@\x02", "\u01DD\u01D7\x03\x02\x02\x02\u01DD\u01D8\x03\x02\x02\x02", "\u01DD\u01D9\x03\x02\x02\x02\u01DD\u01DA\x03\x02\x02\x02", "\u01DD\u01DB\x03\x02\x02\x02\u01DD\u01DC\x03\x02\x02\x02", "\u01DEW\x03\x02\x02\x02\u01DF\u01E6\x05\\/\x02\u01E0\u01E6", "\x05j6\x02\u01E1\u01E6\x05n8\x02\u01E2\u01E6\x05t;\x02\u01E3", "\u01E6\x05|?\x02\u01E4\u01E6\x05\x82B\x02\u01E5\u01DF\x03", "\x02\x02\x02\u01E5\u01E0\x03\x02\x02\x02\u01E5\u01E1\x03", "\x02\x02\x02\u01E5\u01E2\x03\x02\x02\x02\u01E5\u01E3\x03", "\x02\x02\x02\u01E5\u01E4\x03\x02\x02\x02\u01E6Y\x03", "\x02\x02\x02\u01E7\u01E9\x05T+\x02\u01E8\u01E7\x03\x02", "\x02\x02\u01E8\u01E9\x03\x02\x02\x02\u01E9\u01EA\x03\x02", "\x02\x02\u01EA\u01EB\x07\x0E\x02\x02\u01EB\u01EF\x05\xCC", "g\x02\u01EC\u01EE\x05\xA8U\x02\u01ED\u01EC\x03\x02\x02", "\x02\u01EE\u01F1\x03\x02\x02\x02\u01EF\u01ED\x03\x02\x02", "\x02\u01EF\u01F0\x03\x02\x02\x02\u01F0[\x03\x02\x02", "\x02\u01F1\u01EF\x03\x02\x02\x02\u01F2\u01F3\x07\x11\x02", "\x02\u01F3\u01F4\x07\x0E\x02\x02\u01F4\u01F6\x05\xCCg", "\x02\u01F5\u01F7\x05\xA8U\x02\u01F6\u01F5\x03\x02\x02", "\x02\u01F7\u01F8\x03\x02\x02\x02\u01F8\u01F6\x03\x02\x02", "\x02\u01F8\u01F9\x03\x02\x02\x02\u01F9]\x03\x02\x02", "\x02\u01FA\u01FC\x05T+\x02\u01FB\u01FA\x03\x02\x02\x02", "\u01FB\u01FC\x03\x02\x02\x02\u01FC\u01FD\x03\x02\x02\x02", "\u01FD\u01FE\x07\f\x02\x02\u01FE\u0200\x05\xCCg\x02\u01FF", "\u0201\x05`1\x02\u0200\u01FF\x03\x02\x02\x02\u0200\u0201", "\x03\x02\x02\x02\u0201\u0205\x03\x02\x02\x02\u0202\u0204", "\x05\xACW\x02\u0203\u0202\x03\x02\x02\x02\u0204\u0207", "\x03\x02\x02\x02\u0205\u0203\x03\x02\x02\x02\u0205\u0206", "\x03\x02\x02\x02\u0206\u0209\x03\x02\x02\x02\u0207\u0205", "\x03\x02\x02\x02\u0208\u020A\x05b2\x02\u0209\u0208\x03", "\x02\x02\x02\u0209\u020A\x03\x02\x02\x02\u020A_\x03", "\x02\x02\x02\u020B\u020D\x07\x13\x02\x02\u020C\u020E\x07", ";\x02\x02\u020D\u020C\x03\x02\x02\x02\u020D\u020E\x03", "\x02\x02\x02\u020E\u020F\x03\x02\x02\x02\u020F\u0216\x05", "@!\x02\u0210\u0212\x07;\x02\x02\u0211\u0210\x03\x02\x02", "\x02\u0211\u0212\x03\x02\x02\x02\u0212\u0213\x03\x02\x02", "\x02\u0213\u0215\x05@!\x02\u0214\u0211\x03\x02\x02\x02", "\u0215\u0218\x03\x02\x02\x02\u0216\u0214\x03\x02\x02\x02", "\u0216\u0217\x03\x02\x02\x02\u0217a\x03\x02\x02\x02", "\u0218\u0216\x03\x02\x02\x02\u0219\u021B\x074\x02\x02", "\u021A\u021C\x05d3\x02\u021B\u021A\x03\x02\x02\x02\u021C", "\u021D\x03\x02\x02\x02\u021D\u021B\x03\x02\x02\x02\u021D", "\u021E\x03\x02\x02\x02\u021E\u021F\x03\x02\x02\x02\u021F", "\u0220\x075\x02\x02\u0220c\x03\x02\x02\x02\u0221\u0223", "\x05T+\x02\u0222\u0221\x03\x02\x02\x02\u0222\u0223\x03", "\x02\x02\x02\u0223\u0224\x03\x02\x02\x02\u0224\u0226\x05", "\xCCg\x02\u0225\u0227\x05f4\x02\u0226\u0225\x03\x02\x02", "\x02\u0226\u0227\x03\x02\x02\x02\u0227\u0228\x03\x02\x02", "\x02\u0228\u0229\x07=\x02\x02\u0229\u022D\x05> \x02\u022A", "\u022C\x05\xC4c\x02\u022B\u022A\x03\x02\x02\x02\u022C", "\u022F\x03\x02\x02\x02\u022D\u022B\x03\x02\x02\x02\u022D", "\u022E\x03\x02\x02\x02\u022E\u023B\x03\x02\x02\x02\u022F", "\u022D\x03\x02\x02\x02\u0230\u0232\x05T+\x02\u0231\u0230", "\x03\x02\x02\x02\u0231\u0232\x03\x02\x02\x02\u0232\u0233", "\x03\x02\x02\x02\u0233\u0235\x05\xCCg\x02\u0234\u0236", "\x05f4\x02\u0235\u0234\x03\x02\x02\x02\u0235\u0236\x03", "\x02\x02\x02\u0236\u0237\x03\x02\x02\x02\u0237\u0238\x07", "=\x02\x02\u0238\u0239\b3\x01\x02\u0239\u023B\x03\x02\x02", "\x02\u023A\u0222\x03\x02\x02\x02\u023A\u0231\x03\x02\x02", "\x02\u023Be\x03\x02\x02\x02\u023C\u023E\x078\x02\x02", "\u023D\u023F\x05h5\x02\u023E\u023D\x03\x02\x02\x02\u023F", "\u0240\x03\x02\x02\x02\u0240\u023E\x03\x02\x02\x02\u0240", "\u0241\x03\x02\x02\x02\u0241\u0242\x03\x02\x02\x02\u0242", "\u0243\x079\x02\x02\u0243g\x03\x02\x02\x02\u0244\u0246", "\x05T+\x02\u0245\u0244\x03\x02\x02\x02\u0245\u0246\x03", "\x02\x02\x02\u0246\u0247\x03\x02\x02\x02\u0247\u0248\x05", "\xCCg\x02\u0248\u0249\x07=\x02\x02\u0249\u024B\x05> \x02", "\u024A\u024C\x05<\x1F\x02\u024B\u024A\x03\x02\x02\x02", "\u024B\u024C\x03\x02\x02\x02\u024C\u0250\x03\x02\x02\x02", "\u024D\u024F\x05\xC0a\x02\u024E\u024D\x03\x02\x02\x02", "\u024F\u0252\x03\x02\x02\x02\u0250\u024E\x03\x02\x02\x02", "\u0250\u0251\x03\x02\x02\x02\u0251i\x03\x02\x02\x02", "\u0252\u0250\x03\x02\x02\x02\u0253\u0254\x07\x11\x02\x02", "\u0254\u0255\x07\f\x02\x02\u0255\u0257\x05\xCCg\x02\u0256", "\u0258\x05`1\x02\u0257\u0256\x03\x02\x02\x02\u0257\u0258", "\x03\x02\x02\x02\u0258\u025C\x03\x02\x02\x02\u0259\u025B", "\x05\xACW\x02\u025A\u0259\x03\x02\x02\x02\u025B\u025E", "\x03\x02\x02\x02\u025C\u025A\x03\x02\x02\x02\u025C\u025D", "\x03\x02\x02\x02\u025D\u025F\x03\x02\x02\x02\u025E\u025C", "\x03\x02\x02\x02\u025F\u0260\x05b2\x02\u0260\u0272\x03", "\x02\x02\x02\u0261\u0262\x07\x11\x02\x02\u0262\u0263\x07", "\f\x02\x02\u0263\u0265\x05\xCCg\x02\u0264\u0266\x05`1\x02", "\u0265\u0264\x03\x02\x02\x02\u0265\u0266\x03\x02\x02\x02", "\u0266\u0268\x03\x02\x02\x02\u0267\u0269\x05\xACW\x02", "\u0268\u0267\x03\x02\x02\x02\u0269\u026A\x03\x02\x02\x02", "\u026A\u0268\x03\x02\x02\x02\u026A\u026B\x03\x02\x02\x02", "\u026B\u0272\x03\x02\x02\x02\u026C\u026D\x07\x11\x02\x02", "\u026D\u026E\x07\f\x02\x02\u026E\u026F\x05\xCCg\x02\u026F", "\u0270\x05`1\x02\u0270\u0272\x03\x02\x02\x02\u0271\u0253", "\x03\x02\x02\x02\u0271\u0261\x03\x02\x02\x02\u0271\u026C", "\x03\x02\x02\x02\u0272k\x03\x02\x02\x02\u0273\u0275", "\x05T+\x02\u0274\u0273\x03\x02\x02\x02\u0274\u0275\x03", "\x02\x02\x02\u0275\u0276\x03\x02\x02\x02\u0276\u0277\x07", "\x0F\x02\x02\u0277\u0279\x05\xCCg\x02\u0278\u027A\x05", "`1\x02\u0279\u0278\x03\x02\x02\x02\u0279\u027A\x03\x02", "\x02\x02\u027A\u027E\x03\x02\x02\x02\u027B\u027D\x05\xB0", "Y\x02\u027C\u027B\x03\x02\x02\x02\u027D\u0280\x03\x02", "\x02\x02\u027E\u027C\x03\x02\x02\x02\u027E\u027F\x03\x02", "\x02\x02\u027F\u0282\x03\x02\x02\x02\u0280\u027E\x03\x02", "\x02\x02\u0281\u0283\x05b2\x02\u0282\u0281\x03\x02\x02", "\x02\u0282\u0283\x03\x02\x02\x02\u0283m\x03\x02\x02", "\x02\u0284\u0285\x07\x11\x02\x02\u0285\u0286\x07\x0F\x02", "\x02\u0286\u0288\x05\xCCg\x02\u0287\u0289\x05`1\x02\u0288", "\u0287\x03\x02\x02\x02\u0288\u0289\x03\x02\x02\x02\u0289", "\u028D\x03\x02\x02\x02\u028A\u028C\x05\xB0Y\x02\u028B", "\u028A\x03\x02\x02\x02\u028C\u028F\x03\x02\x02\x02\u028D", "\u028B\x03\x02\x02\x02\u028D\u028E\x03\x02\x02\x02\u028E", "\u0290\x03\x02\x02\x02\u028F\u028D\x03\x02\x02\x02\u0290", "\u0291\x05b2\x02\u0291\u02A3\x03\x02\x02\x02\u0292\u0293", "\x07\x11\x02\x02\u0293\u0294\x07\x0F\x02\x02\u0294\u0296", "\x05\xCCg\x02\u0295\u0297\x05`1\x02\u0296\u0295\x03\x02", "\x02\x02\u0296\u0297\x03\x02\x02\x02\u0297\u0299\x03\x02", "\x02\x02\u0298\u029A\x05\xB0Y\x02\u0299\u0298\x03\x02", "\x02\x02\u029A\u029B\x03\x02\x02\x02\u029B\u0299\x03\x02", "\x02\x02\u029B\u029C\x03\x02\x02\x02\u029C\u02A3\x03\x02", "\x02\x02\u029D\u029E\x07\x11\x02\x02\u029E\u029F\x07\x0F", "\x02\x02\u029F\u02A0\x05\xCCg\x02\u02A0\u02A1\x05`1\x02", "\u02A1\u02A3\x03\x02\x02\x02\u02A2\u0284\x03\x02\x02\x02", "\u02A2\u0292\x03\x02\x02\x02\u02A2\u029D\x03\x02\x02\x02", "\u02A3o\x03\x02\x02\x02\u02A4\u02A6\x05T+\x02\u02A5\u02A4", "\x03\x02\x02\x02\u02A5\u02A6\x03\x02\x02\x02\u02A6\u02A7", "\x03\x02\x02\x02\u02A7\u02A8\x07\x12\x02\x02\u02A8\u02AC", "\x05\xCCg\x02\u02A9\u02AB\x05\xB4[\x02\u02AA\u02A9\x03", "\x02\x02\x02\u02AB\u02AE\x03\x02\x02\x02\u02AC\u02AA\x03", "\x02\x02\x02\u02AC\u02AD\x03\x02\x02\x02\u02AD\u02B0\x03", "\x02\x02\x02\u02AE\u02AC\x03\x02\x02\x02\u02AF\u02B1\x05", "r:\x02\u02B0\u02AF\x03\x02\x02\x02\u02B0\u02B1\x03\x02", "\x02\x02\u02B1q\x03\x02\x02\x02\u02B2\u02B4\x07<\x02", "\x02\u02B3\u02B5\x07@\x02\x02\u02B4\u02B3\x03\x02\x02", "\x02\u02B4\u02B5\x03\x02\x02\x02\u02B5\u02B6\x03\x02\x02", "\x02\u02B6\u02BB\x05@!\x02\u02B7\u02B8\x07@\x02\x02\u02B8", "\u02BA\x05@!\x02\u02B9\u02B7\x03\x02\x02\x02\u02BA\u02BD", "\x03\x02\x02\x02\u02BB\u02B9\x03\x02\x02\x02\u02BB\u02BC", "\x03\x02\x02\x02\u02BCs\x03\x02\x02\x02\u02BD\u02BB", "\x03\x02\x02\x02\u02BE\u02BF\x07\x11\x02\x02\u02BF\u02C0", "\x07\x12\x02\x02\u02C0\u02C4\x05\xCCg\x02\u02C1\u02C3", "\x05\xB4[\x02\u02C2\u02C1\x03\x02\x02\x02\u02C3\u02C6", "\x03\x02\x02\x02\u02C4\u02C2\x03\x02\x02\x02\u02C4\u02C5", "\x03\x02\x02\x02\u02C5\u02C7\x03\x02\x02\x02\u02C6\u02C4", "\x03\x02\x02\x02\u02C7\u02C8\x05r:\x02\u02C8\u02D2\x03", "\x02\x02\x02\u02C9\u02CA\x07\x11\x02\x02\u02CA\u02CB\x07", "\x12\x02\x02\u02CB\u02CD\x05\xCCg\x02\u02CC\u02CE\x05", "\xB4[\x02\u02CD\u02CC\x03\x02\x02\x02\u02CE\u02CF\x03", "\x02\x02\x02\u02CF\u02CD\x03\x02\x02\x02\u02CF\u02D0\x03", "\x02\x02\x02\u02D0\u02D2\x03\x02\x02\x02\u02D1\u02BE\x03", "\x02\x02\x02\u02D1\u02C9\x03\x02\x02\x02\u02D2u\x03", "\x02\x02\x02\u02D3\u02D5\x05T+\x02\u02D4\u02D3\x03\x02", "\x02\x02\u02D4\u02D5\x03\x02\x02\x02\u02D5\u02D6\x03\x02", "\x02\x02\u02D6\u02D7\x07\r\x02\x02\u02D7\u02DB\x05\xCC", "g\x02\u02D8\u02DA\x05\xB8]\x02\u02D9\u02D8\x03\x02\x02", "\x02\u02DA\u02DD\x03\x02\x02\x02\u02DB\u02D9\x03\x02\x02", "\x02\u02DB\u02DC\x03\x02\x02\x02\u02DC\u02DF\x03\x02\x02", "\x02\u02DD\u02DB\x03\x02\x02\x02\u02DE\u02E0\x05x=\x02", "\u02DF\u02DE\x03\x02\x02\x02\u02DF\u02E0\x03\x02\x02\x02", "\u02E0w\x03\x02\x02\x02\u02E1\u02E3\x074\x02\x02\u02E2", "\u02E4\x05z>\x02\u02E3\u02E2\x03\x02\x02\x02\u02E4\u02E5", "\x03\x02\x02\x02\u02E5\u02E3\x03\x02\x02\x02\u02E5\u02E6", "\x03\x02\x02\x02\u02E6\u02E7\x03\x02\x02\x02\u02E7\u02E8", "\x075\x02\x02\u02E8y\x03\x02\x02\x02\u02E9\u02EB\x05", "T+\x02\u02EA\u02E9\x03\x02\x02\x02\u02EA\u02EB\x03\x02", "\x02\x02\u02EB\u02EC\x03\x02\x02\x02\u02EC\u02F0\x05.", "\x18\x02\u02ED\u02EF\x05\xC8e\x02\u02EE\u02ED\x03\x02", "\x02\x02\u02EF\u02F2\x03\x02\x02\x02\u02F0\u02EE\x03\x02", "\x02\x02\u02F0\u02F1\x03\x02\x02\x02\u02F1{\x03\x02", "\x02\x02\u02F2\u02F0\x03\x02\x02\x02\u02F3\u02F4\x07\x11", "\x02\x02\u02F4\u02F5\x07\r\x02\x02\u02F5\u02F9\x05\xCC", "g\x02\u02F6\u02F8\x05\xB8]\x02\u02F7\u02F6\x03\x02\x02", "\x02\u02F8\u02FB\x03\x02\x02\x02\u02F9\u02F7\x03\x02\x02", "\x02\u02F9\u02FA\x03\x02\x02\x02\u02FA\u02FC\x03\x02\x02", "\x02\u02FB\u02F9\x03\x02\x02\x02\u02FC\u02FD\x05x=\x02", "\u02FD\u0307\x03\x02\x02\x02\u02FE\u02FF\x07\x11\x02\x02", "\u02FF\u0300\x07\r\x02\x02\u0300\u0302\x05\xCCg\x02\u0301", "\u0303\x05\xB8]\x02\u0302\u0301\x03\x02\x02\x02\u0303", "\u0304\x03\x02\x02\x02\u0304\u0302\x03\x02\x02\x02\u0304", "\u0305\x03\x02\x02\x02\u0305\u0307\x03\x02\x02\x02\u0306", "\u02F3\x03\x02\x02\x02\u0306\u02FE\x03\x02\x02\x02\u0307", "}\x03\x02\x02\x02\u0308\u030A\x05T+\x02\u0309\u0308\x03", "\x02\x02\x02\u0309\u030A\x03\x02\x02\x02\u030A\u030B\x03", "\x02\x02\x02\u030B\u030C\x07\x0B\x02\x02\u030C\u0310\x05", "\xCCg\x02\u030D\u030F\x05\xBC_\x02\u030E\u030D\x03\x02", "\x02\x02\u030F\u0312\x03\x02\x02\x02\u0310\u030E\x03\x02", "\x02\x02\u0310\u0311\x03\x02\x02\x02\u0311\u0314\x03\x02", "\x02\x02\u0312\u0310\x03\x02\x02\x02\u0313\u0315\x05\x80", "A\x02\u0314\u0313\x03\x02\x02\x02\u0314\u0315\x03\x02", "\x02\x02\u0315\x7F\x03\x02\x02\x02\u0316\u0318\x074", "\x02\x02\u0317\u0319\x05h5\x02\u0318\u0317\x03\x02\x02", "\x02\u0319\u031A\x03\x02\x02\x02\u031A\u0318\x03\x02\x02", "\x02\u031A\u031B\x03\x02\x02\x02\u031B\u031C\x03\x02\x02", "\x02\u031C\u031D\x075\x02\x02\u031D\x81\x03\x02\x02", "\x02\u031E\u031F\x07\x11\x02\x02\u031F\u0320\x07\x0B\x02", "\x02\u0320\u0324\x05\xCCg\x02\u0321\u0323\x05\xBC_\x02", "\u0322\u0321\x03\x02\x02\x02\u0323\u0326\x03\x02\x02\x02", "\u0324\u0322\x03\x02\x02\x02\u0324\u0325\x03\x02\x02\x02", "\u0325\u0327\x03\x02\x02\x02\u0326\u0324\x03\x02\x02\x02", "\u0327\u0328\x05\x80A\x02\u0328\u0332\x03\x02\x02\x02", "\u0329\u032A\x07\x11\x02\x02\u032A\u032B\x07\x0B\x02\x02", "\u032B\u032D\x05\xCCg\x02\u032C\u032E\x05\xBC_\x02\u032D", "\u032C\x03\x02\x02\x02\u032E\u032F\x03\x02\x02\x02\u032F", "\u032D\x03\x02\x02\x02\u032F\u0330\x03\x02\x02\x02\u0330", "\u0332\x03\x02\x02\x02\u0331\u031E\x03\x02\x02\x02\u0331", "\u0329\x03\x02\x02\x02\u0332\x83\x03\x02\x02\x02\u0333", "\u0335\x05T+\x02\u0334\u0333\x03\x02\x02\x02\u0334\u0335", "\x03\x02\x02\x02\u0335\u0336\x03\x02\x02\x02\u0336\u0337", "\x07\x10\x02\x02\u0337\u0338\x07:\x02\x02\u0338\u033A", "\x05\xCCg\x02\u0339\u033B\x05f4\x02\u033A\u0339\x03\x02", "\x02\x02\u033A\u033B\x03\x02\x02\x02\u033B\u033D\x03\x02", "\x02\x02\u033C\u033E\x07\x1A\x02\x02\u033D\u033C\x03\x02", "\x02\x02\u033D\u033E\x03\x02\x02\x02\u033E\u033F\x03\x02", "\x02\x02\u033F\u0340\x07\x19\x02\x02\u0340\u0341\x05\x86", "D\x02\u0341\x85\x03\x02\x02\x02\u0342\u0347\x05\x88", "E\x02\u0343\u0344\x07@\x02\x02\u0344\u0346\x05\x88E\x02", "\u0345\u0343\x03\x02\x02\x02\u0346\u0349\x03\x02\x02\x02", "\u0347\u0345\x03\x02\x02\x02\u0347\u0348\x03\x02\x02\x02", "\u0348\x87\x03\x02\x02\x02\u0349\u0347\x03\x02\x02\x02", "\u034A\u034D\x05\x8AF\x02\u034B\u034D\x05\x8CG\x02\u034C", "\u034A\x03\x02\x02\x02\u034C\u034B\x03\x02\x02\x02\u034D", "\x89\x03\x02\x02\x02\u034E\u034F\t\x05\x02\x02\u034F", "\x8B\x03\x02\x02\x02\u0350\u0351\t\x06\x02\x02\u0351", "\x8D\x03\x02\x02\x02\u0352\u0353\x07\x03\x02\x02\u0353", "\x8F\x03\x02\x02\x02\u0354\u0355\x07\x04\x02\x02\u0355", "\x91\x03\x02\x02\x02\u0356\u0357\x07\x05\x02\x02\u0357", "\u0358\x07]\x02\x02\u0358\u0359\x07R\x02\x02\u0359\u035A", "\x07Z\x02\x02\u035A\u035B\x07Y\x02\x02\u035B\u035C\x05", "\x9EP\x02\u035C\u035D\x07Y\x02\x02\u035D\u035E\x07^\x02", "\x02\u035E\x93\x03\x02\x02\x02\u035F\u0360\x07\x06\x02", "\x02\u0360\u0361\x07]\x02\x02\u0361\u0362\x07R\x02\x02", "\u0362\u0363\x07Z\x02\x02\u0363\u0364\x07Y\x02\x02\u0364", "\u0365\x05\x9EP\x02\u0365\u0366\x07Y\x02\x02\u0366\u0367", "\x07^\x02\x02\u0367\x95\x03\x02\x02\x02\u0368\u0369", "\x07\x07\x02\x02\u0369\u036A\x07]\x02\x02\u036A\u036B", "\x07R\x02\x02\u036B\u036C\x07Z\x02\x02\u036C\u036D\x07", "Y\x02\x02\u036D\u036E\x05\x9EP\x02\u036E\u036F\x07Y\x02", "\x02\u036F\u0370\x07^\x02\x02\u0370\u037E\x03\x02\x02", "\x02\u0371\u0372\x07\x07\x02\x02\u0372\u0373\x07]\x02", "\x02\u0373\u0374\x07R\x02\x02\u0374\u0375\x07Z\x02\x02", "\u0375\u0376\x07Y\x02\x02\u0376\u0377\x05\x9EP\x02\u0377", "\u0378\x07Y\x02\x02\u0378\u0379\x07T\x02\x02\u0379\u037A", "\x07Z\x02\x02\u037A\u037B\x05\xD0i\x02\u037B\u037C\x07", "^\x02\x02\u037C\u037E\x03\x02\x02\x02\u037D\u0368\x03", "\x02\x02\x02\u037D\u0371\x03\x02\x02\x02\u037E\x97\x03", "\x02\x02\x02\u037F\u0380\x07\b\x02\x02\u0380\x99\x03", "\x02\x02\x02\u0381\u0382\x07\t\x02\x02\u0382\u0383\x07", "]\x02\x02\u0383\u0384\x07S\x02\x02\u0384\u0385\x07Z\x02", "\x02\u0385\u0386\x07Y\x02\x02\u0386\u0387\x05\xCEh\x02", "\u0387\u0388\x07Y\x02\x02\u0388\u0389\x07^\x02\x02\u0389", "\x9B\x03\x02\x02\x02\u038A\u038B\x07\n\x02\x02\u038B", "\u038C\x07p\x02\x02\u038C\x9D\x03\x02\x02\x02\u038D", "\u038F\x05\xA0Q\x02\u038E\u038D\x03\x02\x02\x02\u038F", "\u0390\x03\x02\x02\x02\u0390\u038E\x03\x02\x02\x02\u0390", "\u0391\x03\x02\x02\x02\u0391\x9F\x03\x02\x02\x02\u0392", "\u0394\x05\xCEh\x02\u0393\u0395\x05\xA2R\x02\u0394\u0393", "\x03\x02\x02\x02\u0394\u0395\x03\x02\x02\x02\u0395\xA1", "\x03\x02\x02\x02\u0396\u0397\x07[\x02\x02\u0397\u0398", "\x05\x9EP\x02\u0398\u0399\x07\\\x02\x02\u0399\xA3\x03", "\x02\x02\x02\u039A\u039D\x05F$\x02\u039B\u039D\x05\xA6", "T\x02\u039C\u039A\x03\x02\x02\x02\u039C\u039B\x03\x02", "\x02\x02\u039D\xA5\x03\x02\x02\x02\u039E\u039F\x05\x9C", "O\x02\u039F\xA7\x03\x02\x02\x02\u03A0\u03A3\x05F$\x02", "\u03A1\u03A3\x05\xAAV\x02\u03A2\u03A0\x03\x02\x02\x02", "\u03A2\u03A1\x03\x02\x02\x02\u03A3\xA9\x03\x02\x02\x02", "\u03A4\u03A5\x05\x90I\x02\u03A5\xAB\x03\x02\x02\x02", "\u03A6\u03A9\x05F$\x02\u03A7\u03A9\x05\xAEX\x02\u03A8\u03A6", "\x03\x02\x02\x02\u03A8\u03A7\x03\x02\x02\x02\u03A9\xAD", "\x03\x02\x02\x02\u03AA\u03AE\x05\x96L\x02\u03AB\u03AE", "\x05\x98M\x02\u03AC\u03AE\x05\x90I\x02\u03AD\u03AA\x03", "\x02\x02\x02\u03AD\u03AB\x03\x02\x02\x02\u03AD\u03AC\x03", "\x02\x02\x02\u03AE\xAF\x03\x02\x02\x02\u03AF\u03B2\x05", "F$\x02\u03B0\u03B2\x05\xB2Z\x02\u03B1\u03AF\x03\x02\x02", "\x02\u03B1\u03B0\x03\x02\x02\x02\u03B2\xB1\x03\x02\x02", "\x02\u03B3\u03B6\x05\x90I\x02\u03B4\u03B6\x05\x96L\x02", "\u03B5\u03B3\x03\x02\x02\x02\u03B5\u03B4\x03\x02\x02\x02", "\u03B6\xB3\x03\x02\x02\x02\u03B7\u03BA\x05F$\x02\u03B8", "\u03BA\x05\xB6\\\x02\u03B9\u03B7\x03\x02\x02\x02\u03B9", "\u03B8\x03\x02\x02\x02\u03BA\xB5\x03\x02\x02\x02\u03BB", "\u03BC\x05\x90I\x02\u03BC\xB7\x03\x02\x02\x02\u03BD", "\u03C0\x05F$\x02\u03BE\u03C0\x05\xBA^\x02\u03BF\u03BD\x03", "\x02\x02\x02\u03BF\u03BE\x03\x02\x02\x02\u03C0\xB9\x03", "\x02\x02\x02\u03C1\u03C2\x05\x90I\x02\u03C2\xBB\x03", "\x02\x02\x02\u03C3\u03C6\x05F$\x02\u03C4\u03C6\x05\xBE", "`\x02\u03C5\u03C3\x03\x02\x02\x02\u03C5\u03C4\x03\x02", "\x02\x02\u03C6\xBD\x03\x02\x02\x02\u03C7\u03C8\x05\x90", "I\x02\u03C8\xBF\x03\x02\x02\x02\u03C9\u03CC\x05F$\x02", "\u03CA\u03CC\x05\xC2b\x02\u03CB\u03C9\x03\x02\x02\x02", "\u03CB\u03CA\x03\x02\x02\x02\u03CC\xC1\x03\x02\x02\x02", "\u03CD\u03CE\x05\x90I\x02\u03CE\xC3\x03\x02\x02\x02", "\u03CF\u03D2\x05F$\x02\u03D0\u03D2\x05\xC6d\x02\u03D1\u03CF", "\x03\x02\x02\x02\u03D1\u03D0\x03\x02\x02\x02\u03D2\xC5", "\x03\x02\x02\x02\u03D3\u03DA\x05\x8EH\x02\u03D4\u03DA", "\x05\x92J\x02\u03D5\u03DA\x05\x94K\x02\u03D6\u03DA\x05", "\x98M\x02\u03D7\u03DA\x05\x90I\x02\u03D8\u03DA\x05\x9A", "N\x02\u03D9\u03D3\x03\x02\x02\x02\u03D9\u03D4\x03\x02", "\x02\x02\u03D9\u03D5\x03\x02\x02\x02\u03D9\u03D6\x03\x02", "\x02\x02\u03D9\u03D7\x03\x02\x02\x02\u03D9\u03D8\x03\x02", "\x02\x02\u03DA\xC7\x03\x02\x02\x02\u03DB\u03DE\x05F", "$\x02\u03DC\u03DE\x05\xCAf\x02\u03DD\u03DB\x03\x02\x02", "\x02\u03DD\u03DC\x03\x02\x02\x02\u03DE\xC9\x03\x02\x02", "\x02\u03DF\u03E0\x05\x90I\x02\u03E0\xCB\x03\x02\x02", "\x02\u03E1\u03E4\x05\xD2j\x02\u03E2\u03E4\x07F\x02\x02", "\u03E3\u03E1\x03\x02\x02\x02\u03E3\u03E2\x03\x02\x02\x02", "\u03E4\xCD\x03\x02\x02\x02\u03E5\u03E8\x05\xD4k\x02", "\u03E6\u03E8\x07X\x02\x02\u03E7\u03E5\x03\x02\x02\x02", "\u03E7\u03E6\x03\x02\x02\x02\u03E8\xCF\x03\x02\x02\x02", "\u03E9\u03EA\t\x07\x02\x02\u03EA\xD1\x03\x02\x02\x02", "\u03EB\u03EC\t\b\x02\x02\u03EC\xD3\x03\x02\x02\x02\u03ED", "\u03EE\t\t\x02\x02\u03EE\xD5\x03\x02\x02\x02|\xD9\xE0", "\xE4\xE8\xEB\xEE\xF3\xFB\u0102\u0105\u0109\u010C\u010F\u0115", "\u0123\u0129\u0134\u0137\u0144\u0158\u015C\u0162\u0172\u017A\u0181\u0185", "\u0187\u0192\u0197\u019C\u01A0\u01A3\u01A9\u01B0\u01BD\u01C4\u01CD\u01CF", "\u01DD\u01E5\u01E8\u01EF\u01F8\u01FB\u0200\u0205\u0209\u020D\u0211\u0216", "\u021D\u0222\u0226\u022D\u0231\u0235\u023A\u0240\u0245\u024B\u0250\u0257", "\u025C\u0265\u026A\u0271\u0274\u0279\u027E\u0282\u0288\u028D\u0296\u029B", "\u02A2\u02A5\u02AC\u02B0\u02B4\u02BB\u02C4\u02CF\u02D1\u02D4\u02DB\u02DF", "\u02E5\u02EA\u02F0\u02F9\u0304\u0306\u0309\u0310\u0314\u031A\u0324\u032F", "\u0331\u0334\u033A\u033D\u0347\u034C\u037D\u0390\u0394\u039C\u03A2\u03A8", "\u03AD\u03B1\u03B5\u03B9\u03BF\u03C5\u03CB\u03D1\u03D9\u03DD\u03E3\u03E7"].join("");
var atn = new _antlr["default"].atn.ATNDeserializer().deserialize(serializedATN);
var decisionsToDFA = atn.decisionToState.map(function (ds, index) {
  return new _antlr["default"].dfa.DFA(ds, index);
});
var sharedContextCache = new _antlr["default"].PredictionContextCache();

var GraphQLFederationParser = /*#__PURE__*/function (_antlr4$Parser) {
  _inherits(GraphQLFederationParser, _antlr4$Parser);

  var _super = _createSuper(GraphQLFederationParser);

  function GraphQLFederationParser(input) {
    var _this;

    _classCallCheck(this, GraphQLFederationParser);

    _this = _super.call(this, input);
    _this._interp = new _antlr["default"].atn.ParserATNSimulator(_assertThisInitialized(_this), atn, decisionsToDFA, sharedContextCache);
    _this.ruleNames = GraphQLFederationParser.ruleNames;
    _this.literalNames = GraphQLFederationParser.literalNames;
    _this.symbolicNames = GraphQLFederationParser.symbolicNames;
    return _this;
  }

  _createClass(GraphQLFederationParser, [{
    key: "atn",
    get: function get() {
      return atn;
    }
  }, {
    key: "document",
    value: function document() {
      var localctx = new DocumentContext(this, this._ctx, this.state);
      this.enterRule(localctx, 0, GraphQLFederationParser.RULE_document);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 213;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        do {
          this.state = 212;
          this.definition();
          this.state = 215;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        } while ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.INPUT_KEYWORD | 1 << GraphQLFederationParser.TYPE_KEYWORD | 1 << GraphQLFederationParser.ENUM_KEYWORD | 1 << GraphQLFederationParser.SCALAR_KEYWORD | 1 << GraphQLFederationParser.INTERFACE_KEYWORD | 1 << GraphQLFederationParser.DIRECTIVE_KEYWORD | 1 << GraphQLFederationParser.EXTEND_KEYWORD | 1 << GraphQLFederationParser.UNION_KEYWORD | 1 << GraphQLFederationParser.QUERY_KEYWORD | 1 << GraphQLFederationParser.MUTATION_KEYWORD | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD | 1 << GraphQLFederationParser.SCHEMA_KEYWORD | 1 << GraphQLFederationParser.FRAGMENT_KEYWORD)) !== 0 || (_la - 50 & ~0x1f) == 0 && (1 << _la - 50 & (1 << GraphQLFederationParser.LBRACE - 50 | 1 << GraphQLFederationParser.STRING - 50 | 1 << GraphQLFederationParser.BLOCK_STRING - 50)) !== 0);

        this.state = 217;
        this.match(GraphQLFederationParser.EOF);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "definition",
    value: function definition() {
      var localctx = new DefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 2, GraphQLFederationParser.RULE_definition);

      try {
        this.state = 222;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.QUERY_KEYWORD:
          case GraphQLFederationParser.MUTATION_KEYWORD:
          case GraphQLFederationParser.SUBSCRIPTION_KEYWORD:
          case GraphQLFederationParser.FRAGMENT_KEYWORD:
          case GraphQLFederationParser.LBRACE:
            this.enterOuterAlt(localctx, 1);
            this.state = 219;
            this.executableDefinition();
            break;

          case GraphQLFederationParser.INPUT_KEYWORD:
          case GraphQLFederationParser.TYPE_KEYWORD:
          case GraphQLFederationParser.ENUM_KEYWORD:
          case GraphQLFederationParser.SCALAR_KEYWORD:
          case GraphQLFederationParser.INTERFACE_KEYWORD:
          case GraphQLFederationParser.DIRECTIVE_KEYWORD:
          case GraphQLFederationParser.UNION_KEYWORD:
          case GraphQLFederationParser.SCHEMA_KEYWORD:
          case GraphQLFederationParser.STRING:
          case GraphQLFederationParser.BLOCK_STRING:
            this.enterOuterAlt(localctx, 2);
            this.state = 220;
            this.typeSystemDefinition();
            break;

          case GraphQLFederationParser.EXTEND_KEYWORD:
            this.enterOuterAlt(localctx, 3);
            this.state = 221;
            this.typeSystemExtension();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "executableDefinition",
    value: function executableDefinition() {
      var localctx = new ExecutableDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 4, GraphQLFederationParser.RULE_executableDefinition);

      try {
        this.state = 226;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.QUERY_KEYWORD:
          case GraphQLFederationParser.MUTATION_KEYWORD:
          case GraphQLFederationParser.SUBSCRIPTION_KEYWORD:
          case GraphQLFederationParser.LBRACE:
            this.enterOuterAlt(localctx, 1);
            this.state = 224;
            this.operationDefinition();
            break;

          case GraphQLFederationParser.FRAGMENT_KEYWORD:
            this.enterOuterAlt(localctx, 2);
            this.state = 225;
            this.fragmentDefinition();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "operationDefinition",
    value: function operationDefinition() {
      var localctx = new OperationDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 6, GraphQLFederationParser.RULE_operationDefinition);
      var _la = 0; // Token type

      try {
        this.state = 241;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.QUERY_KEYWORD:
          case GraphQLFederationParser.MUTATION_KEYWORD:
          case GraphQLFederationParser.SUBSCRIPTION_KEYWORD:
            this.enterOuterAlt(localctx, 1);
            this.state = 228;
            this.operationType();
            this.state = 230;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            if ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.INPUT_KEYWORD | 1 << GraphQLFederationParser.TYPE_KEYWORD | 1 << GraphQLFederationParser.ENUM_KEYWORD | 1 << GraphQLFederationParser.SCALAR_KEYWORD | 1 << GraphQLFederationParser.INTERFACE_KEYWORD | 1 << GraphQLFederationParser.DIRECTIVE_KEYWORD | 1 << GraphQLFederationParser.EXTEND_KEYWORD | 1 << GraphQLFederationParser.UNION_KEYWORD | 1 << GraphQLFederationParser.IMPLEMENTS_KEYWORD | 1 << GraphQLFederationParser.QUERY_KEYWORD | 1 << GraphQLFederationParser.MUTATION_KEYWORD | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD | 1 << GraphQLFederationParser.SCHEMA_KEYWORD | 1 << GraphQLFederationParser.FRAGMENT_KEYWORD | 1 << GraphQLFederationParser.ON_KEYWORD | 1 << GraphQLFederationParser.REPEATABLE_KEYWORD | 1 << GraphQLFederationParser.INPUT_LOCATION | 1 << GraphQLFederationParser.TYPE_LOCATION | 1 << GraphQLFederationParser.ENUM_LOCATION | 1 << GraphQLFederationParser.SCALAR_LOCATION | 1 << GraphQLFederationParser.INTERFACE_LOCATION | 1 << GraphQLFederationParser.DIRECTIVE_LOCATION | 1 << GraphQLFederationParser.EXTEND_LOCATION)) !== 0 || (_la - 32 & ~0x1f) == 0 && (1 << _la - 32 & (1 << GraphQLFederationParser.UNION_LOCATION - 32 | 1 << GraphQLFederationParser.IMPLEMENTS_LOCATION - 32 | 1 << GraphQLFederationParser.QUERY_LOCATION - 32 | 1 << GraphQLFederationParser.MUTATION_LOCATION - 32 | 1 << GraphQLFederationParser.SUBSCRIPTION_LOCATION - 32 | 1 << GraphQLFederationParser.SCHEMA_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION - 32 | 1 << GraphQLFederationParser.INLINE_FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ENUM_VALUE_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION - 32)) !== 0 || (_la - 68 & ~0x1f) == 0 && (1 << _la - 68 & (1 << GraphQLFederationParser.NAME - 68 | 1 << GraphQLFederationParser.FIELDS_KEYWORD - 68 | 1 << GraphQLFederationParser.FROM_KEYWORD - 68 | 1 << GraphQLFederationParser.RESOLVABLE_KEYWORD - 68)) !== 0) {
              this.state = 229;
              this.name();
            }

            this.state = 233;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            if (_la === GraphQLFederationParser.LPAREN) {
              this.state = 232;
              this.variableDefinitions();
            }

            this.state = 236;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            if (_la === GraphQLFederationParser.AT) {
              this.state = 235;
              this.directives();
            }

            this.state = 238;
            this.selectionSet();
            break;

          case GraphQLFederationParser.LBRACE:
            this.enterOuterAlt(localctx, 2);
            this.state = 240;
            this.selectionSet();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "operationType",
    value: function operationType() {
      var localctx = new OperationTypeContext(this, this._ctx, this.state);
      this.enterRule(localctx, 8, GraphQLFederationParser.RULE_operationType);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 243;
        _la = this._input.LA(1);

        if (!((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.QUERY_KEYWORD | 1 << GraphQLFederationParser.MUTATION_KEYWORD | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD)) !== 0)) {
          this._errHandler.recoverInline(this);
        } else {
          this._errHandler.reportMatch(this);

          this.consume();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "selectionSet",
    value: function selectionSet() {
      var localctx = new SelectionSetContext(this, this._ctx, this.state);
      this.enterRule(localctx, 10, GraphQLFederationParser.RULE_selectionSet);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 245;
        this.match(GraphQLFederationParser.LBRACE);
        this.state = 247;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        do {
          this.state = 246;
          this.selection();
          this.state = 249;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        } while ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.INPUT_KEYWORD | 1 << GraphQLFederationParser.TYPE_KEYWORD | 1 << GraphQLFederationParser.ENUM_KEYWORD | 1 << GraphQLFederationParser.SCALAR_KEYWORD | 1 << GraphQLFederationParser.INTERFACE_KEYWORD | 1 << GraphQLFederationParser.DIRECTIVE_KEYWORD | 1 << GraphQLFederationParser.EXTEND_KEYWORD | 1 << GraphQLFederationParser.UNION_KEYWORD | 1 << GraphQLFederationParser.IMPLEMENTS_KEYWORD | 1 << GraphQLFederationParser.QUERY_KEYWORD | 1 << GraphQLFederationParser.MUTATION_KEYWORD | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD | 1 << GraphQLFederationParser.SCHEMA_KEYWORD | 1 << GraphQLFederationParser.FRAGMENT_KEYWORD | 1 << GraphQLFederationParser.ON_KEYWORD | 1 << GraphQLFederationParser.REPEATABLE_KEYWORD | 1 << GraphQLFederationParser.INPUT_LOCATION | 1 << GraphQLFederationParser.TYPE_LOCATION | 1 << GraphQLFederationParser.ENUM_LOCATION | 1 << GraphQLFederationParser.SCALAR_LOCATION | 1 << GraphQLFederationParser.INTERFACE_LOCATION | 1 << GraphQLFederationParser.DIRECTIVE_LOCATION | 1 << GraphQLFederationParser.EXTEND_LOCATION)) !== 0 || (_la - 32 & ~0x1f) == 0 && (1 << _la - 32 & (1 << GraphQLFederationParser.UNION_LOCATION - 32 | 1 << GraphQLFederationParser.IMPLEMENTS_LOCATION - 32 | 1 << GraphQLFederationParser.QUERY_LOCATION - 32 | 1 << GraphQLFederationParser.MUTATION_LOCATION - 32 | 1 << GraphQLFederationParser.SUBSCRIPTION_LOCATION - 32 | 1 << GraphQLFederationParser.SCHEMA_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION - 32 | 1 << GraphQLFederationParser.INLINE_FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ENUM_VALUE_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ELLIPSIS - 32)) !== 0 || (_la - 68 & ~0x1f) == 0 && (1 << _la - 68 & (1 << GraphQLFederationParser.NAME - 68 | 1 << GraphQLFederationParser.FIELDS_KEYWORD - 68 | 1 << GraphQLFederationParser.FROM_KEYWORD - 68 | 1 << GraphQLFederationParser.RESOLVABLE_KEYWORD - 68)) !== 0);

        this.state = 251;
        this.match(GraphQLFederationParser.RBRACE);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "selection",
    value: function selection() {
      var localctx = new SelectionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 12, GraphQLFederationParser.RULE_selection);

      try {
        this.state = 256;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 8, this._ctx);

        switch (la_) {
          case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 253;
            this.field();
            break;

          case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 254;
            this.fragmentSpread();
            break;

          case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 255;
            this.inlineFragment();
            break;
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "field",
    value: function field() {
      var localctx = new FieldContext(this, this._ctx, this.state);
      this.enterRule(localctx, 14, GraphQLFederationParser.RULE_field);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 259;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 9, this._ctx);

        if (la_ === 1) {
          this.state = 258;
          this.alias();
        }

        this.state = 261;
        this.name();
        this.state = 263;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.LPAREN) {
          this.state = 262;
          this.arguments();
        }

        this.state = 266;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.AT) {
          this.state = 265;
          this.directives();
        }

        this.state = 269;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.LBRACE) {
          this.state = 268;
          this.selectionSet();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "arguments",
    value: function _arguments() {
      var localctx = new ArgumentsContext(this, this._ctx, this.state);
      this.enterRule(localctx, 16, GraphQLFederationParser.RULE_arguments);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 271;
        this.match(GraphQLFederationParser.LPAREN);
        this.state = 273;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        do {
          this.state = 272;
          this.argument();
          this.state = 275;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        } while ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.INPUT_KEYWORD | 1 << GraphQLFederationParser.TYPE_KEYWORD | 1 << GraphQLFederationParser.ENUM_KEYWORD | 1 << GraphQLFederationParser.SCALAR_KEYWORD | 1 << GraphQLFederationParser.INTERFACE_KEYWORD | 1 << GraphQLFederationParser.DIRECTIVE_KEYWORD | 1 << GraphQLFederationParser.EXTEND_KEYWORD | 1 << GraphQLFederationParser.UNION_KEYWORD | 1 << GraphQLFederationParser.IMPLEMENTS_KEYWORD | 1 << GraphQLFederationParser.QUERY_KEYWORD | 1 << GraphQLFederationParser.MUTATION_KEYWORD | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD | 1 << GraphQLFederationParser.SCHEMA_KEYWORD | 1 << GraphQLFederationParser.FRAGMENT_KEYWORD | 1 << GraphQLFederationParser.ON_KEYWORD | 1 << GraphQLFederationParser.REPEATABLE_KEYWORD | 1 << GraphQLFederationParser.INPUT_LOCATION | 1 << GraphQLFederationParser.TYPE_LOCATION | 1 << GraphQLFederationParser.ENUM_LOCATION | 1 << GraphQLFederationParser.SCALAR_LOCATION | 1 << GraphQLFederationParser.INTERFACE_LOCATION | 1 << GraphQLFederationParser.DIRECTIVE_LOCATION | 1 << GraphQLFederationParser.EXTEND_LOCATION)) !== 0 || (_la - 32 & ~0x1f) == 0 && (1 << _la - 32 & (1 << GraphQLFederationParser.UNION_LOCATION - 32 | 1 << GraphQLFederationParser.IMPLEMENTS_LOCATION - 32 | 1 << GraphQLFederationParser.QUERY_LOCATION - 32 | 1 << GraphQLFederationParser.MUTATION_LOCATION - 32 | 1 << GraphQLFederationParser.SUBSCRIPTION_LOCATION - 32 | 1 << GraphQLFederationParser.SCHEMA_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION - 32 | 1 << GraphQLFederationParser.INLINE_FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ENUM_VALUE_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION - 32)) !== 0 || (_la - 68 & ~0x1f) == 0 && (1 << _la - 68 & (1 << GraphQLFederationParser.NAME - 68 | 1 << GraphQLFederationParser.FIELDS_KEYWORD - 68 | 1 << GraphQLFederationParser.FROM_KEYWORD - 68 | 1 << GraphQLFederationParser.RESOLVABLE_KEYWORD - 68)) !== 0);

        this.state = 277;
        this.match(GraphQLFederationParser.RPAREN);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "argument",
    value: function argument() {
      var localctx = new ArgumentContext(this, this._ctx, this.state);
      this.enterRule(localctx, 18, GraphQLFederationParser.RULE_argument);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 279;
        this.name();
        this.state = 280;
        this.match(GraphQLFederationParser.COLON);
        this.state = 281;
        this.value();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "alias",
    value: function alias() {
      var localctx = new AliasContext(this, this._ctx, this.state);
      this.enterRule(localctx, 20, GraphQLFederationParser.RULE_alias);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 283;
        this.name();
        this.state = 284;
        this.match(GraphQLFederationParser.COLON);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "fragmentSpread",
    value: function fragmentSpread() {
      var localctx = new FragmentSpreadContext(this, this._ctx, this.state);
      this.enterRule(localctx, 22, GraphQLFederationParser.RULE_fragmentSpread);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 286;
        this.match(GraphQLFederationParser.ELLIPSIS);
        this.state = 287;
        this.fragmentName();
        this.state = 289;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.AT) {
          this.state = 288;
          this.directives();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "fragmentDefinition",
    value: function fragmentDefinition() {
      var localctx = new FragmentDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 24, GraphQLFederationParser.RULE_fragmentDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 291;
        this.match(GraphQLFederationParser.FRAGMENT_KEYWORD);
        this.state = 292;
        this.fragmentName();
        this.state = 293;
        this.typeCondition();
        this.state = 295;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.AT) {
          this.state = 294;
          this.directives();
        }

        this.state = 297;
        this.selectionSet();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "fragmentName",
    value: function fragmentName() {
      var localctx = new FragmentNameContext(this, this._ctx, this.state);
      this.enterRule(localctx, 26, GraphQLFederationParser.RULE_fragmentName);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 299;
        this.name();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "typeCondition",
    value: function typeCondition() {
      var localctx = new TypeConditionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 28, GraphQLFederationParser.RULE_typeCondition);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 301;
        this.match(GraphQLFederationParser.ON_KEYWORD);
        this.state = 302;
        this.namedType();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "inlineFragment",
    value: function inlineFragment() {
      var localctx = new InlineFragmentContext(this, this._ctx, this.state);
      this.enterRule(localctx, 30, GraphQLFederationParser.RULE_inlineFragment);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 304;
        this.match(GraphQLFederationParser.ELLIPSIS);
        this.state = 306;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.ON_KEYWORD) {
          this.state = 305;
          this.typeCondition();
        }

        this.state = 309;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.AT) {
          this.state = 308;
          this.directives();
        }

        this.state = 311;
        this.selectionSet();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "value",
    value: function value() {
      var localctx = new ValueContext(this, this._ctx, this.state);
      this.enterRule(localctx, 32, GraphQLFederationParser.RULE_value);

      try {
        this.state = 322;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.DOLLAR:
            this.enterOuterAlt(localctx, 1);
            this.state = 313;
            this.variable();
            break;

          case GraphQLFederationParser.INT:
            this.enterOuterAlt(localctx, 2);
            this.state = 314;
            this.intValue();
            break;

          case GraphQLFederationParser.FLOAT:
            this.enterOuterAlt(localctx, 3);
            this.state = 315;
            this.floatValue();
            break;

          case GraphQLFederationParser.STRING:
          case GraphQLFederationParser.BLOCK_STRING:
            this.enterOuterAlt(localctx, 4);
            this.state = 316;
            this.stringValue();
            break;

          case GraphQLFederationParser.TRUE:
          case GraphQLFederationParser.FALSE:
            this.enterOuterAlt(localctx, 5);
            this.state = 317;
            this.booleanValue();
            break;

          case GraphQLFederationParser.NULL:
            this.enterOuterAlt(localctx, 6);
            this.state = 318;
            this.nullValue();
            break;

          case GraphQLFederationParser.INPUT_KEYWORD:
          case GraphQLFederationParser.TYPE_KEYWORD:
          case GraphQLFederationParser.ENUM_KEYWORD:
          case GraphQLFederationParser.SCALAR_KEYWORD:
          case GraphQLFederationParser.INTERFACE_KEYWORD:
          case GraphQLFederationParser.DIRECTIVE_KEYWORD:
          case GraphQLFederationParser.EXTEND_KEYWORD:
          case GraphQLFederationParser.UNION_KEYWORD:
          case GraphQLFederationParser.IMPLEMENTS_KEYWORD:
          case GraphQLFederationParser.QUERY_KEYWORD:
          case GraphQLFederationParser.MUTATION_KEYWORD:
          case GraphQLFederationParser.SUBSCRIPTION_KEYWORD:
          case GraphQLFederationParser.SCHEMA_KEYWORD:
          case GraphQLFederationParser.FRAGMENT_KEYWORD:
          case GraphQLFederationParser.ON_KEYWORD:
          case GraphQLFederationParser.REPEATABLE_KEYWORD:
          case GraphQLFederationParser.INPUT_LOCATION:
          case GraphQLFederationParser.TYPE_LOCATION:
          case GraphQLFederationParser.ENUM_LOCATION:
          case GraphQLFederationParser.SCALAR_LOCATION:
          case GraphQLFederationParser.INTERFACE_LOCATION:
          case GraphQLFederationParser.DIRECTIVE_LOCATION:
          case GraphQLFederationParser.EXTEND_LOCATION:
          case GraphQLFederationParser.UNION_LOCATION:
          case GraphQLFederationParser.IMPLEMENTS_LOCATION:
          case GraphQLFederationParser.QUERY_LOCATION:
          case GraphQLFederationParser.MUTATION_LOCATION:
          case GraphQLFederationParser.SUBSCRIPTION_LOCATION:
          case GraphQLFederationParser.SCHEMA_LOCATION:
          case GraphQLFederationParser.FRAGMENT_LOCATION:
          case GraphQLFederationParser.FIELD_LOCATION:
          case GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION:
          case GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION:
          case GraphQLFederationParser.INLINE_FRAGMENT_LOCATION:
          case GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION:
          case GraphQLFederationParser.OBJECT_LOCATION:
          case GraphQLFederationParser.FIELD_DEFINITION_LOCATION:
          case GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION:
          case GraphQLFederationParser.ENUM_VALUE_LOCATION:
          case GraphQLFederationParser.INPUT_OBJECT_LOCATION:
          case GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION:
          case GraphQLFederationParser.NAME:
          case GraphQLFederationParser.FIELDS_KEYWORD:
          case GraphQLFederationParser.FROM_KEYWORD:
          case GraphQLFederationParser.RESOLVABLE_KEYWORD:
            this.enterOuterAlt(localctx, 7);
            this.state = 319;
            this.enumValue();
            break;

          case GraphQLFederationParser.LBRACKET:
            this.enterOuterAlt(localctx, 8);
            this.state = 320;
            this.listValue();
            break;

          case GraphQLFederationParser.LBRACE:
            this.enterOuterAlt(localctx, 9);
            this.state = 321;
            this.objectValue();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "intValue",
    value: function intValue() {
      var localctx = new IntValueContext(this, this._ctx, this.state);
      this.enterRule(localctx, 34, GraphQLFederationParser.RULE_intValue);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 324;
        this.match(GraphQLFederationParser.INT);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "floatValue",
    value: function floatValue() {
      var localctx = new FloatValueContext(this, this._ctx, this.state);
      this.enterRule(localctx, 36, GraphQLFederationParser.RULE_floatValue);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 326;
        this.match(GraphQLFederationParser.FLOAT);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "booleanValue",
    value: function booleanValue() {
      var localctx = new BooleanValueContext(this, this._ctx, this.state);
      this.enterRule(localctx, 38, GraphQLFederationParser.RULE_booleanValue);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 328;
        _la = this._input.LA(1);

        if (!(_la === GraphQLFederationParser.TRUE || _la === GraphQLFederationParser.FALSE)) {
          this._errHandler.recoverInline(this);
        } else {
          this._errHandler.reportMatch(this);

          this.consume();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "stringValue",
    value: function stringValue() {
      var localctx = new StringValueContext(this, this._ctx, this.state);
      this.enterRule(localctx, 40, GraphQLFederationParser.RULE_stringValue);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 330;
        _la = this._input.LA(1);

        if (!(_la === GraphQLFederationParser.STRING || _la === GraphQLFederationParser.BLOCK_STRING)) {
          this._errHandler.recoverInline(this);
        } else {
          this._errHandler.reportMatch(this);

          this.consume();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "nullValue",
    value: function nullValue() {
      var localctx = new NullValueContext(this, this._ctx, this.state);
      this.enterRule(localctx, 42, GraphQLFederationParser.RULE_nullValue);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 332;
        this.match(GraphQLFederationParser.NULL);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "enumValue",
    value: function enumValue() {
      var localctx = new EnumValueContext(this, this._ctx, this.state);
      this.enterRule(localctx, 44, GraphQLFederationParser.RULE_enumValue);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 334;
        this.name();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "listValue",
    value: function listValue() {
      var localctx = new ListValueContext(this, this._ctx, this.state);
      this.enterRule(localctx, 46, GraphQLFederationParser.RULE_listValue);
      var _la = 0; // Token type

      try {
        this.state = 346;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 20, this._ctx);

        switch (la_) {
          case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 336;
            this.match(GraphQLFederationParser.LBRACKET);
            this.state = 337;
            this.match(GraphQLFederationParser.RBRACKET);
            break;

          case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 338;
            this.match(GraphQLFederationParser.LBRACKET);
            this.state = 340;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            do {
              this.state = 339;
              this.value();
              this.state = 342;

              this._errHandler.sync(this);

              _la = this._input.LA(1);
            } while ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.INPUT_KEYWORD | 1 << GraphQLFederationParser.TYPE_KEYWORD | 1 << GraphQLFederationParser.ENUM_KEYWORD | 1 << GraphQLFederationParser.SCALAR_KEYWORD | 1 << GraphQLFederationParser.INTERFACE_KEYWORD | 1 << GraphQLFederationParser.DIRECTIVE_KEYWORD | 1 << GraphQLFederationParser.EXTEND_KEYWORD | 1 << GraphQLFederationParser.UNION_KEYWORD | 1 << GraphQLFederationParser.IMPLEMENTS_KEYWORD | 1 << GraphQLFederationParser.QUERY_KEYWORD | 1 << GraphQLFederationParser.MUTATION_KEYWORD | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD | 1 << GraphQLFederationParser.SCHEMA_KEYWORD | 1 << GraphQLFederationParser.FRAGMENT_KEYWORD | 1 << GraphQLFederationParser.ON_KEYWORD | 1 << GraphQLFederationParser.REPEATABLE_KEYWORD | 1 << GraphQLFederationParser.INPUT_LOCATION | 1 << GraphQLFederationParser.TYPE_LOCATION | 1 << GraphQLFederationParser.ENUM_LOCATION | 1 << GraphQLFederationParser.SCALAR_LOCATION | 1 << GraphQLFederationParser.INTERFACE_LOCATION | 1 << GraphQLFederationParser.DIRECTIVE_LOCATION | 1 << GraphQLFederationParser.EXTEND_LOCATION)) !== 0 || (_la - 32 & ~0x1f) == 0 && (1 << _la - 32 & (1 << GraphQLFederationParser.UNION_LOCATION - 32 | 1 << GraphQLFederationParser.IMPLEMENTS_LOCATION - 32 | 1 << GraphQLFederationParser.QUERY_LOCATION - 32 | 1 << GraphQLFederationParser.MUTATION_LOCATION - 32 | 1 << GraphQLFederationParser.SUBSCRIPTION_LOCATION - 32 | 1 << GraphQLFederationParser.SCHEMA_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION - 32 | 1 << GraphQLFederationParser.INLINE_FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ENUM_VALUE_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.LBRACE - 32 | 1 << GraphQLFederationParser.LBRACKET - 32 | 1 << GraphQLFederationParser.DOLLAR - 32)) !== 0 || (_la - 65 & ~0x1f) == 0 && (1 << _la - 65 & (1 << GraphQLFederationParser.TRUE - 65 | 1 << GraphQLFederationParser.FALSE - 65 | 1 << GraphQLFederationParser.NULL - 65 | 1 << GraphQLFederationParser.NAME - 65 | 1 << GraphQLFederationParser.STRING - 65 | 1 << GraphQLFederationParser.BLOCK_STRING - 65 | 1 << GraphQLFederationParser.FLOAT - 65 | 1 << GraphQLFederationParser.INT - 65 | 1 << GraphQLFederationParser.FIELDS_KEYWORD - 65 | 1 << GraphQLFederationParser.FROM_KEYWORD - 65 | 1 << GraphQLFederationParser.RESOLVABLE_KEYWORD - 65)) !== 0);

            this.state = 344;
            this.match(GraphQLFederationParser.RBRACKET);
            break;
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "objectValue",
    value: function objectValue() {
      var localctx = new ObjectValueContext(this, this._ctx, this.state);
      this.enterRule(localctx, 48, GraphQLFederationParser.RULE_objectValue);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 348;
        this.match(GraphQLFederationParser.LBRACE);
        this.state = 352;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        while ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.INPUT_KEYWORD | 1 << GraphQLFederationParser.TYPE_KEYWORD | 1 << GraphQLFederationParser.ENUM_KEYWORD | 1 << GraphQLFederationParser.SCALAR_KEYWORD | 1 << GraphQLFederationParser.INTERFACE_KEYWORD | 1 << GraphQLFederationParser.DIRECTIVE_KEYWORD | 1 << GraphQLFederationParser.EXTEND_KEYWORD | 1 << GraphQLFederationParser.UNION_KEYWORD | 1 << GraphQLFederationParser.IMPLEMENTS_KEYWORD | 1 << GraphQLFederationParser.QUERY_KEYWORD | 1 << GraphQLFederationParser.MUTATION_KEYWORD | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD | 1 << GraphQLFederationParser.SCHEMA_KEYWORD | 1 << GraphQLFederationParser.FRAGMENT_KEYWORD | 1 << GraphQLFederationParser.ON_KEYWORD | 1 << GraphQLFederationParser.REPEATABLE_KEYWORD | 1 << GraphQLFederationParser.INPUT_LOCATION | 1 << GraphQLFederationParser.TYPE_LOCATION | 1 << GraphQLFederationParser.ENUM_LOCATION | 1 << GraphQLFederationParser.SCALAR_LOCATION | 1 << GraphQLFederationParser.INTERFACE_LOCATION | 1 << GraphQLFederationParser.DIRECTIVE_LOCATION | 1 << GraphQLFederationParser.EXTEND_LOCATION)) !== 0 || (_la - 32 & ~0x1f) == 0 && (1 << _la - 32 & (1 << GraphQLFederationParser.UNION_LOCATION - 32 | 1 << GraphQLFederationParser.IMPLEMENTS_LOCATION - 32 | 1 << GraphQLFederationParser.QUERY_LOCATION - 32 | 1 << GraphQLFederationParser.MUTATION_LOCATION - 32 | 1 << GraphQLFederationParser.SUBSCRIPTION_LOCATION - 32 | 1 << GraphQLFederationParser.SCHEMA_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION - 32 | 1 << GraphQLFederationParser.INLINE_FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ENUM_VALUE_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION - 32)) !== 0 || (_la - 68 & ~0x1f) == 0 && (1 << _la - 68 & (1 << GraphQLFederationParser.NAME - 68 | 1 << GraphQLFederationParser.FIELDS_KEYWORD - 68 | 1 << GraphQLFederationParser.FROM_KEYWORD - 68 | 1 << GraphQLFederationParser.RESOLVABLE_KEYWORD - 68)) !== 0) {
          this.state = 349;
          this.objectField();
          this.state = 354;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        }

        this.state = 355;
        this.match(GraphQLFederationParser.RBRACE);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "objectField",
    value: function objectField() {
      var localctx = new ObjectFieldContext(this, this._ctx, this.state);
      this.enterRule(localctx, 50, GraphQLFederationParser.RULE_objectField);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 357;
        this.name();
        this.state = 358;
        this.match(GraphQLFederationParser.COLON);
        this.state = 359;
        this.value();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "variable",
    value: function variable() {
      var localctx = new VariableContext(this, this._ctx, this.state);
      this.enterRule(localctx, 52, GraphQLFederationParser.RULE_variable);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 361;
        this.match(GraphQLFederationParser.DOLLAR);
        this.state = 362;
        this.name();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "variableDefinitions",
    value: function variableDefinitions() {
      var localctx = new VariableDefinitionsContext(this, this._ctx, this.state);
      this.enterRule(localctx, 54, GraphQLFederationParser.RULE_variableDefinitions);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 364;
        this.match(GraphQLFederationParser.LPAREN);
        this.state = 366;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        do {
          this.state = 365;
          this.variableDefinition();
          this.state = 368;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        } while (_la === GraphQLFederationParser.DOLLAR);

        this.state = 370;
        this.match(GraphQLFederationParser.RPAREN);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "variableDefinition",
    value: function variableDefinition() {
      var localctx = new VariableDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 56, GraphQLFederationParser.RULE_variableDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 372;
        this.variable();
        this.state = 373;
        this.match(GraphQLFederationParser.COLON);
        this.state = 374;
        this.type_();
        this.state = 376;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.EQ) {
          this.state = 375;
          this.defaultValue();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "defaultValue",
    value: function defaultValue() {
      var localctx = new DefaultValueContext(this, this._ctx, this.state);
      this.enterRule(localctx, 58, GraphQLFederationParser.RULE_defaultValue);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 378;
        this.match(GraphQLFederationParser.EQ);
        this.state = 379;
        this.value();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "type_",
    value: function type_() {
      var localctx = new Type_Context(this, this._ctx, this.state);
      this.enterRule(localctx, 60, GraphQLFederationParser.RULE_type_);
      var _la = 0; // Token type

      try {
        this.state = 389;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.INPUT_KEYWORD:
          case GraphQLFederationParser.TYPE_KEYWORD:
          case GraphQLFederationParser.ENUM_KEYWORD:
          case GraphQLFederationParser.SCALAR_KEYWORD:
          case GraphQLFederationParser.INTERFACE_KEYWORD:
          case GraphQLFederationParser.DIRECTIVE_KEYWORD:
          case GraphQLFederationParser.EXTEND_KEYWORD:
          case GraphQLFederationParser.UNION_KEYWORD:
          case GraphQLFederationParser.IMPLEMENTS_KEYWORD:
          case GraphQLFederationParser.QUERY_KEYWORD:
          case GraphQLFederationParser.MUTATION_KEYWORD:
          case GraphQLFederationParser.SUBSCRIPTION_KEYWORD:
          case GraphQLFederationParser.SCHEMA_KEYWORD:
          case GraphQLFederationParser.FRAGMENT_KEYWORD:
          case GraphQLFederationParser.ON_KEYWORD:
          case GraphQLFederationParser.REPEATABLE_KEYWORD:
          case GraphQLFederationParser.INPUT_LOCATION:
          case GraphQLFederationParser.TYPE_LOCATION:
          case GraphQLFederationParser.ENUM_LOCATION:
          case GraphQLFederationParser.SCALAR_LOCATION:
          case GraphQLFederationParser.INTERFACE_LOCATION:
          case GraphQLFederationParser.DIRECTIVE_LOCATION:
          case GraphQLFederationParser.EXTEND_LOCATION:
          case GraphQLFederationParser.UNION_LOCATION:
          case GraphQLFederationParser.IMPLEMENTS_LOCATION:
          case GraphQLFederationParser.QUERY_LOCATION:
          case GraphQLFederationParser.MUTATION_LOCATION:
          case GraphQLFederationParser.SUBSCRIPTION_LOCATION:
          case GraphQLFederationParser.SCHEMA_LOCATION:
          case GraphQLFederationParser.FRAGMENT_LOCATION:
          case GraphQLFederationParser.FIELD_LOCATION:
          case GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION:
          case GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION:
          case GraphQLFederationParser.INLINE_FRAGMENT_LOCATION:
          case GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION:
          case GraphQLFederationParser.OBJECT_LOCATION:
          case GraphQLFederationParser.FIELD_DEFINITION_LOCATION:
          case GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION:
          case GraphQLFederationParser.ENUM_VALUE_LOCATION:
          case GraphQLFederationParser.INPUT_OBJECT_LOCATION:
          case GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION:
          case GraphQLFederationParser.NAME:
          case GraphQLFederationParser.FIELDS_KEYWORD:
          case GraphQLFederationParser.FROM_KEYWORD:
          case GraphQLFederationParser.RESOLVABLE_KEYWORD:
            this.enterOuterAlt(localctx, 1);
            this.state = 381;
            this.namedType();
            this.state = 383;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            if (_la === GraphQLFederationParser.EXCL) {
              this.state = 382;
              this.match(GraphQLFederationParser.EXCL);
            }

            break;

          case GraphQLFederationParser.LBRACKET:
            this.enterOuterAlt(localctx, 2);
            this.state = 385;
            this.listType();
            this.state = 387;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            if (_la === GraphQLFederationParser.EXCL) {
              this.state = 386;
              this.match(GraphQLFederationParser.EXCL);
            }

            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "namedType",
    value: function namedType() {
      var localctx = new NamedTypeContext(this, this._ctx, this.state);
      this.enterRule(localctx, 62, GraphQLFederationParser.RULE_namedType);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 391;
        this.name();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "listType",
    value: function listType() {
      var localctx = new ListTypeContext(this, this._ctx, this.state);
      this.enterRule(localctx, 64, GraphQLFederationParser.RULE_listType);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 393;
        this.match(GraphQLFederationParser.LBRACKET);
        this.state = 394;
        this.type_();
        this.state = 395;
        this.match(GraphQLFederationParser.RBRACKET);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "directives",
    value: function directives() {
      var localctx = new DirectivesContext(this, this._ctx, this.state);
      this.enterRule(localctx, 66, GraphQLFederationParser.RULE_directives);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 398;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        do {
          this.state = 397;
          this.directive();
          this.state = 400;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        } while (_la === GraphQLFederationParser.AT);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "directive",
    value: function directive() {
      var localctx = new DirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 68, GraphQLFederationParser.RULE_directive);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 402;
        this.match(GraphQLFederationParser.AT);
        this.state = 403;
        this.name();
        this.state = 405;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.LPAREN) {
          this.state = 404;
          this.arguments();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "typeSystemDefinition",
    value: function typeSystemDefinition() {
      var localctx = new TypeSystemDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 70, GraphQLFederationParser.RULE_typeSystemDefinition);

      try {
        this.state = 410;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 29, this._ctx);

        switch (la_) {
          case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 407;
            this.schemaDefinition();
            break;

          case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 408;
            this.typeDefinition();
            break;

          case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 409;
            this.directiveDefinition();
            break;
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "typeSystemExtension",
    value: function typeSystemExtension() {
      var localctx = new TypeSystemExtensionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 72, GraphQLFederationParser.RULE_typeSystemExtension);

      try {
        this.state = 414;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 30, this._ctx);

        switch (la_) {
          case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 412;
            this.schemaExtension();
            break;

          case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 413;
            this.typeExtension();
            break;
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "schemaDefinition",
    value: function schemaDefinition() {
      var localctx = new SchemaDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 74, GraphQLFederationParser.RULE_schemaDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 417;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.STRING || _la === GraphQLFederationParser.BLOCK_STRING) {
          this.state = 416;
          this.description();
        }

        this.state = 419;
        this.match(GraphQLFederationParser.SCHEMA_KEYWORD);
        this.state = 423;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        while (_la === GraphQLFederationParser.LINK || _la === GraphQLFederationParser.AT) {
          this.state = 420;
          this.schemaDirective();
          this.state = 425;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        }

        this.state = 426;
        this.match(GraphQLFederationParser.LBRACE);
        this.state = 428;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        do {
          this.state = 427;
          this.rootOperationTypeDefinition();
          this.state = 430;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        } while ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.QUERY_KEYWORD | 1 << GraphQLFederationParser.MUTATION_KEYWORD | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD)) !== 0);

        this.state = 432;
        this.match(GraphQLFederationParser.RBRACE);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "rootOperationTypeDefinition",
    value: function rootOperationTypeDefinition() {
      var localctx = new RootOperationTypeDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 76, GraphQLFederationParser.RULE_rootOperationTypeDefinition);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 434;
        this.operationType();
        this.state = 435;
        this.match(GraphQLFederationParser.COLON);
        this.state = 436;
        this.namedType();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "schemaExtension",
    value: function schemaExtension() {
      var localctx = new SchemaExtensionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 78, GraphQLFederationParser.RULE_schemaExtension);
      var _la = 0; // Token type

      try {
        this.state = 461;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 37, this._ctx);

        switch (la_) {
          case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 438;
            this.match(GraphQLFederationParser.EXTEND_KEYWORD);
            this.state = 439;
            this.match(GraphQLFederationParser.SCHEMA_KEYWORD);
            this.state = 443;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            while (_la === GraphQLFederationParser.LINK || _la === GraphQLFederationParser.AT) {
              this.state = 440;
              this.schemaDirective();
              this.state = 445;

              this._errHandler.sync(this);

              _la = this._input.LA(1);
            }

            this.state = 446;
            this.match(GraphQLFederationParser.LBRACE);
            this.state = 448;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            do {
              this.state = 447;
              this.operationTypeDefinition();
              this.state = 450;

              this._errHandler.sync(this);

              _la = this._input.LA(1);
            } while ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.QUERY_KEYWORD | 1 << GraphQLFederationParser.MUTATION_KEYWORD | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD)) !== 0);

            this.state = 452;
            this.match(GraphQLFederationParser.RBRACE);
            break;

          case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 454;
            this.match(GraphQLFederationParser.EXTEND_KEYWORD);
            this.state = 455;
            this.match(GraphQLFederationParser.SCHEMA_KEYWORD);
            this.state = 457;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            do {
              this.state = 456;
              this.schemaDirective();
              this.state = 459;

              this._errHandler.sync(this);

              _la = this._input.LA(1);
            } while (_la === GraphQLFederationParser.LINK || _la === GraphQLFederationParser.AT);

            break;
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "operationTypeDefinition",
    value: function operationTypeDefinition() {
      var localctx = new OperationTypeDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 80, GraphQLFederationParser.RULE_operationTypeDefinition);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 463;
        this.operationType();
        this.state = 464;
        this.match(GraphQLFederationParser.COLON);
        this.state = 465;
        this.namedType();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "description",
    value: function description() {
      var localctx = new DescriptionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 82, GraphQLFederationParser.RULE_description);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 467;
        this.stringValue();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "typeDefinition",
    value: function typeDefinition() {
      var localctx = new TypeDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 84, GraphQLFederationParser.RULE_typeDefinition);

      try {
        this.state = 475;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 38, this._ctx);

        switch (la_) {
          case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 469;
            this.scalarTypeDefinition();
            break;

          case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 470;
            this.objectTypeDefinition();
            break;

          case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 471;
            this.interfaceTypeDefinition();
            break;

          case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 472;
            this.unionTypeDefinition();
            break;

          case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 473;
            this.enumTypeDefinition();
            break;

          case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 474;
            this.inputObjectTypeDefinition();
            break;
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "typeExtension",
    value: function typeExtension() {
      var localctx = new TypeExtensionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 86, GraphQLFederationParser.RULE_typeExtension);

      try {
        this.state = 483;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 39, this._ctx);

        switch (la_) {
          case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 477;
            this.scalarTypeExtension();
            break;

          case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 478;
            this.objectTypeExtension();
            break;

          case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 479;
            this.interfaceTypeExtension();
            break;

          case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 480;
            this.unionTypeExtension();
            break;

          case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 481;
            this.enumTypeExtension();
            break;

          case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 482;
            this.inputObjectTypeExtension();
            break;
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "scalarTypeDefinition",
    value: function scalarTypeDefinition() {
      var localctx = new ScalarTypeDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 88, GraphQLFederationParser.RULE_scalarTypeDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 486;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.STRING || _la === GraphQLFederationParser.BLOCK_STRING) {
          this.state = 485;
          this.description();
        }

        this.state = 488;
        this.match(GraphQLFederationParser.SCALAR_KEYWORD);
        this.state = 489;
        this.name();
        this.state = 493;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.AT) {
          this.state = 490;
          this.scalarDirective();
          this.state = 495;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "scalarTypeExtension",
    value: function scalarTypeExtension() {
      var localctx = new ScalarTypeExtensionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 90, GraphQLFederationParser.RULE_scalarTypeExtension);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 496;
        this.match(GraphQLFederationParser.EXTEND_KEYWORD);
        this.state = 497;
        this.match(GraphQLFederationParser.SCALAR_KEYWORD);
        this.state = 498;
        this.name();
        this.state = 500;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        do {
          this.state = 499;
          this.scalarDirective();
          this.state = 502;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        } while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.AT);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "objectTypeDefinition",
    value: function objectTypeDefinition() {
      var localctx = new ObjectTypeDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 92, GraphQLFederationParser.RULE_objectTypeDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 505;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.STRING || _la === GraphQLFederationParser.BLOCK_STRING) {
          this.state = 504;
          this.description();
        }

        this.state = 507;
        this.match(GraphQLFederationParser.TYPE_KEYWORD);
        this.state = 508;
        this.name();
        this.state = 510;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.IMPLEMENTS_KEYWORD) {
          this.state = 509;
          this.implementsInterfaces();
        }

        this.state = 515;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        while ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.INACCESSIBLE | 1 << GraphQLFederationParser.KEY | 1 << GraphQLFederationParser.SHAREABLE)) !== 0 || _la === GraphQLFederationParser.AT) {
          this.state = 512;
          this.objectDirective();
          this.state = 517;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        }

        this.state = 519;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 46, this._ctx);

        if (la_ === 1) {
          this.state = 518;
          this.fieldsDefinition();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "implementsInterfaces",
    value: function implementsInterfaces() {
      var localctx = new ImplementsInterfacesContext(this, this._ctx, this.state);
      this.enterRule(localctx, 94, GraphQLFederationParser.RULE_implementsInterfaces);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 521;
        this.match(GraphQLFederationParser.IMPLEMENTS_KEYWORD);
        this.state = 523;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.AMP) {
          this.state = 522;
          this.match(GraphQLFederationParser.AMP);
        }

        this.state = 525;
        this.namedType();
        this.state = 532;

        this._errHandler.sync(this);

        var _alt = this._interp.adaptivePredict(this._input, 49, this._ctx);

        while (_alt != 2 && _alt != _antlr["default"].atn.ATN.INVALID_ALT_NUMBER) {
          if (_alt === 1) {
            this.state = 527;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            if (_la === GraphQLFederationParser.AMP) {
              this.state = 526;
              this.match(GraphQLFederationParser.AMP);
            }

            this.state = 529;
            this.namedType();
          }

          this.state = 534;

          this._errHandler.sync(this);

          _alt = this._interp.adaptivePredict(this._input, 49, this._ctx);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "fieldsDefinition",
    value: function fieldsDefinition() {
      var localctx = new FieldsDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 96, GraphQLFederationParser.RULE_fieldsDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 535;
        this.match(GraphQLFederationParser.LBRACE);
        this.state = 537;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        do {
          this.state = 536;
          this.fieldDefinition();
          this.state = 539;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        } while ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.INPUT_KEYWORD | 1 << GraphQLFederationParser.TYPE_KEYWORD | 1 << GraphQLFederationParser.ENUM_KEYWORD | 1 << GraphQLFederationParser.SCALAR_KEYWORD | 1 << GraphQLFederationParser.INTERFACE_KEYWORD | 1 << GraphQLFederationParser.DIRECTIVE_KEYWORD | 1 << GraphQLFederationParser.EXTEND_KEYWORD | 1 << GraphQLFederationParser.UNION_KEYWORD | 1 << GraphQLFederationParser.IMPLEMENTS_KEYWORD | 1 << GraphQLFederationParser.QUERY_KEYWORD | 1 << GraphQLFederationParser.MUTATION_KEYWORD | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD | 1 << GraphQLFederationParser.SCHEMA_KEYWORD | 1 << GraphQLFederationParser.FRAGMENT_KEYWORD | 1 << GraphQLFederationParser.ON_KEYWORD | 1 << GraphQLFederationParser.REPEATABLE_KEYWORD | 1 << GraphQLFederationParser.INPUT_LOCATION | 1 << GraphQLFederationParser.TYPE_LOCATION | 1 << GraphQLFederationParser.ENUM_LOCATION | 1 << GraphQLFederationParser.SCALAR_LOCATION | 1 << GraphQLFederationParser.INTERFACE_LOCATION | 1 << GraphQLFederationParser.DIRECTIVE_LOCATION | 1 << GraphQLFederationParser.EXTEND_LOCATION)) !== 0 || (_la - 32 & ~0x1f) == 0 && (1 << _la - 32 & (1 << GraphQLFederationParser.UNION_LOCATION - 32 | 1 << GraphQLFederationParser.IMPLEMENTS_LOCATION - 32 | 1 << GraphQLFederationParser.QUERY_LOCATION - 32 | 1 << GraphQLFederationParser.MUTATION_LOCATION - 32 | 1 << GraphQLFederationParser.SUBSCRIPTION_LOCATION - 32 | 1 << GraphQLFederationParser.SCHEMA_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION - 32 | 1 << GraphQLFederationParser.INLINE_FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ENUM_VALUE_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION - 32)) !== 0 || (_la - 68 & ~0x1f) == 0 && (1 << _la - 68 & (1 << GraphQLFederationParser.NAME - 68 | 1 << GraphQLFederationParser.STRING - 68 | 1 << GraphQLFederationParser.BLOCK_STRING - 68 | 1 << GraphQLFederationParser.FIELDS_KEYWORD - 68 | 1 << GraphQLFederationParser.FROM_KEYWORD - 68 | 1 << GraphQLFederationParser.RESOLVABLE_KEYWORD - 68)) !== 0);

        this.state = 541;
        this.match(GraphQLFederationParser.RBRACE);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "fieldDefinition",
    value: function fieldDefinition() {
      var localctx = new FieldDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 98, GraphQLFederationParser.RULE_fieldDefinition);
      var _la = 0; // Token type

      try {
        this.state = 568;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 56, this._ctx);

        switch (la_) {
          case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 544;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            if (_la === GraphQLFederationParser.STRING || _la === GraphQLFederationParser.BLOCK_STRING) {
              this.state = 543;
              this.description();
            }

            this.state = 546;
            this.name();
            this.state = 548;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            if (_la === GraphQLFederationParser.LPAREN) {
              this.state = 547;
              this.argumentsDefinition();
            }

            this.state = 550;
            this.match(GraphQLFederationParser.COLON);
            this.state = 551;
            this.type_();
            this.state = 555;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            while ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.EXTERNAL | 1 << GraphQLFederationParser.INACCESSIBLE | 1 << GraphQLFederationParser.REQUIRES | 1 << GraphQLFederationParser.PROVIDES | 1 << GraphQLFederationParser.SHAREABLE | 1 << GraphQLFederationParser.OVERRIDE)) !== 0 || _la === GraphQLFederationParser.AT) {
              this.state = 552;
              this.fieldDirective();
              this.state = 557;

              this._errHandler.sync(this);

              _la = this._input.LA(1);
            }

            break;

          case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 559;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            if (_la === GraphQLFederationParser.STRING || _la === GraphQLFederationParser.BLOCK_STRING) {
              this.state = 558;
              this.description();
            }

            this.state = 561;
            localctx._name = this.name();
            this.state = 563;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            if (_la === GraphQLFederationParser.LPAREN) {
              this.state = 562;
              this.argumentsDefinition();
            }

            this.state = 565;
            this.match(GraphQLFederationParser.COLON);
            this.notifyErrorListeners("[AMF]Field '" + (localctx._name === null ? null : this._input.getText(new _antlr["default"].Interval(localctx._name.start, localctx._name.stop))) + "' missing field type", localctx._name === null ? null : localctx._name.start, null);
            break;
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "argumentsDefinition",
    value: function argumentsDefinition() {
      var localctx = new ArgumentsDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 100, GraphQLFederationParser.RULE_argumentsDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 570;
        this.match(GraphQLFederationParser.LPAREN);
        this.state = 572;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        do {
          this.state = 571;
          this.inputValueDefinition();
          this.state = 574;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        } while ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.INPUT_KEYWORD | 1 << GraphQLFederationParser.TYPE_KEYWORD | 1 << GraphQLFederationParser.ENUM_KEYWORD | 1 << GraphQLFederationParser.SCALAR_KEYWORD | 1 << GraphQLFederationParser.INTERFACE_KEYWORD | 1 << GraphQLFederationParser.DIRECTIVE_KEYWORD | 1 << GraphQLFederationParser.EXTEND_KEYWORD | 1 << GraphQLFederationParser.UNION_KEYWORD | 1 << GraphQLFederationParser.IMPLEMENTS_KEYWORD | 1 << GraphQLFederationParser.QUERY_KEYWORD | 1 << GraphQLFederationParser.MUTATION_KEYWORD | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD | 1 << GraphQLFederationParser.SCHEMA_KEYWORD | 1 << GraphQLFederationParser.FRAGMENT_KEYWORD | 1 << GraphQLFederationParser.ON_KEYWORD | 1 << GraphQLFederationParser.REPEATABLE_KEYWORD | 1 << GraphQLFederationParser.INPUT_LOCATION | 1 << GraphQLFederationParser.TYPE_LOCATION | 1 << GraphQLFederationParser.ENUM_LOCATION | 1 << GraphQLFederationParser.SCALAR_LOCATION | 1 << GraphQLFederationParser.INTERFACE_LOCATION | 1 << GraphQLFederationParser.DIRECTIVE_LOCATION | 1 << GraphQLFederationParser.EXTEND_LOCATION)) !== 0 || (_la - 32 & ~0x1f) == 0 && (1 << _la - 32 & (1 << GraphQLFederationParser.UNION_LOCATION - 32 | 1 << GraphQLFederationParser.IMPLEMENTS_LOCATION - 32 | 1 << GraphQLFederationParser.QUERY_LOCATION - 32 | 1 << GraphQLFederationParser.MUTATION_LOCATION - 32 | 1 << GraphQLFederationParser.SUBSCRIPTION_LOCATION - 32 | 1 << GraphQLFederationParser.SCHEMA_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION - 32 | 1 << GraphQLFederationParser.INLINE_FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ENUM_VALUE_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION - 32)) !== 0 || (_la - 68 & ~0x1f) == 0 && (1 << _la - 68 & (1 << GraphQLFederationParser.NAME - 68 | 1 << GraphQLFederationParser.STRING - 68 | 1 << GraphQLFederationParser.BLOCK_STRING - 68 | 1 << GraphQLFederationParser.FIELDS_KEYWORD - 68 | 1 << GraphQLFederationParser.FROM_KEYWORD - 68 | 1 << GraphQLFederationParser.RESOLVABLE_KEYWORD - 68)) !== 0);

        this.state = 576;
        this.match(GraphQLFederationParser.RPAREN);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "inputValueDefinition",
    value: function inputValueDefinition() {
      var localctx = new InputValueDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 102, GraphQLFederationParser.RULE_inputValueDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 579;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.STRING || _la === GraphQLFederationParser.BLOCK_STRING) {
          this.state = 578;
          this.description();
        }

        this.state = 581;
        this.name();
        this.state = 582;
        this.match(GraphQLFederationParser.COLON);
        this.state = 583;
        this.type_();
        this.state = 585;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.EQ) {
          this.state = 584;
          this.defaultValue();
        }

        this.state = 590;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.AT) {
          this.state = 587;
          this.inputValueDirective();
          this.state = 592;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "objectTypeExtension",
    value: function objectTypeExtension() {
      var localctx = new ObjectTypeExtensionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 104, GraphQLFederationParser.RULE_objectTypeExtension);
      var _la = 0; // Token type

      try {
        this.state = 623;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 65, this._ctx);

        switch (la_) {
          case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 593;
            this.match(GraphQLFederationParser.EXTEND_KEYWORD);
            this.state = 594;
            this.match(GraphQLFederationParser.TYPE_KEYWORD);
            this.state = 595;
            this.name();
            this.state = 597;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            if (_la === GraphQLFederationParser.IMPLEMENTS_KEYWORD) {
              this.state = 596;
              this.implementsInterfaces();
            }

            this.state = 602;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            while ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.INACCESSIBLE | 1 << GraphQLFederationParser.KEY | 1 << GraphQLFederationParser.SHAREABLE)) !== 0 || _la === GraphQLFederationParser.AT) {
              this.state = 599;
              this.objectDirective();
              this.state = 604;

              this._errHandler.sync(this);

              _la = this._input.LA(1);
            }

            this.state = 605;
            this.fieldsDefinition();
            break;

          case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 607;
            this.match(GraphQLFederationParser.EXTEND_KEYWORD);
            this.state = 608;
            this.match(GraphQLFederationParser.TYPE_KEYWORD);
            this.state = 609;
            this.name();
            this.state = 611;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            if (_la === GraphQLFederationParser.IMPLEMENTS_KEYWORD) {
              this.state = 610;
              this.implementsInterfaces();
            }

            this.state = 614;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            do {
              this.state = 613;
              this.objectDirective();
              this.state = 616;

              this._errHandler.sync(this);

              _la = this._input.LA(1);
            } while ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.INACCESSIBLE | 1 << GraphQLFederationParser.KEY | 1 << GraphQLFederationParser.SHAREABLE)) !== 0 || _la === GraphQLFederationParser.AT);

            break;

          case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 618;
            this.match(GraphQLFederationParser.EXTEND_KEYWORD);
            this.state = 619;
            this.match(GraphQLFederationParser.TYPE_KEYWORD);
            this.state = 620;
            this.name();
            this.state = 621;
            this.implementsInterfaces();
            break;
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "interfaceTypeDefinition",
    value: function interfaceTypeDefinition() {
      var localctx = new InterfaceTypeDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 106, GraphQLFederationParser.RULE_interfaceTypeDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 626;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.STRING || _la === GraphQLFederationParser.BLOCK_STRING) {
          this.state = 625;
          this.description();
        }

        this.state = 628;
        this.match(GraphQLFederationParser.INTERFACE_KEYWORD);
        this.state = 629;
        this.name();
        this.state = 631;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.IMPLEMENTS_KEYWORD) {
          this.state = 630;
          this.implementsInterfaces();
        }

        this.state = 636;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.KEY || _la === GraphQLFederationParser.AT) {
          this.state = 633;
          this.interfaceDirective();
          this.state = 638;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        }

        this.state = 640;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 69, this._ctx);

        if (la_ === 1) {
          this.state = 639;
          this.fieldsDefinition();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "interfaceTypeExtension",
    value: function interfaceTypeExtension() {
      var localctx = new InterfaceTypeExtensionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 108, GraphQLFederationParser.RULE_interfaceTypeExtension);
      var _la = 0; // Token type

      try {
        this.state = 672;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 74, this._ctx);

        switch (la_) {
          case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 642;
            this.match(GraphQLFederationParser.EXTEND_KEYWORD);
            this.state = 643;
            this.match(GraphQLFederationParser.INTERFACE_KEYWORD);
            this.state = 644;
            this.name();
            this.state = 646;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            if (_la === GraphQLFederationParser.IMPLEMENTS_KEYWORD) {
              this.state = 645;
              this.implementsInterfaces();
            }

            this.state = 651;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.KEY || _la === GraphQLFederationParser.AT) {
              this.state = 648;
              this.interfaceDirective();
              this.state = 653;

              this._errHandler.sync(this);

              _la = this._input.LA(1);
            }

            this.state = 654;
            this.fieldsDefinition();
            break;

          case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 656;
            this.match(GraphQLFederationParser.EXTEND_KEYWORD);
            this.state = 657;
            this.match(GraphQLFederationParser.INTERFACE_KEYWORD);
            this.state = 658;
            this.name();
            this.state = 660;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            if (_la === GraphQLFederationParser.IMPLEMENTS_KEYWORD) {
              this.state = 659;
              this.implementsInterfaces();
            }

            this.state = 663;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            do {
              this.state = 662;
              this.interfaceDirective();
              this.state = 665;

              this._errHandler.sync(this);

              _la = this._input.LA(1);
            } while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.KEY || _la === GraphQLFederationParser.AT);

            break;

          case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 667;
            this.match(GraphQLFederationParser.EXTEND_KEYWORD);
            this.state = 668;
            this.match(GraphQLFederationParser.INTERFACE_KEYWORD);
            this.state = 669;
            this.name();
            this.state = 670;
            this.implementsInterfaces();
            break;
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "unionTypeDefinition",
    value: function unionTypeDefinition() {
      var localctx = new UnionTypeDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 110, GraphQLFederationParser.RULE_unionTypeDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 675;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.STRING || _la === GraphQLFederationParser.BLOCK_STRING) {
          this.state = 674;
          this.description();
        }

        this.state = 677;
        this.match(GraphQLFederationParser.UNION_KEYWORD);
        this.state = 678;
        this.name();
        this.state = 682;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.AT) {
          this.state = 679;
          this.unionDirective();
          this.state = 684;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        }

        this.state = 686;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.EQ) {
          this.state = 685;
          this.unionMemberTypes();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "unionMemberTypes",
    value: function unionMemberTypes() {
      var localctx = new UnionMemberTypesContext(this, this._ctx, this.state);
      this.enterRule(localctx, 112, GraphQLFederationParser.RULE_unionMemberTypes);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 688;
        this.match(GraphQLFederationParser.EQ);
        this.state = 690;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.VSLASH) {
          this.state = 689;
          this.match(GraphQLFederationParser.VSLASH);
        }

        this.state = 692;
        this.namedType();
        this.state = 697;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        while (_la === GraphQLFederationParser.VSLASH) {
          this.state = 693;
          this.match(GraphQLFederationParser.VSLASH);
          this.state = 694;
          this.namedType();
          this.state = 699;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "unionTypeExtension",
    value: function unionTypeExtension() {
      var localctx = new UnionTypeExtensionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 114, GraphQLFederationParser.RULE_unionTypeExtension);
      var _la = 0; // Token type

      try {
        this.state = 719;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 82, this._ctx);

        switch (la_) {
          case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 700;
            this.match(GraphQLFederationParser.EXTEND_KEYWORD);
            this.state = 701;
            this.match(GraphQLFederationParser.UNION_KEYWORD);
            this.state = 702;
            this.name();
            this.state = 706;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.AT) {
              this.state = 703;
              this.unionDirective();
              this.state = 708;

              this._errHandler.sync(this);

              _la = this._input.LA(1);
            }

            this.state = 709;
            this.unionMemberTypes();
            break;

          case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 711;
            this.match(GraphQLFederationParser.EXTEND_KEYWORD);
            this.state = 712;
            this.match(GraphQLFederationParser.UNION_KEYWORD);
            this.state = 713;
            this.name();
            this.state = 715;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            do {
              this.state = 714;
              this.unionDirective();
              this.state = 717;

              this._errHandler.sync(this);

              _la = this._input.LA(1);
            } while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.AT);

            break;
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "enumTypeDefinition",
    value: function enumTypeDefinition() {
      var localctx = new EnumTypeDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 116, GraphQLFederationParser.RULE_enumTypeDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 722;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.STRING || _la === GraphQLFederationParser.BLOCK_STRING) {
          this.state = 721;
          this.description();
        }

        this.state = 724;
        this.match(GraphQLFederationParser.ENUM_KEYWORD);
        this.state = 725;
        this.name();
        this.state = 729;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.AT) {
          this.state = 726;
          this.enumDirective();
          this.state = 731;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        }

        this.state = 733;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 85, this._ctx);

        if (la_ === 1) {
          this.state = 732;
          this.enumValuesDefinition();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "enumValuesDefinition",
    value: function enumValuesDefinition() {
      var localctx = new EnumValuesDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 118, GraphQLFederationParser.RULE_enumValuesDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 735;
        this.match(GraphQLFederationParser.LBRACE);
        this.state = 737;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        do {
          this.state = 736;
          this.enumValueDefinition();
          this.state = 739;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        } while ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.INPUT_KEYWORD | 1 << GraphQLFederationParser.TYPE_KEYWORD | 1 << GraphQLFederationParser.ENUM_KEYWORD | 1 << GraphQLFederationParser.SCALAR_KEYWORD | 1 << GraphQLFederationParser.INTERFACE_KEYWORD | 1 << GraphQLFederationParser.DIRECTIVE_KEYWORD | 1 << GraphQLFederationParser.EXTEND_KEYWORD | 1 << GraphQLFederationParser.UNION_KEYWORD | 1 << GraphQLFederationParser.IMPLEMENTS_KEYWORD | 1 << GraphQLFederationParser.QUERY_KEYWORD | 1 << GraphQLFederationParser.MUTATION_KEYWORD | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD | 1 << GraphQLFederationParser.SCHEMA_KEYWORD | 1 << GraphQLFederationParser.FRAGMENT_KEYWORD | 1 << GraphQLFederationParser.ON_KEYWORD | 1 << GraphQLFederationParser.REPEATABLE_KEYWORD | 1 << GraphQLFederationParser.INPUT_LOCATION | 1 << GraphQLFederationParser.TYPE_LOCATION | 1 << GraphQLFederationParser.ENUM_LOCATION | 1 << GraphQLFederationParser.SCALAR_LOCATION | 1 << GraphQLFederationParser.INTERFACE_LOCATION | 1 << GraphQLFederationParser.DIRECTIVE_LOCATION | 1 << GraphQLFederationParser.EXTEND_LOCATION)) !== 0 || (_la - 32 & ~0x1f) == 0 && (1 << _la - 32 & (1 << GraphQLFederationParser.UNION_LOCATION - 32 | 1 << GraphQLFederationParser.IMPLEMENTS_LOCATION - 32 | 1 << GraphQLFederationParser.QUERY_LOCATION - 32 | 1 << GraphQLFederationParser.MUTATION_LOCATION - 32 | 1 << GraphQLFederationParser.SUBSCRIPTION_LOCATION - 32 | 1 << GraphQLFederationParser.SCHEMA_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION - 32 | 1 << GraphQLFederationParser.INLINE_FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ENUM_VALUE_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION - 32)) !== 0 || (_la - 68 & ~0x1f) == 0 && (1 << _la - 68 & (1 << GraphQLFederationParser.NAME - 68 | 1 << GraphQLFederationParser.STRING - 68 | 1 << GraphQLFederationParser.BLOCK_STRING - 68 | 1 << GraphQLFederationParser.FIELDS_KEYWORD - 68 | 1 << GraphQLFederationParser.FROM_KEYWORD - 68 | 1 << GraphQLFederationParser.RESOLVABLE_KEYWORD - 68)) !== 0);

        this.state = 741;
        this.match(GraphQLFederationParser.RBRACE);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "enumValueDefinition",
    value: function enumValueDefinition() {
      var localctx = new EnumValueDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 120, GraphQLFederationParser.RULE_enumValueDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 744;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.STRING || _la === GraphQLFederationParser.BLOCK_STRING) {
          this.state = 743;
          this.description();
        }

        this.state = 746;
        this.enumValue();
        this.state = 750;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.AT) {
          this.state = 747;
          this.enumValueDirective();
          this.state = 752;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "enumTypeExtension",
    value: function enumTypeExtension() {
      var localctx = new EnumTypeExtensionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 122, GraphQLFederationParser.RULE_enumTypeExtension);
      var _la = 0; // Token type

      try {
        this.state = 772;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 91, this._ctx);

        switch (la_) {
          case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 753;
            this.match(GraphQLFederationParser.EXTEND_KEYWORD);
            this.state = 754;
            this.match(GraphQLFederationParser.ENUM_KEYWORD);
            this.state = 755;
            this.name();
            this.state = 759;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.AT) {
              this.state = 756;
              this.enumDirective();
              this.state = 761;

              this._errHandler.sync(this);

              _la = this._input.LA(1);
            }

            this.state = 762;
            this.enumValuesDefinition();
            break;

          case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 764;
            this.match(GraphQLFederationParser.EXTEND_KEYWORD);
            this.state = 765;
            this.match(GraphQLFederationParser.ENUM_KEYWORD);
            this.state = 766;
            this.name();
            this.state = 768;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            do {
              this.state = 767;
              this.enumDirective();
              this.state = 770;

              this._errHandler.sync(this);

              _la = this._input.LA(1);
            } while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.AT);

            break;
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "inputObjectTypeDefinition",
    value: function inputObjectTypeDefinition() {
      var localctx = new InputObjectTypeDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 124, GraphQLFederationParser.RULE_inputObjectTypeDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 775;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.STRING || _la === GraphQLFederationParser.BLOCK_STRING) {
          this.state = 774;
          this.description();
        }

        this.state = 777;
        this.match(GraphQLFederationParser.INPUT_KEYWORD);
        this.state = 778;
        this.name();
        this.state = 782;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.AT) {
          this.state = 779;
          this.inputObjectDirective();
          this.state = 784;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        }

        this.state = 786;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 94, this._ctx);

        if (la_ === 1) {
          this.state = 785;
          this.inputFieldsDefinition();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "inputFieldsDefinition",
    value: function inputFieldsDefinition() {
      var localctx = new InputFieldsDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 126, GraphQLFederationParser.RULE_inputFieldsDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 788;
        this.match(GraphQLFederationParser.LBRACE);
        this.state = 790;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        do {
          this.state = 789;
          this.inputValueDefinition();
          this.state = 792;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        } while ((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.INPUT_KEYWORD | 1 << GraphQLFederationParser.TYPE_KEYWORD | 1 << GraphQLFederationParser.ENUM_KEYWORD | 1 << GraphQLFederationParser.SCALAR_KEYWORD | 1 << GraphQLFederationParser.INTERFACE_KEYWORD | 1 << GraphQLFederationParser.DIRECTIVE_KEYWORD | 1 << GraphQLFederationParser.EXTEND_KEYWORD | 1 << GraphQLFederationParser.UNION_KEYWORD | 1 << GraphQLFederationParser.IMPLEMENTS_KEYWORD | 1 << GraphQLFederationParser.QUERY_KEYWORD | 1 << GraphQLFederationParser.MUTATION_KEYWORD | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD | 1 << GraphQLFederationParser.SCHEMA_KEYWORD | 1 << GraphQLFederationParser.FRAGMENT_KEYWORD | 1 << GraphQLFederationParser.ON_KEYWORD | 1 << GraphQLFederationParser.REPEATABLE_KEYWORD | 1 << GraphQLFederationParser.INPUT_LOCATION | 1 << GraphQLFederationParser.TYPE_LOCATION | 1 << GraphQLFederationParser.ENUM_LOCATION | 1 << GraphQLFederationParser.SCALAR_LOCATION | 1 << GraphQLFederationParser.INTERFACE_LOCATION | 1 << GraphQLFederationParser.DIRECTIVE_LOCATION | 1 << GraphQLFederationParser.EXTEND_LOCATION)) !== 0 || (_la - 32 & ~0x1f) == 0 && (1 << _la - 32 & (1 << GraphQLFederationParser.UNION_LOCATION - 32 | 1 << GraphQLFederationParser.IMPLEMENTS_LOCATION - 32 | 1 << GraphQLFederationParser.QUERY_LOCATION - 32 | 1 << GraphQLFederationParser.MUTATION_LOCATION - 32 | 1 << GraphQLFederationParser.SUBSCRIPTION_LOCATION - 32 | 1 << GraphQLFederationParser.SCHEMA_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION - 32 | 1 << GraphQLFederationParser.INLINE_FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ENUM_VALUE_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION - 32)) !== 0 || (_la - 68 & ~0x1f) == 0 && (1 << _la - 68 & (1 << GraphQLFederationParser.NAME - 68 | 1 << GraphQLFederationParser.STRING - 68 | 1 << GraphQLFederationParser.BLOCK_STRING - 68 | 1 << GraphQLFederationParser.FIELDS_KEYWORD - 68 | 1 << GraphQLFederationParser.FROM_KEYWORD - 68 | 1 << GraphQLFederationParser.RESOLVABLE_KEYWORD - 68)) !== 0);

        this.state = 794;
        this.match(GraphQLFederationParser.RBRACE);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "inputObjectTypeExtension",
    value: function inputObjectTypeExtension() {
      var localctx = new InputObjectTypeExtensionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 128, GraphQLFederationParser.RULE_inputObjectTypeExtension);
      var _la = 0; // Token type

      try {
        this.state = 815;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 98, this._ctx);

        switch (la_) {
          case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 796;
            this.match(GraphQLFederationParser.EXTEND_KEYWORD);
            this.state = 797;
            this.match(GraphQLFederationParser.INPUT_KEYWORD);
            this.state = 798;
            this.name();
            this.state = 802;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.AT) {
              this.state = 799;
              this.inputObjectDirective();
              this.state = 804;

              this._errHandler.sync(this);

              _la = this._input.LA(1);
            }

            this.state = 805;
            this.inputFieldsDefinition();
            break;

          case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 807;
            this.match(GraphQLFederationParser.EXTEND_KEYWORD);
            this.state = 808;
            this.match(GraphQLFederationParser.INPUT_KEYWORD);
            this.state = 809;
            this.name();
            this.state = 811;

            this._errHandler.sync(this);

            _la = this._input.LA(1);

            do {
              this.state = 810;
              this.inputObjectDirective();
              this.state = 813;

              this._errHandler.sync(this);

              _la = this._input.LA(1);
            } while (_la === GraphQLFederationParser.INACCESSIBLE || _la === GraphQLFederationParser.AT);

            break;
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "directiveDefinition",
    value: function directiveDefinition() {
      var localctx = new DirectiveDefinitionContext(this, this._ctx, this.state);
      this.enterRule(localctx, 130, GraphQLFederationParser.RULE_directiveDefinition);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 818;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.STRING || _la === GraphQLFederationParser.BLOCK_STRING) {
          this.state = 817;
          this.description();
        }

        this.state = 820;
        this.match(GraphQLFederationParser.DIRECTIVE_KEYWORD);
        this.state = 821;
        this.match(GraphQLFederationParser.AT);
        this.state = 822;
        this.name();
        this.state = 824;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.LPAREN) {
          this.state = 823;
          this.argumentsDefinition();
        }

        this.state = 827;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.REPEATABLE_KEYWORD) {
          this.state = 826;
          this.match(GraphQLFederationParser.REPEATABLE_KEYWORD);
        }

        this.state = 829;
        this.match(GraphQLFederationParser.ON_KEYWORD);
        this.state = 830;
        this.directiveLocations();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "directiveLocations",
    value: function directiveLocations() {
      var localctx = new DirectiveLocationsContext(this, this._ctx, this.state);
      this.enterRule(localctx, 132, GraphQLFederationParser.RULE_directiveLocations);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 832;
        this.directiveLocation();
        this.state = 837;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        while (_la === GraphQLFederationParser.VSLASH) {
          this.state = 833;
          this.match(GraphQLFederationParser.VSLASH);
          this.state = 834;
          this.directiveLocation();
          this.state = 839;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "directiveLocation",
    value: function directiveLocation() {
      var localctx = new DirectiveLocationContext(this, this._ctx, this.state);
      this.enterRule(localctx, 134, GraphQLFederationParser.RULE_directiveLocation);

      try {
        this.state = 842;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.QUERY_LOCATION:
          case GraphQLFederationParser.MUTATION_LOCATION:
          case GraphQLFederationParser.SUBSCRIPTION_LOCATION:
          case GraphQLFederationParser.FIELD_LOCATION:
          case GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION:
          case GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION:
          case GraphQLFederationParser.INLINE_FRAGMENT_LOCATION:
          case GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION:
            this.enterOuterAlt(localctx, 1);
            this.state = 840;
            this.executableDirectiveLocation();
            break;

          case GraphQLFederationParser.ENUM_LOCATION:
          case GraphQLFederationParser.SCALAR_LOCATION:
          case GraphQLFederationParser.INTERFACE_LOCATION:
          case GraphQLFederationParser.UNION_LOCATION:
          case GraphQLFederationParser.SCHEMA_LOCATION:
          case GraphQLFederationParser.OBJECT_LOCATION:
          case GraphQLFederationParser.FIELD_DEFINITION_LOCATION:
          case GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION:
          case GraphQLFederationParser.ENUM_VALUE_LOCATION:
          case GraphQLFederationParser.INPUT_OBJECT_LOCATION:
          case GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION:
            this.enterOuterAlt(localctx, 2);
            this.state = 841;
            this.typeSystemDirectiveLocation();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "executableDirectiveLocation",
    value: function executableDirectiveLocation() {
      var localctx = new ExecutableDirectiveLocationContext(this, this._ctx, this.state);
      this.enterRule(localctx, 136, GraphQLFederationParser.RULE_executableDirectiveLocation);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 844;
        _la = this._input.LA(1);

        if (!((_la - 34 & ~0x1f) == 0 && (1 << _la - 34 & (1 << GraphQLFederationParser.QUERY_LOCATION - 34 | 1 << GraphQLFederationParser.MUTATION_LOCATION - 34 | 1 << GraphQLFederationParser.SUBSCRIPTION_LOCATION - 34 | 1 << GraphQLFederationParser.FIELD_LOCATION - 34 | 1 << GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION - 34 | 1 << GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION - 34 | 1 << GraphQLFederationParser.INLINE_FRAGMENT_LOCATION - 34 | 1 << GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION - 34)) !== 0)) {
          this._errHandler.recoverInline(this);
        } else {
          this._errHandler.reportMatch(this);

          this.consume();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "typeSystemDirectiveLocation",
    value: function typeSystemDirectiveLocation() {
      var localctx = new TypeSystemDirectiveLocationContext(this, this._ctx, this.state);
      this.enterRule(localctx, 138, GraphQLFederationParser.RULE_typeSystemDirectiveLocation);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 846;
        _la = this._input.LA(1);

        if (!((_la - 27 & ~0x1f) == 0 && (1 << _la - 27 & (1 << GraphQLFederationParser.ENUM_LOCATION - 27 | 1 << GraphQLFederationParser.SCALAR_LOCATION - 27 | 1 << GraphQLFederationParser.INTERFACE_LOCATION - 27 | 1 << GraphQLFederationParser.UNION_LOCATION - 27 | 1 << GraphQLFederationParser.SCHEMA_LOCATION - 27 | 1 << GraphQLFederationParser.OBJECT_LOCATION - 27 | 1 << GraphQLFederationParser.FIELD_DEFINITION_LOCATION - 27 | 1 << GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION - 27 | 1 << GraphQLFederationParser.ENUM_VALUE_LOCATION - 27 | 1 << GraphQLFederationParser.INPUT_OBJECT_LOCATION - 27 | 1 << GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION - 27)) !== 0)) {
          this._errHandler.recoverInline(this);
        } else {
          this._errHandler.reportMatch(this);

          this.consume();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "externalDirective",
    value: function externalDirective() {
      var localctx = new ExternalDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 140, GraphQLFederationParser.RULE_externalDirective);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 848;
        this.match(GraphQLFederationParser.EXTERNAL);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "inaccessibleDirective",
    value: function inaccessibleDirective() {
      var localctx = new InaccessibleDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 142, GraphQLFederationParser.RULE_inaccessibleDirective);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 850;
        this.match(GraphQLFederationParser.INACCESSIBLE);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "requiresDirective",
    value: function requiresDirective() {
      var localctx = new RequiresDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 144, GraphQLFederationParser.RULE_requiresDirective);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 852;
        this.match(GraphQLFederationParser.REQUIRES);
        this.state = 853;
        this.match(GraphQLFederationParser.LPAREN_F);
        this.state = 854;
        this.match(GraphQLFederationParser.FIELDS_KEYWORD);
        this.state = 855;
        this.match(GraphQLFederationParser.COLON_F);
        this.state = 856;
        this.match(GraphQLFederationParser.DQUOTE_F);
        this.state = 857;
        this.fieldSet();
        this.state = 858;
        this.match(GraphQLFederationParser.DQUOTE_F);
        this.state = 859;
        this.match(GraphQLFederationParser.RPAREN_F);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "providesDirective",
    value: function providesDirective() {
      var localctx = new ProvidesDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 146, GraphQLFederationParser.RULE_providesDirective);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 861;
        this.match(GraphQLFederationParser.PROVIDES);
        this.state = 862;
        this.match(GraphQLFederationParser.LPAREN_F);
        this.state = 863;
        this.match(GraphQLFederationParser.FIELDS_KEYWORD);
        this.state = 864;
        this.match(GraphQLFederationParser.COLON_F);
        this.state = 865;
        this.match(GraphQLFederationParser.DQUOTE_F);
        this.state = 866;
        this.fieldSet();
        this.state = 867;
        this.match(GraphQLFederationParser.DQUOTE_F);
        this.state = 868;
        this.match(GraphQLFederationParser.RPAREN_F);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "keyDirective",
    value: function keyDirective() {
      var localctx = new KeyDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 148, GraphQLFederationParser.RULE_keyDirective);

      try {
        this.state = 891;

        this._errHandler.sync(this);

        var la_ = this._interp.adaptivePredict(this._input, 104, this._ctx);

        switch (la_) {
          case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 870;
            this.match(GraphQLFederationParser.KEY);
            this.state = 871;
            this.match(GraphQLFederationParser.LPAREN_F);
            this.state = 872;
            this.match(GraphQLFederationParser.FIELDS_KEYWORD);
            this.state = 873;
            this.match(GraphQLFederationParser.COLON_F);
            this.state = 874;
            this.match(GraphQLFederationParser.DQUOTE_F);
            this.state = 875;
            this.fieldSet();
            this.state = 876;
            this.match(GraphQLFederationParser.DQUOTE_F);
            this.state = 877;
            this.match(GraphQLFederationParser.RPAREN_F);
            break;

          case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 879;
            this.match(GraphQLFederationParser.KEY);
            this.state = 880;
            this.match(GraphQLFederationParser.LPAREN_F);
            this.state = 881;
            this.match(GraphQLFederationParser.FIELDS_KEYWORD);
            this.state = 882;
            this.match(GraphQLFederationParser.COLON_F);
            this.state = 883;
            this.match(GraphQLFederationParser.DQUOTE_F);
            this.state = 884;
            this.fieldSet();
            this.state = 885;
            this.match(GraphQLFederationParser.DQUOTE_F);
            this.state = 886;
            this.match(GraphQLFederationParser.RESOLVABLE_KEYWORD);
            this.state = 887;
            this.match(GraphQLFederationParser.COLON_F);
            this.state = 888;
            this.booleanValue_f();
            this.state = 889;
            this.match(GraphQLFederationParser.RPAREN_F);
            break;
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "shareableDirective",
    value: function shareableDirective() {
      var localctx = new ShareableDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 150, GraphQLFederationParser.RULE_shareableDirective);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 893;
        this.match(GraphQLFederationParser.SHAREABLE);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "overrideDirective",
    value: function overrideDirective() {
      var localctx = new OverrideDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 152, GraphQLFederationParser.RULE_overrideDirective);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 895;
        this.match(GraphQLFederationParser.OVERRIDE);
        this.state = 896;
        this.match(GraphQLFederationParser.LPAREN_F);
        this.state = 897;
        this.match(GraphQLFederationParser.FROM_KEYWORD);
        this.state = 898;
        this.match(GraphQLFederationParser.COLON_F);
        this.state = 899;
        this.match(GraphQLFederationParser.DQUOTE_F);
        this.state = 900;
        this.name_f();
        this.state = 901;
        this.match(GraphQLFederationParser.DQUOTE_F);
        this.state = 902;
        this.match(GraphQLFederationParser.RPAREN_F);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "linkDirective",
    value: function linkDirective() {
      var localctx = new LinkDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 154, GraphQLFederationParser.RULE_linkDirective);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 904;
        this.match(GraphQLFederationParser.LINK);
        this.state = 905;
        this.match(GraphQLFederationParser.STRING_LINK);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "fieldSet",
    value: function fieldSet() {
      var localctx = new FieldSetContext(this, this._ctx, this.state);
      this.enterRule(localctx, 156, GraphQLFederationParser.RULE_fieldSet);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 908;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        do {
          this.state = 907;
          this.fieldSetComponent();
          this.state = 910;

          this._errHandler.sync(this);

          _la = this._input.LA(1);
        } while ((_la - 86 & ~0x1f) == 0 && (1 << _la - 86 & (1 << GraphQLFederationParser.NAME_F - 86 | 1 << GraphQLFederationParser.INPUT_KEYWORD_F - 86 | 1 << GraphQLFederationParser.TYPE_KEYWORD_F - 86 | 1 << GraphQLFederationParser.ENUM_KEYWORD_F - 86 | 1 << GraphQLFederationParser.SCALAR_KEYWORD_F - 86 | 1 << GraphQLFederationParser.INTERFACE_KEYWORD_F - 86 | 1 << GraphQLFederationParser.DIRECTIVE_KEYWORD_F - 86 | 1 << GraphQLFederationParser.EXTEND_KEYWORD_F - 86 | 1 << GraphQLFederationParser.UNION_KEYWORD_F - 86 | 1 << GraphQLFederationParser.IMPLEMENTS_KEYWORD_F - 86 | 1 << GraphQLFederationParser.QUERY_KEYWORD_F - 86 | 1 << GraphQLFederationParser.MUTATION_KEYWORD_F - 86 | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD_F - 86 | 1 << GraphQLFederationParser.SCHEMA_KEYWORD_F - 86 | 1 << GraphQLFederationParser.FRAGMENT_KEYWORD_F - 86 | 1 << GraphQLFederationParser.ON_KEYWORD_F - 86 | 1 << GraphQLFederationParser.REPEATABLE_KEYWORD_F - 86)) !== 0);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "fieldSetComponent",
    value: function fieldSetComponent() {
      var localctx = new FieldSetComponentContext(this, this._ctx, this.state);
      this.enterRule(localctx, 158, GraphQLFederationParser.RULE_fieldSetComponent);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 912;
        this.name_f();
        this.state = 914;

        this._errHandler.sync(this);

        _la = this._input.LA(1);

        if (_la === GraphQLFederationParser.LBRACE_F) {
          this.state = 913;
          this.nestedFieldSet();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "nestedFieldSet",
    value: function nestedFieldSet() {
      var localctx = new NestedFieldSetContext(this, this._ctx, this.state);
      this.enterRule(localctx, 160, GraphQLFederationParser.RULE_nestedFieldSet);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 916;
        this.match(GraphQLFederationParser.LBRACE_F);
        this.state = 917;
        this.fieldSet();
        this.state = 918;
        this.match(GraphQLFederationParser.RBRACE_F);
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "schemaDirective",
    value: function schemaDirective() {
      var localctx = new SchemaDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 162, GraphQLFederationParser.RULE_schemaDirective);

      try {
        this.state = 922;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.AT:
            this.enterOuterAlt(localctx, 1);
            this.state = 920;
            this.directive();
            break;

          case GraphQLFederationParser.LINK:
            this.enterOuterAlt(localctx, 2);
            this.state = 921;
            this.schemaFederationDirective();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "schemaFederationDirective",
    value: function schemaFederationDirective() {
      var localctx = new SchemaFederationDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 164, GraphQLFederationParser.RULE_schemaFederationDirective);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 924;
        this.linkDirective();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "scalarDirective",
    value: function scalarDirective() {
      var localctx = new ScalarDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 166, GraphQLFederationParser.RULE_scalarDirective);

      try {
        this.state = 928;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.AT:
            this.enterOuterAlt(localctx, 1);
            this.state = 926;
            this.directive();
            break;

          case GraphQLFederationParser.INACCESSIBLE:
            this.enterOuterAlt(localctx, 2);
            this.state = 927;
            this.scalarFederationDirective();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "scalarFederationDirective",
    value: function scalarFederationDirective() {
      var localctx = new ScalarFederationDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 168, GraphQLFederationParser.RULE_scalarFederationDirective);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 930;
        this.inaccessibleDirective();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "objectDirective",
    value: function objectDirective() {
      var localctx = new ObjectDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 170, GraphQLFederationParser.RULE_objectDirective);

      try {
        this.state = 934;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.AT:
            this.enterOuterAlt(localctx, 1);
            this.state = 932;
            this.directive();
            break;

          case GraphQLFederationParser.INACCESSIBLE:
          case GraphQLFederationParser.KEY:
          case GraphQLFederationParser.SHAREABLE:
            this.enterOuterAlt(localctx, 2);
            this.state = 933;
            this.objectFederationDirective();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "objectFederationDirective",
    value: function objectFederationDirective() {
      var localctx = new ObjectFederationDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 172, GraphQLFederationParser.RULE_objectFederationDirective);

      try {
        this.state = 939;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.KEY:
            this.enterOuterAlt(localctx, 1);
            this.state = 936;
            this.keyDirective();
            break;

          case GraphQLFederationParser.SHAREABLE:
            this.enterOuterAlt(localctx, 2);
            this.state = 937;
            this.shareableDirective();
            break;

          case GraphQLFederationParser.INACCESSIBLE:
            this.enterOuterAlt(localctx, 3);
            this.state = 938;
            this.inaccessibleDirective();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "interfaceDirective",
    value: function interfaceDirective() {
      var localctx = new InterfaceDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 174, GraphQLFederationParser.RULE_interfaceDirective);

      try {
        this.state = 943;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.AT:
            this.enterOuterAlt(localctx, 1);
            this.state = 941;
            this.directive();
            break;

          case GraphQLFederationParser.INACCESSIBLE:
          case GraphQLFederationParser.KEY:
            this.enterOuterAlt(localctx, 2);
            this.state = 942;
            this.interfaceFederationDirective();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "interfaceFederationDirective",
    value: function interfaceFederationDirective() {
      var localctx = new InterfaceFederationDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 176, GraphQLFederationParser.RULE_interfaceFederationDirective);

      try {
        this.state = 947;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.INACCESSIBLE:
            this.enterOuterAlt(localctx, 1);
            this.state = 945;
            this.inaccessibleDirective();
            break;

          case GraphQLFederationParser.KEY:
            this.enterOuterAlt(localctx, 2);
            this.state = 946;
            this.keyDirective();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "unionDirective",
    value: function unionDirective() {
      var localctx = new UnionDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 178, GraphQLFederationParser.RULE_unionDirective);

      try {
        this.state = 951;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.AT:
            this.enterOuterAlt(localctx, 1);
            this.state = 949;
            this.directive();
            break;

          case GraphQLFederationParser.INACCESSIBLE:
            this.enterOuterAlt(localctx, 2);
            this.state = 950;
            this.unionFederationDirective();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "unionFederationDirective",
    value: function unionFederationDirective() {
      var localctx = new UnionFederationDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 180, GraphQLFederationParser.RULE_unionFederationDirective);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 953;
        this.inaccessibleDirective();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "enumDirective",
    value: function enumDirective() {
      var localctx = new EnumDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 182, GraphQLFederationParser.RULE_enumDirective);

      try {
        this.state = 957;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.AT:
            this.enterOuterAlt(localctx, 1);
            this.state = 955;
            this.directive();
            break;

          case GraphQLFederationParser.INACCESSIBLE:
            this.enterOuterAlt(localctx, 2);
            this.state = 956;
            this.enumFederationDirective();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "enumFederationDirective",
    value: function enumFederationDirective() {
      var localctx = new EnumFederationDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 184, GraphQLFederationParser.RULE_enumFederationDirective);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 959;
        this.inaccessibleDirective();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "inputObjectDirective",
    value: function inputObjectDirective() {
      var localctx = new InputObjectDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 186, GraphQLFederationParser.RULE_inputObjectDirective);

      try {
        this.state = 963;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.AT:
            this.enterOuterAlt(localctx, 1);
            this.state = 961;
            this.directive();
            break;

          case GraphQLFederationParser.INACCESSIBLE:
            this.enterOuterAlt(localctx, 2);
            this.state = 962;
            this.inputObjectFederationDirective();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "inputObjectFederationDirective",
    value: function inputObjectFederationDirective() {
      var localctx = new InputObjectFederationDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 188, GraphQLFederationParser.RULE_inputObjectFederationDirective);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 965;
        this.inaccessibleDirective();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "inputValueDirective",
    value: function inputValueDirective() {
      var localctx = new InputValueDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 190, GraphQLFederationParser.RULE_inputValueDirective);

      try {
        this.state = 969;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.AT:
            this.enterOuterAlt(localctx, 1);
            this.state = 967;
            this.directive();
            break;

          case GraphQLFederationParser.INACCESSIBLE:
            this.enterOuterAlt(localctx, 2);
            this.state = 968;
            this.inputFieldFederationDirective();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "inputFieldFederationDirective",
    value: function inputFieldFederationDirective() {
      var localctx = new InputFieldFederationDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 192, GraphQLFederationParser.RULE_inputFieldFederationDirective);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 971;
        this.inaccessibleDirective();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "fieldDirective",
    value: function fieldDirective() {
      var localctx = new FieldDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 194, GraphQLFederationParser.RULE_fieldDirective);

      try {
        this.state = 975;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.AT:
            this.enterOuterAlt(localctx, 1);
            this.state = 973;
            this.directive();
            break;

          case GraphQLFederationParser.EXTERNAL:
          case GraphQLFederationParser.INACCESSIBLE:
          case GraphQLFederationParser.REQUIRES:
          case GraphQLFederationParser.PROVIDES:
          case GraphQLFederationParser.SHAREABLE:
          case GraphQLFederationParser.OVERRIDE:
            this.enterOuterAlt(localctx, 2);
            this.state = 974;
            this.fieldFederationDirective();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "fieldFederationDirective",
    value: function fieldFederationDirective() {
      var localctx = new FieldFederationDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 196, GraphQLFederationParser.RULE_fieldFederationDirective);

      try {
        this.state = 983;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.EXTERNAL:
            this.enterOuterAlt(localctx, 1);
            this.state = 977;
            this.externalDirective();
            break;

          case GraphQLFederationParser.REQUIRES:
            this.enterOuterAlt(localctx, 2);
            this.state = 978;
            this.requiresDirective();
            break;

          case GraphQLFederationParser.PROVIDES:
            this.enterOuterAlt(localctx, 3);
            this.state = 979;
            this.providesDirective();
            break;

          case GraphQLFederationParser.SHAREABLE:
            this.enterOuterAlt(localctx, 4);
            this.state = 980;
            this.shareableDirective();
            break;

          case GraphQLFederationParser.INACCESSIBLE:
            this.enterOuterAlt(localctx, 5);
            this.state = 981;
            this.inaccessibleDirective();
            break;

          case GraphQLFederationParser.OVERRIDE:
            this.enterOuterAlt(localctx, 6);
            this.state = 982;
            this.overrideDirective();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "enumValueDirective",
    value: function enumValueDirective() {
      var localctx = new EnumValueDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 198, GraphQLFederationParser.RULE_enumValueDirective);

      try {
        this.state = 987;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.AT:
            this.enterOuterAlt(localctx, 1);
            this.state = 985;
            this.directive();
            break;

          case GraphQLFederationParser.INACCESSIBLE:
            this.enterOuterAlt(localctx, 2);
            this.state = 986;
            this.enumValueFederationDirective();
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "enumValueFederationDirective",
    value: function enumValueFederationDirective() {
      var localctx = new EnumValueFederationDirectiveContext(this, this._ctx, this.state);
      this.enterRule(localctx, 200, GraphQLFederationParser.RULE_enumValueFederationDirective);

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 989;
        this.inaccessibleDirective();
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "name",
    value: function name() {
      var localctx = new NameContext(this, this._ctx, this.state);
      this.enterRule(localctx, 202, GraphQLFederationParser.RULE_name);

      try {
        this.state = 993;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.INPUT_KEYWORD:
          case GraphQLFederationParser.TYPE_KEYWORD:
          case GraphQLFederationParser.ENUM_KEYWORD:
          case GraphQLFederationParser.SCALAR_KEYWORD:
          case GraphQLFederationParser.INTERFACE_KEYWORD:
          case GraphQLFederationParser.DIRECTIVE_KEYWORD:
          case GraphQLFederationParser.EXTEND_KEYWORD:
          case GraphQLFederationParser.UNION_KEYWORD:
          case GraphQLFederationParser.IMPLEMENTS_KEYWORD:
          case GraphQLFederationParser.QUERY_KEYWORD:
          case GraphQLFederationParser.MUTATION_KEYWORD:
          case GraphQLFederationParser.SUBSCRIPTION_KEYWORD:
          case GraphQLFederationParser.SCHEMA_KEYWORD:
          case GraphQLFederationParser.FRAGMENT_KEYWORD:
          case GraphQLFederationParser.ON_KEYWORD:
          case GraphQLFederationParser.REPEATABLE_KEYWORD:
          case GraphQLFederationParser.INPUT_LOCATION:
          case GraphQLFederationParser.TYPE_LOCATION:
          case GraphQLFederationParser.ENUM_LOCATION:
          case GraphQLFederationParser.SCALAR_LOCATION:
          case GraphQLFederationParser.INTERFACE_LOCATION:
          case GraphQLFederationParser.DIRECTIVE_LOCATION:
          case GraphQLFederationParser.EXTEND_LOCATION:
          case GraphQLFederationParser.UNION_LOCATION:
          case GraphQLFederationParser.IMPLEMENTS_LOCATION:
          case GraphQLFederationParser.QUERY_LOCATION:
          case GraphQLFederationParser.MUTATION_LOCATION:
          case GraphQLFederationParser.SUBSCRIPTION_LOCATION:
          case GraphQLFederationParser.SCHEMA_LOCATION:
          case GraphQLFederationParser.FRAGMENT_LOCATION:
          case GraphQLFederationParser.FIELD_LOCATION:
          case GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION:
          case GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION:
          case GraphQLFederationParser.INLINE_FRAGMENT_LOCATION:
          case GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION:
          case GraphQLFederationParser.OBJECT_LOCATION:
          case GraphQLFederationParser.FIELD_DEFINITION_LOCATION:
          case GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION:
          case GraphQLFederationParser.ENUM_VALUE_LOCATION:
          case GraphQLFederationParser.INPUT_OBJECT_LOCATION:
          case GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION:
          case GraphQLFederationParser.FIELDS_KEYWORD:
          case GraphQLFederationParser.FROM_KEYWORD:
          case GraphQLFederationParser.RESOLVABLE_KEYWORD:
            this.enterOuterAlt(localctx, 1);
            this.state = 991;
            this.keyword();
            break;

          case GraphQLFederationParser.NAME:
            this.enterOuterAlt(localctx, 2);
            this.state = 992;
            this.match(GraphQLFederationParser.NAME);
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "name_f",
    value: function name_f() {
      var localctx = new Name_fContext(this, this._ctx, this.state);
      this.enterRule(localctx, 204, GraphQLFederationParser.RULE_name_f);

      try {
        this.state = 997;

        this._errHandler.sync(this);

        switch (this._input.LA(1)) {
          case GraphQLFederationParser.INPUT_KEYWORD_F:
          case GraphQLFederationParser.TYPE_KEYWORD_F:
          case GraphQLFederationParser.ENUM_KEYWORD_F:
          case GraphQLFederationParser.SCALAR_KEYWORD_F:
          case GraphQLFederationParser.INTERFACE_KEYWORD_F:
          case GraphQLFederationParser.DIRECTIVE_KEYWORD_F:
          case GraphQLFederationParser.EXTEND_KEYWORD_F:
          case GraphQLFederationParser.UNION_KEYWORD_F:
          case GraphQLFederationParser.IMPLEMENTS_KEYWORD_F:
          case GraphQLFederationParser.QUERY_KEYWORD_F:
          case GraphQLFederationParser.MUTATION_KEYWORD_F:
          case GraphQLFederationParser.SUBSCRIPTION_KEYWORD_F:
          case GraphQLFederationParser.SCHEMA_KEYWORD_F:
          case GraphQLFederationParser.FRAGMENT_KEYWORD_F:
          case GraphQLFederationParser.ON_KEYWORD_F:
          case GraphQLFederationParser.REPEATABLE_KEYWORD_F:
            this.enterOuterAlt(localctx, 1);
            this.state = 995;
            this.keyword_f();
            break;

          case GraphQLFederationParser.NAME_F:
            this.enterOuterAlt(localctx, 2);
            this.state = 996;
            this.match(GraphQLFederationParser.NAME_F);
            break;

          default:
            throw new _antlr["default"].error.NoViableAltException(this);
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "booleanValue_f",
    value: function booleanValue_f() {
      var localctx = new BooleanValue_fContext(this, this._ctx, this.state);
      this.enterRule(localctx, 206, GraphQLFederationParser.RULE_booleanValue_f);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 999;
        _la = this._input.LA(1);

        if (!(_la === GraphQLFederationParser.TRUE_F || _la === GraphQLFederationParser.FALSE_F)) {
          this._errHandler.recoverInline(this);
        } else {
          this._errHandler.reportMatch(this);

          this.consume();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "keyword",
    value: function keyword() {
      var localctx = new KeywordContext(this, this._ctx, this.state);
      this.enterRule(localctx, 208, GraphQLFederationParser.RULE_keyword);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1001;
        _la = this._input.LA(1);

        if (!((_la & ~0x1f) == 0 && (1 << _la & (1 << GraphQLFederationParser.INPUT_KEYWORD | 1 << GraphQLFederationParser.TYPE_KEYWORD | 1 << GraphQLFederationParser.ENUM_KEYWORD | 1 << GraphQLFederationParser.SCALAR_KEYWORD | 1 << GraphQLFederationParser.INTERFACE_KEYWORD | 1 << GraphQLFederationParser.DIRECTIVE_KEYWORD | 1 << GraphQLFederationParser.EXTEND_KEYWORD | 1 << GraphQLFederationParser.UNION_KEYWORD | 1 << GraphQLFederationParser.IMPLEMENTS_KEYWORD | 1 << GraphQLFederationParser.QUERY_KEYWORD | 1 << GraphQLFederationParser.MUTATION_KEYWORD | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD | 1 << GraphQLFederationParser.SCHEMA_KEYWORD | 1 << GraphQLFederationParser.FRAGMENT_KEYWORD | 1 << GraphQLFederationParser.ON_KEYWORD | 1 << GraphQLFederationParser.REPEATABLE_KEYWORD | 1 << GraphQLFederationParser.INPUT_LOCATION | 1 << GraphQLFederationParser.TYPE_LOCATION | 1 << GraphQLFederationParser.ENUM_LOCATION | 1 << GraphQLFederationParser.SCALAR_LOCATION | 1 << GraphQLFederationParser.INTERFACE_LOCATION | 1 << GraphQLFederationParser.DIRECTIVE_LOCATION | 1 << GraphQLFederationParser.EXTEND_LOCATION)) !== 0 || (_la - 32 & ~0x1f) == 0 && (1 << _la - 32 & (1 << GraphQLFederationParser.UNION_LOCATION - 32 | 1 << GraphQLFederationParser.IMPLEMENTS_LOCATION - 32 | 1 << GraphQLFederationParser.QUERY_LOCATION - 32 | 1 << GraphQLFederationParser.MUTATION_LOCATION - 32 | 1 << GraphQLFederationParser.SUBSCRIPTION_LOCATION - 32 | 1 << GraphQLFederationParser.SCHEMA_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION - 32 | 1 << GraphQLFederationParser.INLINE_FRAGMENT_LOCATION - 32 | 1 << GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.FIELD_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION - 32 | 1 << GraphQLFederationParser.ENUM_VALUE_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_OBJECT_LOCATION - 32 | 1 << GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION - 32)) !== 0 || (_la - 80 & ~0x1f) == 0 && (1 << _la - 80 & (1 << GraphQLFederationParser.FIELDS_KEYWORD - 80 | 1 << GraphQLFederationParser.FROM_KEYWORD - 80 | 1 << GraphQLFederationParser.RESOLVABLE_KEYWORD - 80)) !== 0)) {
          this._errHandler.recoverInline(this);
        } else {
          this._errHandler.reportMatch(this);

          this.consume();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }, {
    key: "keyword_f",
    value: function keyword_f() {
      var localctx = new Keyword_fContext(this, this._ctx, this.state);
      this.enterRule(localctx, 210, GraphQLFederationParser.RULE_keyword_f);
      var _la = 0; // Token type

      try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1003;
        _la = this._input.LA(1);

        if (!((_la - 93 & ~0x1f) == 0 && (1 << _la - 93 & (1 << GraphQLFederationParser.INPUT_KEYWORD_F - 93 | 1 << GraphQLFederationParser.TYPE_KEYWORD_F - 93 | 1 << GraphQLFederationParser.ENUM_KEYWORD_F - 93 | 1 << GraphQLFederationParser.SCALAR_KEYWORD_F - 93 | 1 << GraphQLFederationParser.INTERFACE_KEYWORD_F - 93 | 1 << GraphQLFederationParser.DIRECTIVE_KEYWORD_F - 93 | 1 << GraphQLFederationParser.EXTEND_KEYWORD_F - 93 | 1 << GraphQLFederationParser.UNION_KEYWORD_F - 93 | 1 << GraphQLFederationParser.IMPLEMENTS_KEYWORD_F - 93 | 1 << GraphQLFederationParser.QUERY_KEYWORD_F - 93 | 1 << GraphQLFederationParser.MUTATION_KEYWORD_F - 93 | 1 << GraphQLFederationParser.SUBSCRIPTION_KEYWORD_F - 93 | 1 << GraphQLFederationParser.SCHEMA_KEYWORD_F - 93 | 1 << GraphQLFederationParser.FRAGMENT_KEYWORD_F - 93 | 1 << GraphQLFederationParser.ON_KEYWORD_F - 93 | 1 << GraphQLFederationParser.REPEATABLE_KEYWORD_F - 93)) !== 0)) {
          this._errHandler.recoverInline(this);
        } else {
          this._errHandler.reportMatch(this);

          this.consume();
        }
      } catch (re) {
        if (re instanceof _antlr["default"].error.RecognitionException) {
          localctx.exception = re;

          this._errHandler.reportError(this, re);

          this._errHandler.recover(this, re);
        } else {
          throw re;
        }
      } finally {
        this.exitRule();
      }

      return localctx;
    }
  }]);

  return GraphQLFederationParser;
}(_antlr["default"].Parser);

exports["default"] = GraphQLFederationParser;

_defineProperty(GraphQLFederationParser, "grammarFileName", "GraphQLFederationParser.g4");

_defineProperty(GraphQLFederationParser, "literalNames", [null, "'@external'", "'@inaccessible'", "'@requires'", "'@provides'", "'@key'", "'@shareable'", "'@override'", "'@link'", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "'INPUT'", "'TYPE'", "'ENUM'", "'SCALAR'", "'INTERFACE'", "'DIRECTIVE'", "'EXTEND'", "'UNION'", "'IMPLEMENTS'", "'QUERY'", "'MUTATION'", "'SUBSCRIPTION'", "'SCHEMA'", "'FRAGMENT'", "'FIELD'", "'FRAGMENT_DEFINITION'", "'FRAGMENT_SPREAD'", "'INLINE_FRAGMENT'", "'VARIABLE_DEFINITION'", "'OBJECT'", "'FIELD_DEFINITION'", "'ARGUMENT_DEFINITION'", "'ENUM_VALUE'", "'INPUT_OBJECT'", "'INPUT_FIELD_DEFINITION'", null, null, "'['", "']'", null, null, "'@'", "'&'", "'='", null, "'...'", "'!'", "'|'", "'$'", null, null, null, "'null'", null, null, null, null, null, null, null, null, null, "'\uEFBBBF'", "'\uFEFF'", "'\0FEFF'", "'fields'", "'from'", "'resolvable'"]);

_defineProperty(GraphQLFederationParser, "symbolicNames", [null, "EXTERNAL", "INACCESSIBLE", "REQUIRES", "PROVIDES", "KEY", "SHAREABLE", "OVERRIDE", "LINK", "INPUT_KEYWORD", "TYPE_KEYWORD", "ENUM_KEYWORD", "SCALAR_KEYWORD", "INTERFACE_KEYWORD", "DIRECTIVE_KEYWORD", "EXTEND_KEYWORD", "UNION_KEYWORD", "IMPLEMENTS_KEYWORD", "QUERY_KEYWORD", "MUTATION_KEYWORD", "SUBSCRIPTION_KEYWORD", "SCHEMA_KEYWORD", "FRAGMENT_KEYWORD", "ON_KEYWORD", "REPEATABLE_KEYWORD", "INPUT_LOCATION", "TYPE_LOCATION", "ENUM_LOCATION", "SCALAR_LOCATION", "INTERFACE_LOCATION", "DIRECTIVE_LOCATION", "EXTEND_LOCATION", "UNION_LOCATION", "IMPLEMENTS_LOCATION", "QUERY_LOCATION", "MUTATION_LOCATION", "SUBSCRIPTION_LOCATION", "SCHEMA_LOCATION", "FRAGMENT_LOCATION", "FIELD_LOCATION", "FRAGMENT_DEFINITION_LOCATION", "FRAGMENT_SPREAD_LOCATION", "INLINE_FRAGMENT_LOCATION", "VARIABLE_DEFINITION_LOCATION", "OBJECT_LOCATION", "FIELD_DEFINITION_LOCATION", "ARGUMENT_DEFINITION_LOCATION", "ENUM_VALUE_LOCATION", "INPUT_OBJECT_LOCATION", "INPUT_FIELD_DEFINITION_LOCATION", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", "LPAREN", "RPAREN", "AT", "AMP", "EQ", "COLON", "ELLIPSIS", "EXCL", "VSLASH", "DOLLAR", "DQUOTE", "TRUE", "FALSE", "NULL", "NAME", "STRING", "BLOCK_STRING", "FLOAT", "INT", "WS", "COMMA", "LineComment", "UNICODE_BOM", "UTF8_BOM", "UTF16_BOM", "UTF32_BOM", "FIELDS_KEYWORD", "FROM_KEYWORD", "RESOLVABLE_KEYWORD", "TRUE_F", "FALSE_F", "WS_F", "NAME_F", "DQUOTE_F", "COLON_F", "LBRACE_F", "RBRACE_F", "LPAREN_F", "RPAREN_F", "INPUT_KEYWORD_F", "TYPE_KEYWORD_F", "ENUM_KEYWORD_F", "SCALAR_KEYWORD_F", "INTERFACE_KEYWORD_F", "DIRECTIVE_KEYWORD_F", "EXTEND_KEYWORD_F", "UNION_KEYWORD_F", "IMPLEMENTS_KEYWORD_F", "QUERY_KEYWORD_F", "MUTATION_KEYWORD_F", "SUBSCRIPTION_KEYWORD_F", "SCHEMA_KEYWORD_F", "FRAGMENT_KEYWORD_F", "ON_KEYWORD_F", "REPEATABLE_KEYWORD_F", "COMMA_F", "STRING_LINK", "WS_LINK"]);

_defineProperty(GraphQLFederationParser, "ruleNames", ["document", "definition", "executableDefinition", "operationDefinition", "operationType", "selectionSet", "selection", "field", "arguments", "argument", "alias", "fragmentSpread", "fragmentDefinition", "fragmentName", "typeCondition", "inlineFragment", "value", "intValue", "floatValue", "booleanValue", "stringValue", "nullValue", "enumValue", "listValue", "objectValue", "objectField", "variable", "variableDefinitions", "variableDefinition", "defaultValue", "type_", "namedType", "listType", "directives", "directive", "typeSystemDefinition", "typeSystemExtension", "schemaDefinition", "rootOperationTypeDefinition", "schemaExtension", "operationTypeDefinition", "description", "typeDefinition", "typeExtension", "scalarTypeDefinition", "scalarTypeExtension", "objectTypeDefinition", "implementsInterfaces", "fieldsDefinition", "fieldDefinition", "argumentsDefinition", "inputValueDefinition", "objectTypeExtension", "interfaceTypeDefinition", "interfaceTypeExtension", "unionTypeDefinition", "unionMemberTypes", "unionTypeExtension", "enumTypeDefinition", "enumValuesDefinition", "enumValueDefinition", "enumTypeExtension", "inputObjectTypeDefinition", "inputFieldsDefinition", "inputObjectTypeExtension", "directiveDefinition", "directiveLocations", "directiveLocation", "executableDirectiveLocation", "typeSystemDirectiveLocation", "externalDirective", "inaccessibleDirective", "requiresDirective", "providesDirective", "keyDirective", "shareableDirective", "overrideDirective", "linkDirective", "fieldSet", "fieldSetComponent", "nestedFieldSet", "schemaDirective", "schemaFederationDirective", "scalarDirective", "scalarFederationDirective", "objectDirective", "objectFederationDirective", "interfaceDirective", "interfaceFederationDirective", "unionDirective", "unionFederationDirective", "enumDirective", "enumFederationDirective", "inputObjectDirective", "inputObjectFederationDirective", "inputValueDirective", "inputFieldFederationDirective", "fieldDirective", "fieldFederationDirective", "enumValueDirective", "enumValueFederationDirective", "name", "name_f", "booleanValue_f", "keyword", "keyword_f"]);

GraphQLFederationParser.EOF = _antlr["default"].Token.EOF;
GraphQLFederationParser.EXTERNAL = 1;
GraphQLFederationParser.INACCESSIBLE = 2;
GraphQLFederationParser.REQUIRES = 3;
GraphQLFederationParser.PROVIDES = 4;
GraphQLFederationParser.KEY = 5;
GraphQLFederationParser.SHAREABLE = 6;
GraphQLFederationParser.OVERRIDE = 7;
GraphQLFederationParser.LINK = 8;
GraphQLFederationParser.INPUT_KEYWORD = 9;
GraphQLFederationParser.TYPE_KEYWORD = 10;
GraphQLFederationParser.ENUM_KEYWORD = 11;
GraphQLFederationParser.SCALAR_KEYWORD = 12;
GraphQLFederationParser.INTERFACE_KEYWORD = 13;
GraphQLFederationParser.DIRECTIVE_KEYWORD = 14;
GraphQLFederationParser.EXTEND_KEYWORD = 15;
GraphQLFederationParser.UNION_KEYWORD = 16;
GraphQLFederationParser.IMPLEMENTS_KEYWORD = 17;
GraphQLFederationParser.QUERY_KEYWORD = 18;
GraphQLFederationParser.MUTATION_KEYWORD = 19;
GraphQLFederationParser.SUBSCRIPTION_KEYWORD = 20;
GraphQLFederationParser.SCHEMA_KEYWORD = 21;
GraphQLFederationParser.FRAGMENT_KEYWORD = 22;
GraphQLFederationParser.ON_KEYWORD = 23;
GraphQLFederationParser.REPEATABLE_KEYWORD = 24;
GraphQLFederationParser.INPUT_LOCATION = 25;
GraphQLFederationParser.TYPE_LOCATION = 26;
GraphQLFederationParser.ENUM_LOCATION = 27;
GraphQLFederationParser.SCALAR_LOCATION = 28;
GraphQLFederationParser.INTERFACE_LOCATION = 29;
GraphQLFederationParser.DIRECTIVE_LOCATION = 30;
GraphQLFederationParser.EXTEND_LOCATION = 31;
GraphQLFederationParser.UNION_LOCATION = 32;
GraphQLFederationParser.IMPLEMENTS_LOCATION = 33;
GraphQLFederationParser.QUERY_LOCATION = 34;
GraphQLFederationParser.MUTATION_LOCATION = 35;
GraphQLFederationParser.SUBSCRIPTION_LOCATION = 36;
GraphQLFederationParser.SCHEMA_LOCATION = 37;
GraphQLFederationParser.FRAGMENT_LOCATION = 38;
GraphQLFederationParser.FIELD_LOCATION = 39;
GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION = 40;
GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION = 41;
GraphQLFederationParser.INLINE_FRAGMENT_LOCATION = 42;
GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION = 43;
GraphQLFederationParser.OBJECT_LOCATION = 44;
GraphQLFederationParser.FIELD_DEFINITION_LOCATION = 45;
GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION = 46;
GraphQLFederationParser.ENUM_VALUE_LOCATION = 47;
GraphQLFederationParser.INPUT_OBJECT_LOCATION = 48;
GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION = 49;
GraphQLFederationParser.LBRACE = 50;
GraphQLFederationParser.RBRACE = 51;
GraphQLFederationParser.LBRACKET = 52;
GraphQLFederationParser.RBRACKET = 53;
GraphQLFederationParser.LPAREN = 54;
GraphQLFederationParser.RPAREN = 55;
GraphQLFederationParser.AT = 56;
GraphQLFederationParser.AMP = 57;
GraphQLFederationParser.EQ = 58;
GraphQLFederationParser.COLON = 59;
GraphQLFederationParser.ELLIPSIS = 60;
GraphQLFederationParser.EXCL = 61;
GraphQLFederationParser.VSLASH = 62;
GraphQLFederationParser.DOLLAR = 63;
GraphQLFederationParser.DQUOTE = 64;
GraphQLFederationParser.TRUE = 65;
GraphQLFederationParser.FALSE = 66;
GraphQLFederationParser.NULL = 67;
GraphQLFederationParser.NAME = 68;
GraphQLFederationParser.STRING = 69;
GraphQLFederationParser.BLOCK_STRING = 70;
GraphQLFederationParser.FLOAT = 71;
GraphQLFederationParser.INT = 72;
GraphQLFederationParser.WS = 73;
GraphQLFederationParser.COMMA = 74;
GraphQLFederationParser.LineComment = 75;
GraphQLFederationParser.UNICODE_BOM = 76;
GraphQLFederationParser.UTF8_BOM = 77;
GraphQLFederationParser.UTF16_BOM = 78;
GraphQLFederationParser.UTF32_BOM = 79;
GraphQLFederationParser.FIELDS_KEYWORD = 80;
GraphQLFederationParser.FROM_KEYWORD = 81;
GraphQLFederationParser.RESOLVABLE_KEYWORD = 82;
GraphQLFederationParser.TRUE_F = 83;
GraphQLFederationParser.FALSE_F = 84;
GraphQLFederationParser.WS_F = 85;
GraphQLFederationParser.NAME_F = 86;
GraphQLFederationParser.DQUOTE_F = 87;
GraphQLFederationParser.COLON_F = 88;
GraphQLFederationParser.LBRACE_F = 89;
GraphQLFederationParser.RBRACE_F = 90;
GraphQLFederationParser.LPAREN_F = 91;
GraphQLFederationParser.RPAREN_F = 92;
GraphQLFederationParser.INPUT_KEYWORD_F = 93;
GraphQLFederationParser.TYPE_KEYWORD_F = 94;
GraphQLFederationParser.ENUM_KEYWORD_F = 95;
GraphQLFederationParser.SCALAR_KEYWORD_F = 96;
GraphQLFederationParser.INTERFACE_KEYWORD_F = 97;
GraphQLFederationParser.DIRECTIVE_KEYWORD_F = 98;
GraphQLFederationParser.EXTEND_KEYWORD_F = 99;
GraphQLFederationParser.UNION_KEYWORD_F = 100;
GraphQLFederationParser.IMPLEMENTS_KEYWORD_F = 101;
GraphQLFederationParser.QUERY_KEYWORD_F = 102;
GraphQLFederationParser.MUTATION_KEYWORD_F = 103;
GraphQLFederationParser.SUBSCRIPTION_KEYWORD_F = 104;
GraphQLFederationParser.SCHEMA_KEYWORD_F = 105;
GraphQLFederationParser.FRAGMENT_KEYWORD_F = 106;
GraphQLFederationParser.ON_KEYWORD_F = 107;
GraphQLFederationParser.REPEATABLE_KEYWORD_F = 108;
GraphQLFederationParser.COMMA_F = 109;
GraphQLFederationParser.STRING_LINK = 110;
GraphQLFederationParser.WS_LINK = 111;
GraphQLFederationParser.RULE_document = 0;
GraphQLFederationParser.RULE_definition = 1;
GraphQLFederationParser.RULE_executableDefinition = 2;
GraphQLFederationParser.RULE_operationDefinition = 3;
GraphQLFederationParser.RULE_operationType = 4;
GraphQLFederationParser.RULE_selectionSet = 5;
GraphQLFederationParser.RULE_selection = 6;
GraphQLFederationParser.RULE_field = 7;
GraphQLFederationParser.RULE_arguments = 8;
GraphQLFederationParser.RULE_argument = 9;
GraphQLFederationParser.RULE_alias = 10;
GraphQLFederationParser.RULE_fragmentSpread = 11;
GraphQLFederationParser.RULE_fragmentDefinition = 12;
GraphQLFederationParser.RULE_fragmentName = 13;
GraphQLFederationParser.RULE_typeCondition = 14;
GraphQLFederationParser.RULE_inlineFragment = 15;
GraphQLFederationParser.RULE_value = 16;
GraphQLFederationParser.RULE_intValue = 17;
GraphQLFederationParser.RULE_floatValue = 18;
GraphQLFederationParser.RULE_booleanValue = 19;
GraphQLFederationParser.RULE_stringValue = 20;
GraphQLFederationParser.RULE_nullValue = 21;
GraphQLFederationParser.RULE_enumValue = 22;
GraphQLFederationParser.RULE_listValue = 23;
GraphQLFederationParser.RULE_objectValue = 24;
GraphQLFederationParser.RULE_objectField = 25;
GraphQLFederationParser.RULE_variable = 26;
GraphQLFederationParser.RULE_variableDefinitions = 27;
GraphQLFederationParser.RULE_variableDefinition = 28;
GraphQLFederationParser.RULE_defaultValue = 29;
GraphQLFederationParser.RULE_type_ = 30;
GraphQLFederationParser.RULE_namedType = 31;
GraphQLFederationParser.RULE_listType = 32;
GraphQLFederationParser.RULE_directives = 33;
GraphQLFederationParser.RULE_directive = 34;
GraphQLFederationParser.RULE_typeSystemDefinition = 35;
GraphQLFederationParser.RULE_typeSystemExtension = 36;
GraphQLFederationParser.RULE_schemaDefinition = 37;
GraphQLFederationParser.RULE_rootOperationTypeDefinition = 38;
GraphQLFederationParser.RULE_schemaExtension = 39;
GraphQLFederationParser.RULE_operationTypeDefinition = 40;
GraphQLFederationParser.RULE_description = 41;
GraphQLFederationParser.RULE_typeDefinition = 42;
GraphQLFederationParser.RULE_typeExtension = 43;
GraphQLFederationParser.RULE_scalarTypeDefinition = 44;
GraphQLFederationParser.RULE_scalarTypeExtension = 45;
GraphQLFederationParser.RULE_objectTypeDefinition = 46;
GraphQLFederationParser.RULE_implementsInterfaces = 47;
GraphQLFederationParser.RULE_fieldsDefinition = 48;
GraphQLFederationParser.RULE_fieldDefinition = 49;
GraphQLFederationParser.RULE_argumentsDefinition = 50;
GraphQLFederationParser.RULE_inputValueDefinition = 51;
GraphQLFederationParser.RULE_objectTypeExtension = 52;
GraphQLFederationParser.RULE_interfaceTypeDefinition = 53;
GraphQLFederationParser.RULE_interfaceTypeExtension = 54;
GraphQLFederationParser.RULE_unionTypeDefinition = 55;
GraphQLFederationParser.RULE_unionMemberTypes = 56;
GraphQLFederationParser.RULE_unionTypeExtension = 57;
GraphQLFederationParser.RULE_enumTypeDefinition = 58;
GraphQLFederationParser.RULE_enumValuesDefinition = 59;
GraphQLFederationParser.RULE_enumValueDefinition = 60;
GraphQLFederationParser.RULE_enumTypeExtension = 61;
GraphQLFederationParser.RULE_inputObjectTypeDefinition = 62;
GraphQLFederationParser.RULE_inputFieldsDefinition = 63;
GraphQLFederationParser.RULE_inputObjectTypeExtension = 64;
GraphQLFederationParser.RULE_directiveDefinition = 65;
GraphQLFederationParser.RULE_directiveLocations = 66;
GraphQLFederationParser.RULE_directiveLocation = 67;
GraphQLFederationParser.RULE_executableDirectiveLocation = 68;
GraphQLFederationParser.RULE_typeSystemDirectiveLocation = 69;
GraphQLFederationParser.RULE_externalDirective = 70;
GraphQLFederationParser.RULE_inaccessibleDirective = 71;
GraphQLFederationParser.RULE_requiresDirective = 72;
GraphQLFederationParser.RULE_providesDirective = 73;
GraphQLFederationParser.RULE_keyDirective = 74;
GraphQLFederationParser.RULE_shareableDirective = 75;
GraphQLFederationParser.RULE_overrideDirective = 76;
GraphQLFederationParser.RULE_linkDirective = 77;
GraphQLFederationParser.RULE_fieldSet = 78;
GraphQLFederationParser.RULE_fieldSetComponent = 79;
GraphQLFederationParser.RULE_nestedFieldSet = 80;
GraphQLFederationParser.RULE_schemaDirective = 81;
GraphQLFederationParser.RULE_schemaFederationDirective = 82;
GraphQLFederationParser.RULE_scalarDirective = 83;
GraphQLFederationParser.RULE_scalarFederationDirective = 84;
GraphQLFederationParser.RULE_objectDirective = 85;
GraphQLFederationParser.RULE_objectFederationDirective = 86;
GraphQLFederationParser.RULE_interfaceDirective = 87;
GraphQLFederationParser.RULE_interfaceFederationDirective = 88;
GraphQLFederationParser.RULE_unionDirective = 89;
GraphQLFederationParser.RULE_unionFederationDirective = 90;
GraphQLFederationParser.RULE_enumDirective = 91;
GraphQLFederationParser.RULE_enumFederationDirective = 92;
GraphQLFederationParser.RULE_inputObjectDirective = 93;
GraphQLFederationParser.RULE_inputObjectFederationDirective = 94;
GraphQLFederationParser.RULE_inputValueDirective = 95;
GraphQLFederationParser.RULE_inputFieldFederationDirective = 96;
GraphQLFederationParser.RULE_fieldDirective = 97;
GraphQLFederationParser.RULE_fieldFederationDirective = 98;
GraphQLFederationParser.RULE_enumValueDirective = 99;
GraphQLFederationParser.RULE_enumValueFederationDirective = 100;
GraphQLFederationParser.RULE_name = 101;
GraphQLFederationParser.RULE_name_f = 102;
GraphQLFederationParser.RULE_booleanValue_f = 103;
GraphQLFederationParser.RULE_keyword = 104;
GraphQLFederationParser.RULE_keyword_f = 105;

var DocumentContext = /*#__PURE__*/function (_antlr4$ParserRuleCon) {
  _inherits(DocumentContext, _antlr4$ParserRuleCon);

  var _super2 = _createSuper(DocumentContext);

  function DocumentContext(parser, parent, invokingState) {
    var _this2;

    _classCallCheck(this, DocumentContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this2 = _super2.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this2), "definition", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(DefinitionContext);
      } else {
        return this.getTypedRuleContext(DefinitionContext, i);
      }
    });

    _this2.parser = parser;
    _this2.ruleIndex = GraphQLFederationParser.RULE_document;
    return _this2;
  }

  _createClass(DocumentContext, [{
    key: "EOF",
    value: function EOF() {
      return this.getToken(GraphQLFederationParser.EOF, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterDocument(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitDocument(this);
      }
    }
  }]);

  return DocumentContext;
}(_antlr["default"].ParserRuleContext);

var DefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon2) {
  _inherits(DefinitionContext, _antlr4$ParserRuleCon2);

  var _super3 = _createSuper(DefinitionContext);

  function DefinitionContext(parser, parent, invokingState) {
    var _this3;

    _classCallCheck(this, DefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this3 = _super3.call(this, parent, invokingState);
    _this3.parser = parser;
    _this3.ruleIndex = GraphQLFederationParser.RULE_definition;
    return _this3;
  }

  _createClass(DefinitionContext, [{
    key: "executableDefinition",
    value: function executableDefinition() {
      return this.getTypedRuleContext(ExecutableDefinitionContext, 0);
    }
  }, {
    key: "typeSystemDefinition",
    value: function typeSystemDefinition() {
      return this.getTypedRuleContext(TypeSystemDefinitionContext, 0);
    }
  }, {
    key: "typeSystemExtension",
    value: function typeSystemExtension() {
      return this.getTypedRuleContext(TypeSystemExtensionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitDefinition(this);
      }
    }
  }]);

  return DefinitionContext;
}(_antlr["default"].ParserRuleContext);

var ExecutableDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon3) {
  _inherits(ExecutableDefinitionContext, _antlr4$ParserRuleCon3);

  var _super4 = _createSuper(ExecutableDefinitionContext);

  function ExecutableDefinitionContext(parser, parent, invokingState) {
    var _this4;

    _classCallCheck(this, ExecutableDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this4 = _super4.call(this, parent, invokingState);
    _this4.parser = parser;
    _this4.ruleIndex = GraphQLFederationParser.RULE_executableDefinition;
    return _this4;
  }

  _createClass(ExecutableDefinitionContext, [{
    key: "operationDefinition",
    value: function operationDefinition() {
      return this.getTypedRuleContext(OperationDefinitionContext, 0);
    }
  }, {
    key: "fragmentDefinition",
    value: function fragmentDefinition() {
      return this.getTypedRuleContext(FragmentDefinitionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterExecutableDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitExecutableDefinition(this);
      }
    }
  }]);

  return ExecutableDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var OperationDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon4) {
  _inherits(OperationDefinitionContext, _antlr4$ParserRuleCon4);

  var _super5 = _createSuper(OperationDefinitionContext);

  function OperationDefinitionContext(parser, parent, invokingState) {
    var _this5;

    _classCallCheck(this, OperationDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this5 = _super5.call(this, parent, invokingState);
    _this5.parser = parser;
    _this5.ruleIndex = GraphQLFederationParser.RULE_operationDefinition;
    return _this5;
  }

  _createClass(OperationDefinitionContext, [{
    key: "operationType",
    value: function operationType() {
      return this.getTypedRuleContext(OperationTypeContext, 0);
    }
  }, {
    key: "selectionSet",
    value: function selectionSet() {
      return this.getTypedRuleContext(SelectionSetContext, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "variableDefinitions",
    value: function variableDefinitions() {
      return this.getTypedRuleContext(VariableDefinitionsContext, 0);
    }
  }, {
    key: "directives",
    value: function directives() {
      return this.getTypedRuleContext(DirectivesContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterOperationDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitOperationDefinition(this);
      }
    }
  }]);

  return OperationDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var OperationTypeContext = /*#__PURE__*/function (_antlr4$ParserRuleCon5) {
  _inherits(OperationTypeContext, _antlr4$ParserRuleCon5);

  var _super6 = _createSuper(OperationTypeContext);

  function OperationTypeContext(parser, parent, invokingState) {
    var _this6;

    _classCallCheck(this, OperationTypeContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this6 = _super6.call(this, parent, invokingState);
    _this6.parser = parser;
    _this6.ruleIndex = GraphQLFederationParser.RULE_operationType;
    return _this6;
  }

  _createClass(OperationTypeContext, [{
    key: "QUERY_KEYWORD",
    value: function QUERY_KEYWORD() {
      return this.getToken(GraphQLFederationParser.QUERY_KEYWORD, 0);
    }
  }, {
    key: "MUTATION_KEYWORD",
    value: function MUTATION_KEYWORD() {
      return this.getToken(GraphQLFederationParser.MUTATION_KEYWORD, 0);
    }
  }, {
    key: "SUBSCRIPTION_KEYWORD",
    value: function SUBSCRIPTION_KEYWORD() {
      return this.getToken(GraphQLFederationParser.SUBSCRIPTION_KEYWORD, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterOperationType(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitOperationType(this);
      }
    }
  }]);

  return OperationTypeContext;
}(_antlr["default"].ParserRuleContext);

var SelectionSetContext = /*#__PURE__*/function (_antlr4$ParserRuleCon6) {
  _inherits(SelectionSetContext, _antlr4$ParserRuleCon6);

  var _super7 = _createSuper(SelectionSetContext);

  function SelectionSetContext(parser, parent, invokingState) {
    var _this7;

    _classCallCheck(this, SelectionSetContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this7 = _super7.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this7), "selection", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(SelectionContext);
      } else {
        return this.getTypedRuleContext(SelectionContext, i);
      }
    });

    _this7.parser = parser;
    _this7.ruleIndex = GraphQLFederationParser.RULE_selectionSet;
    return _this7;
  }

  _createClass(SelectionSetContext, [{
    key: "LBRACE",
    value: function LBRACE() {
      return this.getToken(GraphQLFederationParser.LBRACE, 0);
    }
  }, {
    key: "RBRACE",
    value: function RBRACE() {
      return this.getToken(GraphQLFederationParser.RBRACE, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterSelectionSet(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitSelectionSet(this);
      }
    }
  }]);

  return SelectionSetContext;
}(_antlr["default"].ParserRuleContext);

var SelectionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon7) {
  _inherits(SelectionContext, _antlr4$ParserRuleCon7);

  var _super8 = _createSuper(SelectionContext);

  function SelectionContext(parser, parent, invokingState) {
    var _this8;

    _classCallCheck(this, SelectionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this8 = _super8.call(this, parent, invokingState);
    _this8.parser = parser;
    _this8.ruleIndex = GraphQLFederationParser.RULE_selection;
    return _this8;
  }

  _createClass(SelectionContext, [{
    key: "field",
    value: function field() {
      return this.getTypedRuleContext(FieldContext, 0);
    }
  }, {
    key: "fragmentSpread",
    value: function fragmentSpread() {
      return this.getTypedRuleContext(FragmentSpreadContext, 0);
    }
  }, {
    key: "inlineFragment",
    value: function inlineFragment() {
      return this.getTypedRuleContext(InlineFragmentContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterSelection(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitSelection(this);
      }
    }
  }]);

  return SelectionContext;
}(_antlr["default"].ParserRuleContext);

var FieldContext = /*#__PURE__*/function (_antlr4$ParserRuleCon8) {
  _inherits(FieldContext, _antlr4$ParserRuleCon8);

  var _super9 = _createSuper(FieldContext);

  function FieldContext(parser, parent, invokingState) {
    var _this9;

    _classCallCheck(this, FieldContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this9 = _super9.call(this, parent, invokingState);
    _this9.parser = parser;
    _this9.ruleIndex = GraphQLFederationParser.RULE_field;
    return _this9;
  }

  _createClass(FieldContext, [{
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "alias",
    value: function alias() {
      return this.getTypedRuleContext(AliasContext, 0);
    }
  }, {
    key: "arguments",
    value: function _arguments() {
      return this.getTypedRuleContext(ArgumentsContext, 0);
    }
  }, {
    key: "directives",
    value: function directives() {
      return this.getTypedRuleContext(DirectivesContext, 0);
    }
  }, {
    key: "selectionSet",
    value: function selectionSet() {
      return this.getTypedRuleContext(SelectionSetContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterField(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitField(this);
      }
    }
  }]);

  return FieldContext;
}(_antlr["default"].ParserRuleContext);

var ArgumentsContext = /*#__PURE__*/function (_antlr4$ParserRuleCon9) {
  _inherits(ArgumentsContext, _antlr4$ParserRuleCon9);

  var _super10 = _createSuper(ArgumentsContext);

  function ArgumentsContext(parser, parent, invokingState) {
    var _this10;

    _classCallCheck(this, ArgumentsContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this10 = _super10.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this10), "argument", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(ArgumentContext);
      } else {
        return this.getTypedRuleContext(ArgumentContext, i);
      }
    });

    _this10.parser = parser;
    _this10.ruleIndex = GraphQLFederationParser.RULE_arguments;
    return _this10;
  }

  _createClass(ArgumentsContext, [{
    key: "LPAREN",
    value: function LPAREN() {
      return this.getToken(GraphQLFederationParser.LPAREN, 0);
    }
  }, {
    key: "RPAREN",
    value: function RPAREN() {
      return this.getToken(GraphQLFederationParser.RPAREN, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterArguments(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitArguments(this);
      }
    }
  }]);

  return ArgumentsContext;
}(_antlr["default"].ParserRuleContext);

var ArgumentContext = /*#__PURE__*/function (_antlr4$ParserRuleCon10) {
  _inherits(ArgumentContext, _antlr4$ParserRuleCon10);

  var _super11 = _createSuper(ArgumentContext);

  function ArgumentContext(parser, parent, invokingState) {
    var _this11;

    _classCallCheck(this, ArgumentContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this11 = _super11.call(this, parent, invokingState);
    _this11.parser = parser;
    _this11.ruleIndex = GraphQLFederationParser.RULE_argument;
    return _this11;
  }

  _createClass(ArgumentContext, [{
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "COLON",
    value: function COLON() {
      return this.getToken(GraphQLFederationParser.COLON, 0);
    }
  }, {
    key: "value",
    value: function value() {
      return this.getTypedRuleContext(ValueContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterArgument(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitArgument(this);
      }
    }
  }]);

  return ArgumentContext;
}(_antlr["default"].ParserRuleContext);

var AliasContext = /*#__PURE__*/function (_antlr4$ParserRuleCon11) {
  _inherits(AliasContext, _antlr4$ParserRuleCon11);

  var _super12 = _createSuper(AliasContext);

  function AliasContext(parser, parent, invokingState) {
    var _this12;

    _classCallCheck(this, AliasContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this12 = _super12.call(this, parent, invokingState);
    _this12.parser = parser;
    _this12.ruleIndex = GraphQLFederationParser.RULE_alias;
    return _this12;
  }

  _createClass(AliasContext, [{
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "COLON",
    value: function COLON() {
      return this.getToken(GraphQLFederationParser.COLON, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterAlias(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitAlias(this);
      }
    }
  }]);

  return AliasContext;
}(_antlr["default"].ParserRuleContext);

var FragmentSpreadContext = /*#__PURE__*/function (_antlr4$ParserRuleCon12) {
  _inherits(FragmentSpreadContext, _antlr4$ParserRuleCon12);

  var _super13 = _createSuper(FragmentSpreadContext);

  function FragmentSpreadContext(parser, parent, invokingState) {
    var _this13;

    _classCallCheck(this, FragmentSpreadContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this13 = _super13.call(this, parent, invokingState);
    _this13.parser = parser;
    _this13.ruleIndex = GraphQLFederationParser.RULE_fragmentSpread;
    return _this13;
  }

  _createClass(FragmentSpreadContext, [{
    key: "ELLIPSIS",
    value: function ELLIPSIS() {
      return this.getToken(GraphQLFederationParser.ELLIPSIS, 0);
    }
  }, {
    key: "fragmentName",
    value: function fragmentName() {
      return this.getTypedRuleContext(FragmentNameContext, 0);
    }
  }, {
    key: "directives",
    value: function directives() {
      return this.getTypedRuleContext(DirectivesContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterFragmentSpread(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitFragmentSpread(this);
      }
    }
  }]);

  return FragmentSpreadContext;
}(_antlr["default"].ParserRuleContext);

var FragmentDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon13) {
  _inherits(FragmentDefinitionContext, _antlr4$ParserRuleCon13);

  var _super14 = _createSuper(FragmentDefinitionContext);

  function FragmentDefinitionContext(parser, parent, invokingState) {
    var _this14;

    _classCallCheck(this, FragmentDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this14 = _super14.call(this, parent, invokingState);
    _this14.parser = parser;
    _this14.ruleIndex = GraphQLFederationParser.RULE_fragmentDefinition;
    return _this14;
  }

  _createClass(FragmentDefinitionContext, [{
    key: "FRAGMENT_KEYWORD",
    value: function FRAGMENT_KEYWORD() {
      return this.getToken(GraphQLFederationParser.FRAGMENT_KEYWORD, 0);
    }
  }, {
    key: "fragmentName",
    value: function fragmentName() {
      return this.getTypedRuleContext(FragmentNameContext, 0);
    }
  }, {
    key: "typeCondition",
    value: function typeCondition() {
      return this.getTypedRuleContext(TypeConditionContext, 0);
    }
  }, {
    key: "selectionSet",
    value: function selectionSet() {
      return this.getTypedRuleContext(SelectionSetContext, 0);
    }
  }, {
    key: "directives",
    value: function directives() {
      return this.getTypedRuleContext(DirectivesContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterFragmentDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitFragmentDefinition(this);
      }
    }
  }]);

  return FragmentDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var FragmentNameContext = /*#__PURE__*/function (_antlr4$ParserRuleCon14) {
  _inherits(FragmentNameContext, _antlr4$ParserRuleCon14);

  var _super15 = _createSuper(FragmentNameContext);

  function FragmentNameContext(parser, parent, invokingState) {
    var _this15;

    _classCallCheck(this, FragmentNameContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this15 = _super15.call(this, parent, invokingState);
    _this15.parser = parser;
    _this15.ruleIndex = GraphQLFederationParser.RULE_fragmentName;
    return _this15;
  }

  _createClass(FragmentNameContext, [{
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterFragmentName(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitFragmentName(this);
      }
    }
  }]);

  return FragmentNameContext;
}(_antlr["default"].ParserRuleContext);

var TypeConditionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon15) {
  _inherits(TypeConditionContext, _antlr4$ParserRuleCon15);

  var _super16 = _createSuper(TypeConditionContext);

  function TypeConditionContext(parser, parent, invokingState) {
    var _this16;

    _classCallCheck(this, TypeConditionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this16 = _super16.call(this, parent, invokingState);
    _this16.parser = parser;
    _this16.ruleIndex = GraphQLFederationParser.RULE_typeCondition;
    return _this16;
  }

  _createClass(TypeConditionContext, [{
    key: "ON_KEYWORD",
    value: function ON_KEYWORD() {
      return this.getToken(GraphQLFederationParser.ON_KEYWORD, 0);
    }
  }, {
    key: "namedType",
    value: function namedType() {
      return this.getTypedRuleContext(NamedTypeContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterTypeCondition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitTypeCondition(this);
      }
    }
  }]);

  return TypeConditionContext;
}(_antlr["default"].ParserRuleContext);

var InlineFragmentContext = /*#__PURE__*/function (_antlr4$ParserRuleCon16) {
  _inherits(InlineFragmentContext, _antlr4$ParserRuleCon16);

  var _super17 = _createSuper(InlineFragmentContext);

  function InlineFragmentContext(parser, parent, invokingState) {
    var _this17;

    _classCallCheck(this, InlineFragmentContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this17 = _super17.call(this, parent, invokingState);
    _this17.parser = parser;
    _this17.ruleIndex = GraphQLFederationParser.RULE_inlineFragment;
    return _this17;
  }

  _createClass(InlineFragmentContext, [{
    key: "ELLIPSIS",
    value: function ELLIPSIS() {
      return this.getToken(GraphQLFederationParser.ELLIPSIS, 0);
    }
  }, {
    key: "selectionSet",
    value: function selectionSet() {
      return this.getTypedRuleContext(SelectionSetContext, 0);
    }
  }, {
    key: "typeCondition",
    value: function typeCondition() {
      return this.getTypedRuleContext(TypeConditionContext, 0);
    }
  }, {
    key: "directives",
    value: function directives() {
      return this.getTypedRuleContext(DirectivesContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterInlineFragment(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitInlineFragment(this);
      }
    }
  }]);

  return InlineFragmentContext;
}(_antlr["default"].ParserRuleContext);

var ValueContext = /*#__PURE__*/function (_antlr4$ParserRuleCon17) {
  _inherits(ValueContext, _antlr4$ParserRuleCon17);

  var _super18 = _createSuper(ValueContext);

  function ValueContext(parser, parent, invokingState) {
    var _this18;

    _classCallCheck(this, ValueContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this18 = _super18.call(this, parent, invokingState);
    _this18.parser = parser;
    _this18.ruleIndex = GraphQLFederationParser.RULE_value;
    return _this18;
  }

  _createClass(ValueContext, [{
    key: "variable",
    value: function variable() {
      return this.getTypedRuleContext(VariableContext, 0);
    }
  }, {
    key: "intValue",
    value: function intValue() {
      return this.getTypedRuleContext(IntValueContext, 0);
    }
  }, {
    key: "floatValue",
    value: function floatValue() {
      return this.getTypedRuleContext(FloatValueContext, 0);
    }
  }, {
    key: "stringValue",
    value: function stringValue() {
      return this.getTypedRuleContext(StringValueContext, 0);
    }
  }, {
    key: "booleanValue",
    value: function booleanValue() {
      return this.getTypedRuleContext(BooleanValueContext, 0);
    }
  }, {
    key: "nullValue",
    value: function nullValue() {
      return this.getTypedRuleContext(NullValueContext, 0);
    }
  }, {
    key: "enumValue",
    value: function enumValue() {
      return this.getTypedRuleContext(EnumValueContext, 0);
    }
  }, {
    key: "listValue",
    value: function listValue() {
      return this.getTypedRuleContext(ListValueContext, 0);
    }
  }, {
    key: "objectValue",
    value: function objectValue() {
      return this.getTypedRuleContext(ObjectValueContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterValue(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitValue(this);
      }
    }
  }]);

  return ValueContext;
}(_antlr["default"].ParserRuleContext);

var IntValueContext = /*#__PURE__*/function (_antlr4$ParserRuleCon18) {
  _inherits(IntValueContext, _antlr4$ParserRuleCon18);

  var _super19 = _createSuper(IntValueContext);

  function IntValueContext(parser, parent, invokingState) {
    var _this19;

    _classCallCheck(this, IntValueContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this19 = _super19.call(this, parent, invokingState);
    _this19.parser = parser;
    _this19.ruleIndex = GraphQLFederationParser.RULE_intValue;
    return _this19;
  }

  _createClass(IntValueContext, [{
    key: "INT",
    value: function INT() {
      return this.getToken(GraphQLFederationParser.INT, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterIntValue(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitIntValue(this);
      }
    }
  }]);

  return IntValueContext;
}(_antlr["default"].ParserRuleContext);

var FloatValueContext = /*#__PURE__*/function (_antlr4$ParserRuleCon19) {
  _inherits(FloatValueContext, _antlr4$ParserRuleCon19);

  var _super20 = _createSuper(FloatValueContext);

  function FloatValueContext(parser, parent, invokingState) {
    var _this20;

    _classCallCheck(this, FloatValueContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this20 = _super20.call(this, parent, invokingState);
    _this20.parser = parser;
    _this20.ruleIndex = GraphQLFederationParser.RULE_floatValue;
    return _this20;
  }

  _createClass(FloatValueContext, [{
    key: "FLOAT",
    value: function FLOAT() {
      return this.getToken(GraphQLFederationParser.FLOAT, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterFloatValue(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitFloatValue(this);
      }
    }
  }]);

  return FloatValueContext;
}(_antlr["default"].ParserRuleContext);

var BooleanValueContext = /*#__PURE__*/function (_antlr4$ParserRuleCon20) {
  _inherits(BooleanValueContext, _antlr4$ParserRuleCon20);

  var _super21 = _createSuper(BooleanValueContext);

  function BooleanValueContext(parser, parent, invokingState) {
    var _this21;

    _classCallCheck(this, BooleanValueContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this21 = _super21.call(this, parent, invokingState);
    _this21.parser = parser;
    _this21.ruleIndex = GraphQLFederationParser.RULE_booleanValue;
    return _this21;
  }

  _createClass(BooleanValueContext, [{
    key: "TRUE",
    value: function TRUE() {
      return this.getToken(GraphQLFederationParser.TRUE, 0);
    }
  }, {
    key: "FALSE",
    value: function FALSE() {
      return this.getToken(GraphQLFederationParser.FALSE, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterBooleanValue(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitBooleanValue(this);
      }
    }
  }]);

  return BooleanValueContext;
}(_antlr["default"].ParserRuleContext);

var StringValueContext = /*#__PURE__*/function (_antlr4$ParserRuleCon21) {
  _inherits(StringValueContext, _antlr4$ParserRuleCon21);

  var _super22 = _createSuper(StringValueContext);

  function StringValueContext(parser, parent, invokingState) {
    var _this22;

    _classCallCheck(this, StringValueContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this22 = _super22.call(this, parent, invokingState);
    _this22.parser = parser;
    _this22.ruleIndex = GraphQLFederationParser.RULE_stringValue;
    return _this22;
  }

  _createClass(StringValueContext, [{
    key: "STRING",
    value: function STRING() {
      return this.getToken(GraphQLFederationParser.STRING, 0);
    }
  }, {
    key: "BLOCK_STRING",
    value: function BLOCK_STRING() {
      return this.getToken(GraphQLFederationParser.BLOCK_STRING, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterStringValue(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitStringValue(this);
      }
    }
  }]);

  return StringValueContext;
}(_antlr["default"].ParserRuleContext);

var NullValueContext = /*#__PURE__*/function (_antlr4$ParserRuleCon22) {
  _inherits(NullValueContext, _antlr4$ParserRuleCon22);

  var _super23 = _createSuper(NullValueContext);

  function NullValueContext(parser, parent, invokingState) {
    var _this23;

    _classCallCheck(this, NullValueContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this23 = _super23.call(this, parent, invokingState);
    _this23.parser = parser;
    _this23.ruleIndex = GraphQLFederationParser.RULE_nullValue;
    return _this23;
  }

  _createClass(NullValueContext, [{
    key: "NULL",
    value: function NULL() {
      return this.getToken(GraphQLFederationParser.NULL, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterNullValue(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitNullValue(this);
      }
    }
  }]);

  return NullValueContext;
}(_antlr["default"].ParserRuleContext);

var EnumValueContext = /*#__PURE__*/function (_antlr4$ParserRuleCon23) {
  _inherits(EnumValueContext, _antlr4$ParserRuleCon23);

  var _super24 = _createSuper(EnumValueContext);

  function EnumValueContext(parser, parent, invokingState) {
    var _this24;

    _classCallCheck(this, EnumValueContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this24 = _super24.call(this, parent, invokingState);
    _this24.parser = parser;
    _this24.ruleIndex = GraphQLFederationParser.RULE_enumValue;
    return _this24;
  }

  _createClass(EnumValueContext, [{
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterEnumValue(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitEnumValue(this);
      }
    }
  }]);

  return EnumValueContext;
}(_antlr["default"].ParserRuleContext);

var ListValueContext = /*#__PURE__*/function (_antlr4$ParserRuleCon24) {
  _inherits(ListValueContext, _antlr4$ParserRuleCon24);

  var _super25 = _createSuper(ListValueContext);

  function ListValueContext(parser, parent, invokingState) {
    var _this25;

    _classCallCheck(this, ListValueContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this25 = _super25.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this25), "value", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(ValueContext);
      } else {
        return this.getTypedRuleContext(ValueContext, i);
      }
    });

    _this25.parser = parser;
    _this25.ruleIndex = GraphQLFederationParser.RULE_listValue;
    return _this25;
  }

  _createClass(ListValueContext, [{
    key: "LBRACKET",
    value: function LBRACKET() {
      return this.getToken(GraphQLFederationParser.LBRACKET, 0);
    }
  }, {
    key: "RBRACKET",
    value: function RBRACKET() {
      return this.getToken(GraphQLFederationParser.RBRACKET, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterListValue(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitListValue(this);
      }
    }
  }]);

  return ListValueContext;
}(_antlr["default"].ParserRuleContext);

var ObjectValueContext = /*#__PURE__*/function (_antlr4$ParserRuleCon25) {
  _inherits(ObjectValueContext, _antlr4$ParserRuleCon25);

  var _super26 = _createSuper(ObjectValueContext);

  function ObjectValueContext(parser, parent, invokingState) {
    var _this26;

    _classCallCheck(this, ObjectValueContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this26 = _super26.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this26), "objectField", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(ObjectFieldContext);
      } else {
        return this.getTypedRuleContext(ObjectFieldContext, i);
      }
    });

    _this26.parser = parser;
    _this26.ruleIndex = GraphQLFederationParser.RULE_objectValue;
    return _this26;
  }

  _createClass(ObjectValueContext, [{
    key: "LBRACE",
    value: function LBRACE() {
      return this.getToken(GraphQLFederationParser.LBRACE, 0);
    }
  }, {
    key: "RBRACE",
    value: function RBRACE() {
      return this.getToken(GraphQLFederationParser.RBRACE, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterObjectValue(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitObjectValue(this);
      }
    }
  }]);

  return ObjectValueContext;
}(_antlr["default"].ParserRuleContext);

var ObjectFieldContext = /*#__PURE__*/function (_antlr4$ParserRuleCon26) {
  _inherits(ObjectFieldContext, _antlr4$ParserRuleCon26);

  var _super27 = _createSuper(ObjectFieldContext);

  function ObjectFieldContext(parser, parent, invokingState) {
    var _this27;

    _classCallCheck(this, ObjectFieldContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this27 = _super27.call(this, parent, invokingState);
    _this27.parser = parser;
    _this27.ruleIndex = GraphQLFederationParser.RULE_objectField;
    return _this27;
  }

  _createClass(ObjectFieldContext, [{
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "COLON",
    value: function COLON() {
      return this.getToken(GraphQLFederationParser.COLON, 0);
    }
  }, {
    key: "value",
    value: function value() {
      return this.getTypedRuleContext(ValueContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterObjectField(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitObjectField(this);
      }
    }
  }]);

  return ObjectFieldContext;
}(_antlr["default"].ParserRuleContext);

var VariableContext = /*#__PURE__*/function (_antlr4$ParserRuleCon27) {
  _inherits(VariableContext, _antlr4$ParserRuleCon27);

  var _super28 = _createSuper(VariableContext);

  function VariableContext(parser, parent, invokingState) {
    var _this28;

    _classCallCheck(this, VariableContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this28 = _super28.call(this, parent, invokingState);
    _this28.parser = parser;
    _this28.ruleIndex = GraphQLFederationParser.RULE_variable;
    return _this28;
  }

  _createClass(VariableContext, [{
    key: "DOLLAR",
    value: function DOLLAR() {
      return this.getToken(GraphQLFederationParser.DOLLAR, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterVariable(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitVariable(this);
      }
    }
  }]);

  return VariableContext;
}(_antlr["default"].ParserRuleContext);

var VariableDefinitionsContext = /*#__PURE__*/function (_antlr4$ParserRuleCon28) {
  _inherits(VariableDefinitionsContext, _antlr4$ParserRuleCon28);

  var _super29 = _createSuper(VariableDefinitionsContext);

  function VariableDefinitionsContext(parser, parent, invokingState) {
    var _this29;

    _classCallCheck(this, VariableDefinitionsContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this29 = _super29.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this29), "variableDefinition", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(VariableDefinitionContext);
      } else {
        return this.getTypedRuleContext(VariableDefinitionContext, i);
      }
    });

    _this29.parser = parser;
    _this29.ruleIndex = GraphQLFederationParser.RULE_variableDefinitions;
    return _this29;
  }

  _createClass(VariableDefinitionsContext, [{
    key: "LPAREN",
    value: function LPAREN() {
      return this.getToken(GraphQLFederationParser.LPAREN, 0);
    }
  }, {
    key: "RPAREN",
    value: function RPAREN() {
      return this.getToken(GraphQLFederationParser.RPAREN, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterVariableDefinitions(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitVariableDefinitions(this);
      }
    }
  }]);

  return VariableDefinitionsContext;
}(_antlr["default"].ParserRuleContext);

var VariableDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon29) {
  _inherits(VariableDefinitionContext, _antlr4$ParserRuleCon29);

  var _super30 = _createSuper(VariableDefinitionContext);

  function VariableDefinitionContext(parser, parent, invokingState) {
    var _this30;

    _classCallCheck(this, VariableDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this30 = _super30.call(this, parent, invokingState);
    _this30.parser = parser;
    _this30.ruleIndex = GraphQLFederationParser.RULE_variableDefinition;
    return _this30;
  }

  _createClass(VariableDefinitionContext, [{
    key: "variable",
    value: function variable() {
      return this.getTypedRuleContext(VariableContext, 0);
    }
  }, {
    key: "COLON",
    value: function COLON() {
      return this.getToken(GraphQLFederationParser.COLON, 0);
    }
  }, {
    key: "type_",
    value: function type_() {
      return this.getTypedRuleContext(Type_Context, 0);
    }
  }, {
    key: "defaultValue",
    value: function defaultValue() {
      return this.getTypedRuleContext(DefaultValueContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterVariableDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitVariableDefinition(this);
      }
    }
  }]);

  return VariableDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var DefaultValueContext = /*#__PURE__*/function (_antlr4$ParserRuleCon30) {
  _inherits(DefaultValueContext, _antlr4$ParserRuleCon30);

  var _super31 = _createSuper(DefaultValueContext);

  function DefaultValueContext(parser, parent, invokingState) {
    var _this31;

    _classCallCheck(this, DefaultValueContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this31 = _super31.call(this, parent, invokingState);
    _this31.parser = parser;
    _this31.ruleIndex = GraphQLFederationParser.RULE_defaultValue;
    return _this31;
  }

  _createClass(DefaultValueContext, [{
    key: "EQ",
    value: function EQ() {
      return this.getToken(GraphQLFederationParser.EQ, 0);
    }
  }, {
    key: "value",
    value: function value() {
      return this.getTypedRuleContext(ValueContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterDefaultValue(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitDefaultValue(this);
      }
    }
  }]);

  return DefaultValueContext;
}(_antlr["default"].ParserRuleContext);

var Type_Context = /*#__PURE__*/function (_antlr4$ParserRuleCon31) {
  _inherits(Type_Context, _antlr4$ParserRuleCon31);

  var _super32 = _createSuper(Type_Context);

  function Type_Context(parser, parent, invokingState) {
    var _this32;

    _classCallCheck(this, Type_Context);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this32 = _super32.call(this, parent, invokingState);
    _this32.parser = parser;
    _this32.ruleIndex = GraphQLFederationParser.RULE_type_;
    return _this32;
  }

  _createClass(Type_Context, [{
    key: "namedType",
    value: function namedType() {
      return this.getTypedRuleContext(NamedTypeContext, 0);
    }
  }, {
    key: "EXCL",
    value: function EXCL() {
      return this.getToken(GraphQLFederationParser.EXCL, 0);
    }
  }, {
    key: "listType",
    value: function listType() {
      return this.getTypedRuleContext(ListTypeContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterType_(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitType_(this);
      }
    }
  }]);

  return Type_Context;
}(_antlr["default"].ParserRuleContext);

var NamedTypeContext = /*#__PURE__*/function (_antlr4$ParserRuleCon32) {
  _inherits(NamedTypeContext, _antlr4$ParserRuleCon32);

  var _super33 = _createSuper(NamedTypeContext);

  function NamedTypeContext(parser, parent, invokingState) {
    var _this33;

    _classCallCheck(this, NamedTypeContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this33 = _super33.call(this, parent, invokingState);
    _this33.parser = parser;
    _this33.ruleIndex = GraphQLFederationParser.RULE_namedType;
    return _this33;
  }

  _createClass(NamedTypeContext, [{
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterNamedType(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitNamedType(this);
      }
    }
  }]);

  return NamedTypeContext;
}(_antlr["default"].ParserRuleContext);

var ListTypeContext = /*#__PURE__*/function (_antlr4$ParserRuleCon33) {
  _inherits(ListTypeContext, _antlr4$ParserRuleCon33);

  var _super34 = _createSuper(ListTypeContext);

  function ListTypeContext(parser, parent, invokingState) {
    var _this34;

    _classCallCheck(this, ListTypeContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this34 = _super34.call(this, parent, invokingState);
    _this34.parser = parser;
    _this34.ruleIndex = GraphQLFederationParser.RULE_listType;
    return _this34;
  }

  _createClass(ListTypeContext, [{
    key: "LBRACKET",
    value: function LBRACKET() {
      return this.getToken(GraphQLFederationParser.LBRACKET, 0);
    }
  }, {
    key: "type_",
    value: function type_() {
      return this.getTypedRuleContext(Type_Context, 0);
    }
  }, {
    key: "RBRACKET",
    value: function RBRACKET() {
      return this.getToken(GraphQLFederationParser.RBRACKET, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterListType(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitListType(this);
      }
    }
  }]);

  return ListTypeContext;
}(_antlr["default"].ParserRuleContext);

var DirectivesContext = /*#__PURE__*/function (_antlr4$ParserRuleCon34) {
  _inherits(DirectivesContext, _antlr4$ParserRuleCon34);

  var _super35 = _createSuper(DirectivesContext);

  function DirectivesContext(parser, parent, invokingState) {
    var _this35;

    _classCallCheck(this, DirectivesContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this35 = _super35.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this35), "directive", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(DirectiveContext);
      } else {
        return this.getTypedRuleContext(DirectiveContext, i);
      }
    });

    _this35.parser = parser;
    _this35.ruleIndex = GraphQLFederationParser.RULE_directives;
    return _this35;
  }

  _createClass(DirectivesContext, [{
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterDirectives(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitDirectives(this);
      }
    }
  }]);

  return DirectivesContext;
}(_antlr["default"].ParserRuleContext);

var DirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon35) {
  _inherits(DirectiveContext, _antlr4$ParserRuleCon35);

  var _super36 = _createSuper(DirectiveContext);

  function DirectiveContext(parser, parent, invokingState) {
    var _this36;

    _classCallCheck(this, DirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this36 = _super36.call(this, parent, invokingState);
    _this36.parser = parser;
    _this36.ruleIndex = GraphQLFederationParser.RULE_directive;
    return _this36;
  }

  _createClass(DirectiveContext, [{
    key: "AT",
    value: function AT() {
      return this.getToken(GraphQLFederationParser.AT, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "arguments",
    value: function _arguments() {
      return this.getTypedRuleContext(ArgumentsContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitDirective(this);
      }
    }
  }]);

  return DirectiveContext;
}(_antlr["default"].ParserRuleContext);

var TypeSystemDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon36) {
  _inherits(TypeSystemDefinitionContext, _antlr4$ParserRuleCon36);

  var _super37 = _createSuper(TypeSystemDefinitionContext);

  function TypeSystemDefinitionContext(parser, parent, invokingState) {
    var _this37;

    _classCallCheck(this, TypeSystemDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this37 = _super37.call(this, parent, invokingState);
    _this37.parser = parser;
    _this37.ruleIndex = GraphQLFederationParser.RULE_typeSystemDefinition;
    return _this37;
  }

  _createClass(TypeSystemDefinitionContext, [{
    key: "schemaDefinition",
    value: function schemaDefinition() {
      return this.getTypedRuleContext(SchemaDefinitionContext, 0);
    }
  }, {
    key: "typeDefinition",
    value: function typeDefinition() {
      return this.getTypedRuleContext(TypeDefinitionContext, 0);
    }
  }, {
    key: "directiveDefinition",
    value: function directiveDefinition() {
      return this.getTypedRuleContext(DirectiveDefinitionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterTypeSystemDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitTypeSystemDefinition(this);
      }
    }
  }]);

  return TypeSystemDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var TypeSystemExtensionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon37) {
  _inherits(TypeSystemExtensionContext, _antlr4$ParserRuleCon37);

  var _super38 = _createSuper(TypeSystemExtensionContext);

  function TypeSystemExtensionContext(parser, parent, invokingState) {
    var _this38;

    _classCallCheck(this, TypeSystemExtensionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this38 = _super38.call(this, parent, invokingState);
    _this38.parser = parser;
    _this38.ruleIndex = GraphQLFederationParser.RULE_typeSystemExtension;
    return _this38;
  }

  _createClass(TypeSystemExtensionContext, [{
    key: "schemaExtension",
    value: function schemaExtension() {
      return this.getTypedRuleContext(SchemaExtensionContext, 0);
    }
  }, {
    key: "typeExtension",
    value: function typeExtension() {
      return this.getTypedRuleContext(TypeExtensionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterTypeSystemExtension(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitTypeSystemExtension(this);
      }
    }
  }]);

  return TypeSystemExtensionContext;
}(_antlr["default"].ParserRuleContext);

var SchemaDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon38) {
  _inherits(SchemaDefinitionContext, _antlr4$ParserRuleCon38);

  var _super39 = _createSuper(SchemaDefinitionContext);

  function SchemaDefinitionContext(parser, parent, invokingState) {
    var _this39;

    _classCallCheck(this, SchemaDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this39 = _super39.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this39), "schemaDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(SchemaDirectiveContext);
      } else {
        return this.getTypedRuleContext(SchemaDirectiveContext, i);
      }
    });

    _defineProperty(_assertThisInitialized(_this39), "rootOperationTypeDefinition", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(RootOperationTypeDefinitionContext);
      } else {
        return this.getTypedRuleContext(RootOperationTypeDefinitionContext, i);
      }
    });

    _this39.parser = parser;
    _this39.ruleIndex = GraphQLFederationParser.RULE_schemaDefinition;
    return _this39;
  }

  _createClass(SchemaDefinitionContext, [{
    key: "SCHEMA_KEYWORD",
    value: function SCHEMA_KEYWORD() {
      return this.getToken(GraphQLFederationParser.SCHEMA_KEYWORD, 0);
    }
  }, {
    key: "LBRACE",
    value: function LBRACE() {
      return this.getToken(GraphQLFederationParser.LBRACE, 0);
    }
  }, {
    key: "RBRACE",
    value: function RBRACE() {
      return this.getToken(GraphQLFederationParser.RBRACE, 0);
    }
  }, {
    key: "description",
    value: function description() {
      return this.getTypedRuleContext(DescriptionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterSchemaDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitSchemaDefinition(this);
      }
    }
  }]);

  return SchemaDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var RootOperationTypeDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon39) {
  _inherits(RootOperationTypeDefinitionContext, _antlr4$ParserRuleCon39);

  var _super40 = _createSuper(RootOperationTypeDefinitionContext);

  function RootOperationTypeDefinitionContext(parser, parent, invokingState) {
    var _this40;

    _classCallCheck(this, RootOperationTypeDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this40 = _super40.call(this, parent, invokingState);
    _this40.parser = parser;
    _this40.ruleIndex = GraphQLFederationParser.RULE_rootOperationTypeDefinition;
    return _this40;
  }

  _createClass(RootOperationTypeDefinitionContext, [{
    key: "operationType",
    value: function operationType() {
      return this.getTypedRuleContext(OperationTypeContext, 0);
    }
  }, {
    key: "COLON",
    value: function COLON() {
      return this.getToken(GraphQLFederationParser.COLON, 0);
    }
  }, {
    key: "namedType",
    value: function namedType() {
      return this.getTypedRuleContext(NamedTypeContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterRootOperationTypeDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitRootOperationTypeDefinition(this);
      }
    }
  }]);

  return RootOperationTypeDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var SchemaExtensionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon40) {
  _inherits(SchemaExtensionContext, _antlr4$ParserRuleCon40);

  var _super41 = _createSuper(SchemaExtensionContext);

  function SchemaExtensionContext(parser, parent, invokingState) {
    var _this41;

    _classCallCheck(this, SchemaExtensionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this41 = _super41.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this41), "schemaDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(SchemaDirectiveContext);
      } else {
        return this.getTypedRuleContext(SchemaDirectiveContext, i);
      }
    });

    _defineProperty(_assertThisInitialized(_this41), "operationTypeDefinition", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(OperationTypeDefinitionContext);
      } else {
        return this.getTypedRuleContext(OperationTypeDefinitionContext, i);
      }
    });

    _this41.parser = parser;
    _this41.ruleIndex = GraphQLFederationParser.RULE_schemaExtension;
    return _this41;
  }

  _createClass(SchemaExtensionContext, [{
    key: "EXTEND_KEYWORD",
    value: function EXTEND_KEYWORD() {
      return this.getToken(GraphQLFederationParser.EXTEND_KEYWORD, 0);
    }
  }, {
    key: "SCHEMA_KEYWORD",
    value: function SCHEMA_KEYWORD() {
      return this.getToken(GraphQLFederationParser.SCHEMA_KEYWORD, 0);
    }
  }, {
    key: "LBRACE",
    value: function LBRACE() {
      return this.getToken(GraphQLFederationParser.LBRACE, 0);
    }
  }, {
    key: "RBRACE",
    value: function RBRACE() {
      return this.getToken(GraphQLFederationParser.RBRACE, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterSchemaExtension(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitSchemaExtension(this);
      }
    }
  }]);

  return SchemaExtensionContext;
}(_antlr["default"].ParserRuleContext);

var OperationTypeDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon41) {
  _inherits(OperationTypeDefinitionContext, _antlr4$ParserRuleCon41);

  var _super42 = _createSuper(OperationTypeDefinitionContext);

  function OperationTypeDefinitionContext(parser, parent, invokingState) {
    var _this42;

    _classCallCheck(this, OperationTypeDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this42 = _super42.call(this, parent, invokingState);
    _this42.parser = parser;
    _this42.ruleIndex = GraphQLFederationParser.RULE_operationTypeDefinition;
    return _this42;
  }

  _createClass(OperationTypeDefinitionContext, [{
    key: "operationType",
    value: function operationType() {
      return this.getTypedRuleContext(OperationTypeContext, 0);
    }
  }, {
    key: "COLON",
    value: function COLON() {
      return this.getToken(GraphQLFederationParser.COLON, 0);
    }
  }, {
    key: "namedType",
    value: function namedType() {
      return this.getTypedRuleContext(NamedTypeContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterOperationTypeDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitOperationTypeDefinition(this);
      }
    }
  }]);

  return OperationTypeDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var DescriptionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon42) {
  _inherits(DescriptionContext, _antlr4$ParserRuleCon42);

  var _super43 = _createSuper(DescriptionContext);

  function DescriptionContext(parser, parent, invokingState) {
    var _this43;

    _classCallCheck(this, DescriptionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this43 = _super43.call(this, parent, invokingState);
    _this43.parser = parser;
    _this43.ruleIndex = GraphQLFederationParser.RULE_description;
    return _this43;
  }

  _createClass(DescriptionContext, [{
    key: "stringValue",
    value: function stringValue() {
      return this.getTypedRuleContext(StringValueContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterDescription(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitDescription(this);
      }
    }
  }]);

  return DescriptionContext;
}(_antlr["default"].ParserRuleContext);

var TypeDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon43) {
  _inherits(TypeDefinitionContext, _antlr4$ParserRuleCon43);

  var _super44 = _createSuper(TypeDefinitionContext);

  function TypeDefinitionContext(parser, parent, invokingState) {
    var _this44;

    _classCallCheck(this, TypeDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this44 = _super44.call(this, parent, invokingState);
    _this44.parser = parser;
    _this44.ruleIndex = GraphQLFederationParser.RULE_typeDefinition;
    return _this44;
  }

  _createClass(TypeDefinitionContext, [{
    key: "scalarTypeDefinition",
    value: function scalarTypeDefinition() {
      return this.getTypedRuleContext(ScalarTypeDefinitionContext, 0);
    }
  }, {
    key: "objectTypeDefinition",
    value: function objectTypeDefinition() {
      return this.getTypedRuleContext(ObjectTypeDefinitionContext, 0);
    }
  }, {
    key: "interfaceTypeDefinition",
    value: function interfaceTypeDefinition() {
      return this.getTypedRuleContext(InterfaceTypeDefinitionContext, 0);
    }
  }, {
    key: "unionTypeDefinition",
    value: function unionTypeDefinition() {
      return this.getTypedRuleContext(UnionTypeDefinitionContext, 0);
    }
  }, {
    key: "enumTypeDefinition",
    value: function enumTypeDefinition() {
      return this.getTypedRuleContext(EnumTypeDefinitionContext, 0);
    }
  }, {
    key: "inputObjectTypeDefinition",
    value: function inputObjectTypeDefinition() {
      return this.getTypedRuleContext(InputObjectTypeDefinitionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterTypeDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitTypeDefinition(this);
      }
    }
  }]);

  return TypeDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var TypeExtensionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon44) {
  _inherits(TypeExtensionContext, _antlr4$ParserRuleCon44);

  var _super45 = _createSuper(TypeExtensionContext);

  function TypeExtensionContext(parser, parent, invokingState) {
    var _this45;

    _classCallCheck(this, TypeExtensionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this45 = _super45.call(this, parent, invokingState);
    _this45.parser = parser;
    _this45.ruleIndex = GraphQLFederationParser.RULE_typeExtension;
    return _this45;
  }

  _createClass(TypeExtensionContext, [{
    key: "scalarTypeExtension",
    value: function scalarTypeExtension() {
      return this.getTypedRuleContext(ScalarTypeExtensionContext, 0);
    }
  }, {
    key: "objectTypeExtension",
    value: function objectTypeExtension() {
      return this.getTypedRuleContext(ObjectTypeExtensionContext, 0);
    }
  }, {
    key: "interfaceTypeExtension",
    value: function interfaceTypeExtension() {
      return this.getTypedRuleContext(InterfaceTypeExtensionContext, 0);
    }
  }, {
    key: "unionTypeExtension",
    value: function unionTypeExtension() {
      return this.getTypedRuleContext(UnionTypeExtensionContext, 0);
    }
  }, {
    key: "enumTypeExtension",
    value: function enumTypeExtension() {
      return this.getTypedRuleContext(EnumTypeExtensionContext, 0);
    }
  }, {
    key: "inputObjectTypeExtension",
    value: function inputObjectTypeExtension() {
      return this.getTypedRuleContext(InputObjectTypeExtensionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterTypeExtension(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitTypeExtension(this);
      }
    }
  }]);

  return TypeExtensionContext;
}(_antlr["default"].ParserRuleContext);

var ScalarTypeDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon45) {
  _inherits(ScalarTypeDefinitionContext, _antlr4$ParserRuleCon45);

  var _super46 = _createSuper(ScalarTypeDefinitionContext);

  function ScalarTypeDefinitionContext(parser, parent, invokingState) {
    var _this46;

    _classCallCheck(this, ScalarTypeDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this46 = _super46.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this46), "scalarDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(ScalarDirectiveContext);
      } else {
        return this.getTypedRuleContext(ScalarDirectiveContext, i);
      }
    });

    _this46.parser = parser;
    _this46.ruleIndex = GraphQLFederationParser.RULE_scalarTypeDefinition;
    return _this46;
  }

  _createClass(ScalarTypeDefinitionContext, [{
    key: "SCALAR_KEYWORD",
    value: function SCALAR_KEYWORD() {
      return this.getToken(GraphQLFederationParser.SCALAR_KEYWORD, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "description",
    value: function description() {
      return this.getTypedRuleContext(DescriptionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterScalarTypeDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitScalarTypeDefinition(this);
      }
    }
  }]);

  return ScalarTypeDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var ScalarTypeExtensionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon46) {
  _inherits(ScalarTypeExtensionContext, _antlr4$ParserRuleCon46);

  var _super47 = _createSuper(ScalarTypeExtensionContext);

  function ScalarTypeExtensionContext(parser, parent, invokingState) {
    var _this47;

    _classCallCheck(this, ScalarTypeExtensionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this47 = _super47.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this47), "scalarDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(ScalarDirectiveContext);
      } else {
        return this.getTypedRuleContext(ScalarDirectiveContext, i);
      }
    });

    _this47.parser = parser;
    _this47.ruleIndex = GraphQLFederationParser.RULE_scalarTypeExtension;
    return _this47;
  }

  _createClass(ScalarTypeExtensionContext, [{
    key: "EXTEND_KEYWORD",
    value: function EXTEND_KEYWORD() {
      return this.getToken(GraphQLFederationParser.EXTEND_KEYWORD, 0);
    }
  }, {
    key: "SCALAR_KEYWORD",
    value: function SCALAR_KEYWORD() {
      return this.getToken(GraphQLFederationParser.SCALAR_KEYWORD, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterScalarTypeExtension(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitScalarTypeExtension(this);
      }
    }
  }]);

  return ScalarTypeExtensionContext;
}(_antlr["default"].ParserRuleContext);

var ObjectTypeDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon47) {
  _inherits(ObjectTypeDefinitionContext, _antlr4$ParserRuleCon47);

  var _super48 = _createSuper(ObjectTypeDefinitionContext);

  function ObjectTypeDefinitionContext(parser, parent, invokingState) {
    var _this48;

    _classCallCheck(this, ObjectTypeDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this48 = _super48.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this48), "objectDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(ObjectDirectiveContext);
      } else {
        return this.getTypedRuleContext(ObjectDirectiveContext, i);
      }
    });

    _this48.parser = parser;
    _this48.ruleIndex = GraphQLFederationParser.RULE_objectTypeDefinition;
    return _this48;
  }

  _createClass(ObjectTypeDefinitionContext, [{
    key: "TYPE_KEYWORD",
    value: function TYPE_KEYWORD() {
      return this.getToken(GraphQLFederationParser.TYPE_KEYWORD, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "description",
    value: function description() {
      return this.getTypedRuleContext(DescriptionContext, 0);
    }
  }, {
    key: "implementsInterfaces",
    value: function implementsInterfaces() {
      return this.getTypedRuleContext(ImplementsInterfacesContext, 0);
    }
  }, {
    key: "fieldsDefinition",
    value: function fieldsDefinition() {
      return this.getTypedRuleContext(FieldsDefinitionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterObjectTypeDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitObjectTypeDefinition(this);
      }
    }
  }]);

  return ObjectTypeDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var ImplementsInterfacesContext = /*#__PURE__*/function (_antlr4$ParserRuleCon48) {
  _inherits(ImplementsInterfacesContext, _antlr4$ParserRuleCon48);

  var _super49 = _createSuper(ImplementsInterfacesContext);

  function ImplementsInterfacesContext(parser, parent, invokingState) {
    var _this49;

    _classCallCheck(this, ImplementsInterfacesContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this49 = _super49.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this49), "namedType", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(NamedTypeContext);
      } else {
        return this.getTypedRuleContext(NamedTypeContext, i);
      }
    });

    _defineProperty(_assertThisInitialized(_this49), "AMP", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTokens(GraphQLFederationParser.AMP);
      } else {
        return this.getToken(GraphQLFederationParser.AMP, i);
      }
    });

    _this49.parser = parser;
    _this49.ruleIndex = GraphQLFederationParser.RULE_implementsInterfaces;
    return _this49;
  }

  _createClass(ImplementsInterfacesContext, [{
    key: "IMPLEMENTS_KEYWORD",
    value: function IMPLEMENTS_KEYWORD() {
      return this.getToken(GraphQLFederationParser.IMPLEMENTS_KEYWORD, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterImplementsInterfaces(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitImplementsInterfaces(this);
      }
    }
  }]);

  return ImplementsInterfacesContext;
}(_antlr["default"].ParserRuleContext);

var FieldsDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon49) {
  _inherits(FieldsDefinitionContext, _antlr4$ParserRuleCon49);

  var _super50 = _createSuper(FieldsDefinitionContext);

  function FieldsDefinitionContext(parser, parent, invokingState) {
    var _this50;

    _classCallCheck(this, FieldsDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this50 = _super50.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this50), "fieldDefinition", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(FieldDefinitionContext);
      } else {
        return this.getTypedRuleContext(FieldDefinitionContext, i);
      }
    });

    _this50.parser = parser;
    _this50.ruleIndex = GraphQLFederationParser.RULE_fieldsDefinition;
    return _this50;
  }

  _createClass(FieldsDefinitionContext, [{
    key: "LBRACE",
    value: function LBRACE() {
      return this.getToken(GraphQLFederationParser.LBRACE, 0);
    }
  }, {
    key: "RBRACE",
    value: function RBRACE() {
      return this.getToken(GraphQLFederationParser.RBRACE, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterFieldsDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitFieldsDefinition(this);
      }
    }
  }]);

  return FieldsDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var FieldDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon50) {
  _inherits(FieldDefinitionContext, _antlr4$ParserRuleCon50);

  var _super51 = _createSuper(FieldDefinitionContext);

  function FieldDefinitionContext(parser, parent, invokingState) {
    var _this51;

    _classCallCheck(this, FieldDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this51 = _super51.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this51), "fieldDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(FieldDirectiveContext);
      } else {
        return this.getTypedRuleContext(FieldDirectiveContext, i);
      }
    });

    _this51.parser = parser;
    _this51.ruleIndex = GraphQLFederationParser.RULE_fieldDefinition;
    _this51._name = null; // NameContext

    return _this51;
  }

  _createClass(FieldDefinitionContext, [{
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "COLON",
    value: function COLON() {
      return this.getToken(GraphQLFederationParser.COLON, 0);
    }
  }, {
    key: "type_",
    value: function type_() {
      return this.getTypedRuleContext(Type_Context, 0);
    }
  }, {
    key: "description",
    value: function description() {
      return this.getTypedRuleContext(DescriptionContext, 0);
    }
  }, {
    key: "argumentsDefinition",
    value: function argumentsDefinition() {
      return this.getTypedRuleContext(ArgumentsDefinitionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterFieldDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitFieldDefinition(this);
      }
    }
  }]);

  return FieldDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var ArgumentsDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon51) {
  _inherits(ArgumentsDefinitionContext, _antlr4$ParserRuleCon51);

  var _super52 = _createSuper(ArgumentsDefinitionContext);

  function ArgumentsDefinitionContext(parser, parent, invokingState) {
    var _this52;

    _classCallCheck(this, ArgumentsDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this52 = _super52.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this52), "inputValueDefinition", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(InputValueDefinitionContext);
      } else {
        return this.getTypedRuleContext(InputValueDefinitionContext, i);
      }
    });

    _this52.parser = parser;
    _this52.ruleIndex = GraphQLFederationParser.RULE_argumentsDefinition;
    return _this52;
  }

  _createClass(ArgumentsDefinitionContext, [{
    key: "LPAREN",
    value: function LPAREN() {
      return this.getToken(GraphQLFederationParser.LPAREN, 0);
    }
  }, {
    key: "RPAREN",
    value: function RPAREN() {
      return this.getToken(GraphQLFederationParser.RPAREN, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterArgumentsDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitArgumentsDefinition(this);
      }
    }
  }]);

  return ArgumentsDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var InputValueDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon52) {
  _inherits(InputValueDefinitionContext, _antlr4$ParserRuleCon52);

  var _super53 = _createSuper(InputValueDefinitionContext);

  function InputValueDefinitionContext(parser, parent, invokingState) {
    var _this53;

    _classCallCheck(this, InputValueDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this53 = _super53.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this53), "inputValueDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(InputValueDirectiveContext);
      } else {
        return this.getTypedRuleContext(InputValueDirectiveContext, i);
      }
    });

    _this53.parser = parser;
    _this53.ruleIndex = GraphQLFederationParser.RULE_inputValueDefinition;
    return _this53;
  }

  _createClass(InputValueDefinitionContext, [{
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "COLON",
    value: function COLON() {
      return this.getToken(GraphQLFederationParser.COLON, 0);
    }
  }, {
    key: "type_",
    value: function type_() {
      return this.getTypedRuleContext(Type_Context, 0);
    }
  }, {
    key: "description",
    value: function description() {
      return this.getTypedRuleContext(DescriptionContext, 0);
    }
  }, {
    key: "defaultValue",
    value: function defaultValue() {
      return this.getTypedRuleContext(DefaultValueContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterInputValueDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitInputValueDefinition(this);
      }
    }
  }]);

  return InputValueDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var ObjectTypeExtensionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon53) {
  _inherits(ObjectTypeExtensionContext, _antlr4$ParserRuleCon53);

  var _super54 = _createSuper(ObjectTypeExtensionContext);

  function ObjectTypeExtensionContext(parser, parent, invokingState) {
    var _this54;

    _classCallCheck(this, ObjectTypeExtensionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this54 = _super54.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this54), "objectDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(ObjectDirectiveContext);
      } else {
        return this.getTypedRuleContext(ObjectDirectiveContext, i);
      }
    });

    _this54.parser = parser;
    _this54.ruleIndex = GraphQLFederationParser.RULE_objectTypeExtension;
    return _this54;
  }

  _createClass(ObjectTypeExtensionContext, [{
    key: "EXTEND_KEYWORD",
    value: function EXTEND_KEYWORD() {
      return this.getToken(GraphQLFederationParser.EXTEND_KEYWORD, 0);
    }
  }, {
    key: "TYPE_KEYWORD",
    value: function TYPE_KEYWORD() {
      return this.getToken(GraphQLFederationParser.TYPE_KEYWORD, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "fieldsDefinition",
    value: function fieldsDefinition() {
      return this.getTypedRuleContext(FieldsDefinitionContext, 0);
    }
  }, {
    key: "implementsInterfaces",
    value: function implementsInterfaces() {
      return this.getTypedRuleContext(ImplementsInterfacesContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterObjectTypeExtension(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitObjectTypeExtension(this);
      }
    }
  }]);

  return ObjectTypeExtensionContext;
}(_antlr["default"].ParserRuleContext);

var InterfaceTypeDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon54) {
  _inherits(InterfaceTypeDefinitionContext, _antlr4$ParserRuleCon54);

  var _super55 = _createSuper(InterfaceTypeDefinitionContext);

  function InterfaceTypeDefinitionContext(parser, parent, invokingState) {
    var _this55;

    _classCallCheck(this, InterfaceTypeDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this55 = _super55.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this55), "interfaceDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(InterfaceDirectiveContext);
      } else {
        return this.getTypedRuleContext(InterfaceDirectiveContext, i);
      }
    });

    _this55.parser = parser;
    _this55.ruleIndex = GraphQLFederationParser.RULE_interfaceTypeDefinition;
    return _this55;
  }

  _createClass(InterfaceTypeDefinitionContext, [{
    key: "INTERFACE_KEYWORD",
    value: function INTERFACE_KEYWORD() {
      return this.getToken(GraphQLFederationParser.INTERFACE_KEYWORD, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "description",
    value: function description() {
      return this.getTypedRuleContext(DescriptionContext, 0);
    }
  }, {
    key: "implementsInterfaces",
    value: function implementsInterfaces() {
      return this.getTypedRuleContext(ImplementsInterfacesContext, 0);
    }
  }, {
    key: "fieldsDefinition",
    value: function fieldsDefinition() {
      return this.getTypedRuleContext(FieldsDefinitionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterInterfaceTypeDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitInterfaceTypeDefinition(this);
      }
    }
  }]);

  return InterfaceTypeDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var InterfaceTypeExtensionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon55) {
  _inherits(InterfaceTypeExtensionContext, _antlr4$ParserRuleCon55);

  var _super56 = _createSuper(InterfaceTypeExtensionContext);

  function InterfaceTypeExtensionContext(parser, parent, invokingState) {
    var _this56;

    _classCallCheck(this, InterfaceTypeExtensionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this56 = _super56.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this56), "interfaceDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(InterfaceDirectiveContext);
      } else {
        return this.getTypedRuleContext(InterfaceDirectiveContext, i);
      }
    });

    _this56.parser = parser;
    _this56.ruleIndex = GraphQLFederationParser.RULE_interfaceTypeExtension;
    return _this56;
  }

  _createClass(InterfaceTypeExtensionContext, [{
    key: "EXTEND_KEYWORD",
    value: function EXTEND_KEYWORD() {
      return this.getToken(GraphQLFederationParser.EXTEND_KEYWORD, 0);
    }
  }, {
    key: "INTERFACE_KEYWORD",
    value: function INTERFACE_KEYWORD() {
      return this.getToken(GraphQLFederationParser.INTERFACE_KEYWORD, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "fieldsDefinition",
    value: function fieldsDefinition() {
      return this.getTypedRuleContext(FieldsDefinitionContext, 0);
    }
  }, {
    key: "implementsInterfaces",
    value: function implementsInterfaces() {
      return this.getTypedRuleContext(ImplementsInterfacesContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterInterfaceTypeExtension(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitInterfaceTypeExtension(this);
      }
    }
  }]);

  return InterfaceTypeExtensionContext;
}(_antlr["default"].ParserRuleContext);

var UnionTypeDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon56) {
  _inherits(UnionTypeDefinitionContext, _antlr4$ParserRuleCon56);

  var _super57 = _createSuper(UnionTypeDefinitionContext);

  function UnionTypeDefinitionContext(parser, parent, invokingState) {
    var _this57;

    _classCallCheck(this, UnionTypeDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this57 = _super57.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this57), "unionDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(UnionDirectiveContext);
      } else {
        return this.getTypedRuleContext(UnionDirectiveContext, i);
      }
    });

    _this57.parser = parser;
    _this57.ruleIndex = GraphQLFederationParser.RULE_unionTypeDefinition;
    return _this57;
  }

  _createClass(UnionTypeDefinitionContext, [{
    key: "UNION_KEYWORD",
    value: function UNION_KEYWORD() {
      return this.getToken(GraphQLFederationParser.UNION_KEYWORD, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "description",
    value: function description() {
      return this.getTypedRuleContext(DescriptionContext, 0);
    }
  }, {
    key: "unionMemberTypes",
    value: function unionMemberTypes() {
      return this.getTypedRuleContext(UnionMemberTypesContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterUnionTypeDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitUnionTypeDefinition(this);
      }
    }
  }]);

  return UnionTypeDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var UnionMemberTypesContext = /*#__PURE__*/function (_antlr4$ParserRuleCon57) {
  _inherits(UnionMemberTypesContext, _antlr4$ParserRuleCon57);

  var _super58 = _createSuper(UnionMemberTypesContext);

  function UnionMemberTypesContext(parser, parent, invokingState) {
    var _this58;

    _classCallCheck(this, UnionMemberTypesContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this58 = _super58.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this58), "namedType", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(NamedTypeContext);
      } else {
        return this.getTypedRuleContext(NamedTypeContext, i);
      }
    });

    _defineProperty(_assertThisInitialized(_this58), "VSLASH", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTokens(GraphQLFederationParser.VSLASH);
      } else {
        return this.getToken(GraphQLFederationParser.VSLASH, i);
      }
    });

    _this58.parser = parser;
    _this58.ruleIndex = GraphQLFederationParser.RULE_unionMemberTypes;
    return _this58;
  }

  _createClass(UnionMemberTypesContext, [{
    key: "EQ",
    value: function EQ() {
      return this.getToken(GraphQLFederationParser.EQ, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterUnionMemberTypes(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitUnionMemberTypes(this);
      }
    }
  }]);

  return UnionMemberTypesContext;
}(_antlr["default"].ParserRuleContext);

var UnionTypeExtensionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon58) {
  _inherits(UnionTypeExtensionContext, _antlr4$ParserRuleCon58);

  var _super59 = _createSuper(UnionTypeExtensionContext);

  function UnionTypeExtensionContext(parser, parent, invokingState) {
    var _this59;

    _classCallCheck(this, UnionTypeExtensionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this59 = _super59.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this59), "unionDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(UnionDirectiveContext);
      } else {
        return this.getTypedRuleContext(UnionDirectiveContext, i);
      }
    });

    _this59.parser = parser;
    _this59.ruleIndex = GraphQLFederationParser.RULE_unionTypeExtension;
    return _this59;
  }

  _createClass(UnionTypeExtensionContext, [{
    key: "EXTEND_KEYWORD",
    value: function EXTEND_KEYWORD() {
      return this.getToken(GraphQLFederationParser.EXTEND_KEYWORD, 0);
    }
  }, {
    key: "UNION_KEYWORD",
    value: function UNION_KEYWORD() {
      return this.getToken(GraphQLFederationParser.UNION_KEYWORD, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "unionMemberTypes",
    value: function unionMemberTypes() {
      return this.getTypedRuleContext(UnionMemberTypesContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterUnionTypeExtension(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitUnionTypeExtension(this);
      }
    }
  }]);

  return UnionTypeExtensionContext;
}(_antlr["default"].ParserRuleContext);

var EnumTypeDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon59) {
  _inherits(EnumTypeDefinitionContext, _antlr4$ParserRuleCon59);

  var _super60 = _createSuper(EnumTypeDefinitionContext);

  function EnumTypeDefinitionContext(parser, parent, invokingState) {
    var _this60;

    _classCallCheck(this, EnumTypeDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this60 = _super60.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this60), "enumDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(EnumDirectiveContext);
      } else {
        return this.getTypedRuleContext(EnumDirectiveContext, i);
      }
    });

    _this60.parser = parser;
    _this60.ruleIndex = GraphQLFederationParser.RULE_enumTypeDefinition;
    return _this60;
  }

  _createClass(EnumTypeDefinitionContext, [{
    key: "ENUM_KEYWORD",
    value: function ENUM_KEYWORD() {
      return this.getToken(GraphQLFederationParser.ENUM_KEYWORD, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "description",
    value: function description() {
      return this.getTypedRuleContext(DescriptionContext, 0);
    }
  }, {
    key: "enumValuesDefinition",
    value: function enumValuesDefinition() {
      return this.getTypedRuleContext(EnumValuesDefinitionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterEnumTypeDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitEnumTypeDefinition(this);
      }
    }
  }]);

  return EnumTypeDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var EnumValuesDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon60) {
  _inherits(EnumValuesDefinitionContext, _antlr4$ParserRuleCon60);

  var _super61 = _createSuper(EnumValuesDefinitionContext);

  function EnumValuesDefinitionContext(parser, parent, invokingState) {
    var _this61;

    _classCallCheck(this, EnumValuesDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this61 = _super61.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this61), "enumValueDefinition", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(EnumValueDefinitionContext);
      } else {
        return this.getTypedRuleContext(EnumValueDefinitionContext, i);
      }
    });

    _this61.parser = parser;
    _this61.ruleIndex = GraphQLFederationParser.RULE_enumValuesDefinition;
    return _this61;
  }

  _createClass(EnumValuesDefinitionContext, [{
    key: "LBRACE",
    value: function LBRACE() {
      return this.getToken(GraphQLFederationParser.LBRACE, 0);
    }
  }, {
    key: "RBRACE",
    value: function RBRACE() {
      return this.getToken(GraphQLFederationParser.RBRACE, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterEnumValuesDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitEnumValuesDefinition(this);
      }
    }
  }]);

  return EnumValuesDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var EnumValueDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon61) {
  _inherits(EnumValueDefinitionContext, _antlr4$ParserRuleCon61);

  var _super62 = _createSuper(EnumValueDefinitionContext);

  function EnumValueDefinitionContext(parser, parent, invokingState) {
    var _this62;

    _classCallCheck(this, EnumValueDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this62 = _super62.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this62), "enumValueDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(EnumValueDirectiveContext);
      } else {
        return this.getTypedRuleContext(EnumValueDirectiveContext, i);
      }
    });

    _this62.parser = parser;
    _this62.ruleIndex = GraphQLFederationParser.RULE_enumValueDefinition;
    return _this62;
  }

  _createClass(EnumValueDefinitionContext, [{
    key: "enumValue",
    value: function enumValue() {
      return this.getTypedRuleContext(EnumValueContext, 0);
    }
  }, {
    key: "description",
    value: function description() {
      return this.getTypedRuleContext(DescriptionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterEnumValueDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitEnumValueDefinition(this);
      }
    }
  }]);

  return EnumValueDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var EnumTypeExtensionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon62) {
  _inherits(EnumTypeExtensionContext, _antlr4$ParserRuleCon62);

  var _super63 = _createSuper(EnumTypeExtensionContext);

  function EnumTypeExtensionContext(parser, parent, invokingState) {
    var _this63;

    _classCallCheck(this, EnumTypeExtensionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this63 = _super63.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this63), "enumDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(EnumDirectiveContext);
      } else {
        return this.getTypedRuleContext(EnumDirectiveContext, i);
      }
    });

    _this63.parser = parser;
    _this63.ruleIndex = GraphQLFederationParser.RULE_enumTypeExtension;
    return _this63;
  }

  _createClass(EnumTypeExtensionContext, [{
    key: "EXTEND_KEYWORD",
    value: function EXTEND_KEYWORD() {
      return this.getToken(GraphQLFederationParser.EXTEND_KEYWORD, 0);
    }
  }, {
    key: "ENUM_KEYWORD",
    value: function ENUM_KEYWORD() {
      return this.getToken(GraphQLFederationParser.ENUM_KEYWORD, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "enumValuesDefinition",
    value: function enumValuesDefinition() {
      return this.getTypedRuleContext(EnumValuesDefinitionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterEnumTypeExtension(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitEnumTypeExtension(this);
      }
    }
  }]);

  return EnumTypeExtensionContext;
}(_antlr["default"].ParserRuleContext);

var InputObjectTypeDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon63) {
  _inherits(InputObjectTypeDefinitionContext, _antlr4$ParserRuleCon63);

  var _super64 = _createSuper(InputObjectTypeDefinitionContext);

  function InputObjectTypeDefinitionContext(parser, parent, invokingState) {
    var _this64;

    _classCallCheck(this, InputObjectTypeDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this64 = _super64.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this64), "inputObjectDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(InputObjectDirectiveContext);
      } else {
        return this.getTypedRuleContext(InputObjectDirectiveContext, i);
      }
    });

    _this64.parser = parser;
    _this64.ruleIndex = GraphQLFederationParser.RULE_inputObjectTypeDefinition;
    return _this64;
  }

  _createClass(InputObjectTypeDefinitionContext, [{
    key: "INPUT_KEYWORD",
    value: function INPUT_KEYWORD() {
      return this.getToken(GraphQLFederationParser.INPUT_KEYWORD, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "description",
    value: function description() {
      return this.getTypedRuleContext(DescriptionContext, 0);
    }
  }, {
    key: "inputFieldsDefinition",
    value: function inputFieldsDefinition() {
      return this.getTypedRuleContext(InputFieldsDefinitionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterInputObjectTypeDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitInputObjectTypeDefinition(this);
      }
    }
  }]);

  return InputObjectTypeDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var InputFieldsDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon64) {
  _inherits(InputFieldsDefinitionContext, _antlr4$ParserRuleCon64);

  var _super65 = _createSuper(InputFieldsDefinitionContext);

  function InputFieldsDefinitionContext(parser, parent, invokingState) {
    var _this65;

    _classCallCheck(this, InputFieldsDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this65 = _super65.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this65), "inputValueDefinition", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(InputValueDefinitionContext);
      } else {
        return this.getTypedRuleContext(InputValueDefinitionContext, i);
      }
    });

    _this65.parser = parser;
    _this65.ruleIndex = GraphQLFederationParser.RULE_inputFieldsDefinition;
    return _this65;
  }

  _createClass(InputFieldsDefinitionContext, [{
    key: "LBRACE",
    value: function LBRACE() {
      return this.getToken(GraphQLFederationParser.LBRACE, 0);
    }
  }, {
    key: "RBRACE",
    value: function RBRACE() {
      return this.getToken(GraphQLFederationParser.RBRACE, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterInputFieldsDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitInputFieldsDefinition(this);
      }
    }
  }]);

  return InputFieldsDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var InputObjectTypeExtensionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon65) {
  _inherits(InputObjectTypeExtensionContext, _antlr4$ParserRuleCon65);

  var _super66 = _createSuper(InputObjectTypeExtensionContext);

  function InputObjectTypeExtensionContext(parser, parent, invokingState) {
    var _this66;

    _classCallCheck(this, InputObjectTypeExtensionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this66 = _super66.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this66), "inputObjectDirective", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(InputObjectDirectiveContext);
      } else {
        return this.getTypedRuleContext(InputObjectDirectiveContext, i);
      }
    });

    _this66.parser = parser;
    _this66.ruleIndex = GraphQLFederationParser.RULE_inputObjectTypeExtension;
    return _this66;
  }

  _createClass(InputObjectTypeExtensionContext, [{
    key: "EXTEND_KEYWORD",
    value: function EXTEND_KEYWORD() {
      return this.getToken(GraphQLFederationParser.EXTEND_KEYWORD, 0);
    }
  }, {
    key: "INPUT_KEYWORD",
    value: function INPUT_KEYWORD() {
      return this.getToken(GraphQLFederationParser.INPUT_KEYWORD, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "inputFieldsDefinition",
    value: function inputFieldsDefinition() {
      return this.getTypedRuleContext(InputFieldsDefinitionContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterInputObjectTypeExtension(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitInputObjectTypeExtension(this);
      }
    }
  }]);

  return InputObjectTypeExtensionContext;
}(_antlr["default"].ParserRuleContext);

var DirectiveDefinitionContext = /*#__PURE__*/function (_antlr4$ParserRuleCon66) {
  _inherits(DirectiveDefinitionContext, _antlr4$ParserRuleCon66);

  var _super67 = _createSuper(DirectiveDefinitionContext);

  function DirectiveDefinitionContext(parser, parent, invokingState) {
    var _this67;

    _classCallCheck(this, DirectiveDefinitionContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this67 = _super67.call(this, parent, invokingState);
    _this67.parser = parser;
    _this67.ruleIndex = GraphQLFederationParser.RULE_directiveDefinition;
    return _this67;
  }

  _createClass(DirectiveDefinitionContext, [{
    key: "DIRECTIVE_KEYWORD",
    value: function DIRECTIVE_KEYWORD() {
      return this.getToken(GraphQLFederationParser.DIRECTIVE_KEYWORD, 0);
    }
  }, {
    key: "AT",
    value: function AT() {
      return this.getToken(GraphQLFederationParser.AT, 0);
    }
  }, {
    key: "name",
    value: function name() {
      return this.getTypedRuleContext(NameContext, 0);
    }
  }, {
    key: "ON_KEYWORD",
    value: function ON_KEYWORD() {
      return this.getToken(GraphQLFederationParser.ON_KEYWORD, 0);
    }
  }, {
    key: "directiveLocations",
    value: function directiveLocations() {
      return this.getTypedRuleContext(DirectiveLocationsContext, 0);
    }
  }, {
    key: "description",
    value: function description() {
      return this.getTypedRuleContext(DescriptionContext, 0);
    }
  }, {
    key: "argumentsDefinition",
    value: function argumentsDefinition() {
      return this.getTypedRuleContext(ArgumentsDefinitionContext, 0);
    }
  }, {
    key: "REPEATABLE_KEYWORD",
    value: function REPEATABLE_KEYWORD() {
      return this.getToken(GraphQLFederationParser.REPEATABLE_KEYWORD, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterDirectiveDefinition(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitDirectiveDefinition(this);
      }
    }
  }]);

  return DirectiveDefinitionContext;
}(_antlr["default"].ParserRuleContext);

var DirectiveLocationsContext = /*#__PURE__*/function (_antlr4$ParserRuleCon67) {
  _inherits(DirectiveLocationsContext, _antlr4$ParserRuleCon67);

  var _super68 = _createSuper(DirectiveLocationsContext);

  function DirectiveLocationsContext(parser, parent, invokingState) {
    var _this68;

    _classCallCheck(this, DirectiveLocationsContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this68 = _super68.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this68), "directiveLocation", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(DirectiveLocationContext);
      } else {
        return this.getTypedRuleContext(DirectiveLocationContext, i);
      }
    });

    _defineProperty(_assertThisInitialized(_this68), "VSLASH", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTokens(GraphQLFederationParser.VSLASH);
      } else {
        return this.getToken(GraphQLFederationParser.VSLASH, i);
      }
    });

    _this68.parser = parser;
    _this68.ruleIndex = GraphQLFederationParser.RULE_directiveLocations;
    return _this68;
  }

  _createClass(DirectiveLocationsContext, [{
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterDirectiveLocations(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitDirectiveLocations(this);
      }
    }
  }]);

  return DirectiveLocationsContext;
}(_antlr["default"].ParserRuleContext);

var DirectiveLocationContext = /*#__PURE__*/function (_antlr4$ParserRuleCon68) {
  _inherits(DirectiveLocationContext, _antlr4$ParserRuleCon68);

  var _super69 = _createSuper(DirectiveLocationContext);

  function DirectiveLocationContext(parser, parent, invokingState) {
    var _this69;

    _classCallCheck(this, DirectiveLocationContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this69 = _super69.call(this, parent, invokingState);
    _this69.parser = parser;
    _this69.ruleIndex = GraphQLFederationParser.RULE_directiveLocation;
    return _this69;
  }

  _createClass(DirectiveLocationContext, [{
    key: "executableDirectiveLocation",
    value: function executableDirectiveLocation() {
      return this.getTypedRuleContext(ExecutableDirectiveLocationContext, 0);
    }
  }, {
    key: "typeSystemDirectiveLocation",
    value: function typeSystemDirectiveLocation() {
      return this.getTypedRuleContext(TypeSystemDirectiveLocationContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterDirectiveLocation(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitDirectiveLocation(this);
      }
    }
  }]);

  return DirectiveLocationContext;
}(_antlr["default"].ParserRuleContext);

var ExecutableDirectiveLocationContext = /*#__PURE__*/function (_antlr4$ParserRuleCon69) {
  _inherits(ExecutableDirectiveLocationContext, _antlr4$ParserRuleCon69);

  var _super70 = _createSuper(ExecutableDirectiveLocationContext);

  function ExecutableDirectiveLocationContext(parser, parent, invokingState) {
    var _this70;

    _classCallCheck(this, ExecutableDirectiveLocationContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this70 = _super70.call(this, parent, invokingState);
    _this70.parser = parser;
    _this70.ruleIndex = GraphQLFederationParser.RULE_executableDirectiveLocation;
    return _this70;
  }

  _createClass(ExecutableDirectiveLocationContext, [{
    key: "QUERY_LOCATION",
    value: function QUERY_LOCATION() {
      return this.getToken(GraphQLFederationParser.QUERY_LOCATION, 0);
    }
  }, {
    key: "MUTATION_LOCATION",
    value: function MUTATION_LOCATION() {
      return this.getToken(GraphQLFederationParser.MUTATION_LOCATION, 0);
    }
  }, {
    key: "SUBSCRIPTION_LOCATION",
    value: function SUBSCRIPTION_LOCATION() {
      return this.getToken(GraphQLFederationParser.SUBSCRIPTION_LOCATION, 0);
    }
  }, {
    key: "FIELD_LOCATION",
    value: function FIELD_LOCATION() {
      return this.getToken(GraphQLFederationParser.FIELD_LOCATION, 0);
    }
  }, {
    key: "FRAGMENT_DEFINITION_LOCATION",
    value: function FRAGMENT_DEFINITION_LOCATION() {
      return this.getToken(GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION, 0);
    }
  }, {
    key: "FRAGMENT_SPREAD_LOCATION",
    value: function FRAGMENT_SPREAD_LOCATION() {
      return this.getToken(GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION, 0);
    }
  }, {
    key: "INLINE_FRAGMENT_LOCATION",
    value: function INLINE_FRAGMENT_LOCATION() {
      return this.getToken(GraphQLFederationParser.INLINE_FRAGMENT_LOCATION, 0);
    }
  }, {
    key: "VARIABLE_DEFINITION_LOCATION",
    value: function VARIABLE_DEFINITION_LOCATION() {
      return this.getToken(GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterExecutableDirectiveLocation(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitExecutableDirectiveLocation(this);
      }
    }
  }]);

  return ExecutableDirectiveLocationContext;
}(_antlr["default"].ParserRuleContext);

var TypeSystemDirectiveLocationContext = /*#__PURE__*/function (_antlr4$ParserRuleCon70) {
  _inherits(TypeSystemDirectiveLocationContext, _antlr4$ParserRuleCon70);

  var _super71 = _createSuper(TypeSystemDirectiveLocationContext);

  function TypeSystemDirectiveLocationContext(parser, parent, invokingState) {
    var _this71;

    _classCallCheck(this, TypeSystemDirectiveLocationContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this71 = _super71.call(this, parent, invokingState);
    _this71.parser = parser;
    _this71.ruleIndex = GraphQLFederationParser.RULE_typeSystemDirectiveLocation;
    return _this71;
  }

  _createClass(TypeSystemDirectiveLocationContext, [{
    key: "SCHEMA_LOCATION",
    value: function SCHEMA_LOCATION() {
      return this.getToken(GraphQLFederationParser.SCHEMA_LOCATION, 0);
    }
  }, {
    key: "SCALAR_LOCATION",
    value: function SCALAR_LOCATION() {
      return this.getToken(GraphQLFederationParser.SCALAR_LOCATION, 0);
    }
  }, {
    key: "OBJECT_LOCATION",
    value: function OBJECT_LOCATION() {
      return this.getToken(GraphQLFederationParser.OBJECT_LOCATION, 0);
    }
  }, {
    key: "FIELD_DEFINITION_LOCATION",
    value: function FIELD_DEFINITION_LOCATION() {
      return this.getToken(GraphQLFederationParser.FIELD_DEFINITION_LOCATION, 0);
    }
  }, {
    key: "ARGUMENT_DEFINITION_LOCATION",
    value: function ARGUMENT_DEFINITION_LOCATION() {
      return this.getToken(GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION, 0);
    }
  }, {
    key: "INTERFACE_LOCATION",
    value: function INTERFACE_LOCATION() {
      return this.getToken(GraphQLFederationParser.INTERFACE_LOCATION, 0);
    }
  }, {
    key: "UNION_LOCATION",
    value: function UNION_LOCATION() {
      return this.getToken(GraphQLFederationParser.UNION_LOCATION, 0);
    }
  }, {
    key: "ENUM_LOCATION",
    value: function ENUM_LOCATION() {
      return this.getToken(GraphQLFederationParser.ENUM_LOCATION, 0);
    }
  }, {
    key: "ENUM_VALUE_LOCATION",
    value: function ENUM_VALUE_LOCATION() {
      return this.getToken(GraphQLFederationParser.ENUM_VALUE_LOCATION, 0);
    }
  }, {
    key: "INPUT_OBJECT_LOCATION",
    value: function INPUT_OBJECT_LOCATION() {
      return this.getToken(GraphQLFederationParser.INPUT_OBJECT_LOCATION, 0);
    }
  }, {
    key: "INPUT_FIELD_DEFINITION_LOCATION",
    value: function INPUT_FIELD_DEFINITION_LOCATION() {
      return this.getToken(GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterTypeSystemDirectiveLocation(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitTypeSystemDirectiveLocation(this);
      }
    }
  }]);

  return TypeSystemDirectiveLocationContext;
}(_antlr["default"].ParserRuleContext);

var ExternalDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon71) {
  _inherits(ExternalDirectiveContext, _antlr4$ParserRuleCon71);

  var _super72 = _createSuper(ExternalDirectiveContext);

  function ExternalDirectiveContext(parser, parent, invokingState) {
    var _this72;

    _classCallCheck(this, ExternalDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this72 = _super72.call(this, parent, invokingState);
    _this72.parser = parser;
    _this72.ruleIndex = GraphQLFederationParser.RULE_externalDirective;
    return _this72;
  }

  _createClass(ExternalDirectiveContext, [{
    key: "EXTERNAL",
    value: function EXTERNAL() {
      return this.getToken(GraphQLFederationParser.EXTERNAL, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterExternalDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitExternalDirective(this);
      }
    }
  }]);

  return ExternalDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var InaccessibleDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon72) {
  _inherits(InaccessibleDirectiveContext, _antlr4$ParserRuleCon72);

  var _super73 = _createSuper(InaccessibleDirectiveContext);

  function InaccessibleDirectiveContext(parser, parent, invokingState) {
    var _this73;

    _classCallCheck(this, InaccessibleDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this73 = _super73.call(this, parent, invokingState);
    _this73.parser = parser;
    _this73.ruleIndex = GraphQLFederationParser.RULE_inaccessibleDirective;
    return _this73;
  }

  _createClass(InaccessibleDirectiveContext, [{
    key: "INACCESSIBLE",
    value: function INACCESSIBLE() {
      return this.getToken(GraphQLFederationParser.INACCESSIBLE, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterInaccessibleDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitInaccessibleDirective(this);
      }
    }
  }]);

  return InaccessibleDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var RequiresDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon73) {
  _inherits(RequiresDirectiveContext, _antlr4$ParserRuleCon73);

  var _super74 = _createSuper(RequiresDirectiveContext);

  function RequiresDirectiveContext(parser, parent, invokingState) {
    var _this74;

    _classCallCheck(this, RequiresDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this74 = _super74.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this74), "DQUOTE_F", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTokens(GraphQLFederationParser.DQUOTE_F);
      } else {
        return this.getToken(GraphQLFederationParser.DQUOTE_F, i);
      }
    });

    _this74.parser = parser;
    _this74.ruleIndex = GraphQLFederationParser.RULE_requiresDirective;
    return _this74;
  }

  _createClass(RequiresDirectiveContext, [{
    key: "REQUIRES",
    value: function REQUIRES() {
      return this.getToken(GraphQLFederationParser.REQUIRES, 0);
    }
  }, {
    key: "LPAREN_F",
    value: function LPAREN_F() {
      return this.getToken(GraphQLFederationParser.LPAREN_F, 0);
    }
  }, {
    key: "FIELDS_KEYWORD",
    value: function FIELDS_KEYWORD() {
      return this.getToken(GraphQLFederationParser.FIELDS_KEYWORD, 0);
    }
  }, {
    key: "COLON_F",
    value: function COLON_F() {
      return this.getToken(GraphQLFederationParser.COLON_F, 0);
    }
  }, {
    key: "fieldSet",
    value: function fieldSet() {
      return this.getTypedRuleContext(FieldSetContext, 0);
    }
  }, {
    key: "RPAREN_F",
    value: function RPAREN_F() {
      return this.getToken(GraphQLFederationParser.RPAREN_F, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterRequiresDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitRequiresDirective(this);
      }
    }
  }]);

  return RequiresDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var ProvidesDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon74) {
  _inherits(ProvidesDirectiveContext, _antlr4$ParserRuleCon74);

  var _super75 = _createSuper(ProvidesDirectiveContext);

  function ProvidesDirectiveContext(parser, parent, invokingState) {
    var _this75;

    _classCallCheck(this, ProvidesDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this75 = _super75.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this75), "DQUOTE_F", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTokens(GraphQLFederationParser.DQUOTE_F);
      } else {
        return this.getToken(GraphQLFederationParser.DQUOTE_F, i);
      }
    });

    _this75.parser = parser;
    _this75.ruleIndex = GraphQLFederationParser.RULE_providesDirective;
    return _this75;
  }

  _createClass(ProvidesDirectiveContext, [{
    key: "PROVIDES",
    value: function PROVIDES() {
      return this.getToken(GraphQLFederationParser.PROVIDES, 0);
    }
  }, {
    key: "LPAREN_F",
    value: function LPAREN_F() {
      return this.getToken(GraphQLFederationParser.LPAREN_F, 0);
    }
  }, {
    key: "FIELDS_KEYWORD",
    value: function FIELDS_KEYWORD() {
      return this.getToken(GraphQLFederationParser.FIELDS_KEYWORD, 0);
    }
  }, {
    key: "COLON_F",
    value: function COLON_F() {
      return this.getToken(GraphQLFederationParser.COLON_F, 0);
    }
  }, {
    key: "fieldSet",
    value: function fieldSet() {
      return this.getTypedRuleContext(FieldSetContext, 0);
    }
  }, {
    key: "RPAREN_F",
    value: function RPAREN_F() {
      return this.getToken(GraphQLFederationParser.RPAREN_F, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterProvidesDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitProvidesDirective(this);
      }
    }
  }]);

  return ProvidesDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var KeyDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon75) {
  _inherits(KeyDirectiveContext, _antlr4$ParserRuleCon75);

  var _super76 = _createSuper(KeyDirectiveContext);

  function KeyDirectiveContext(parser, parent, invokingState) {
    var _this76;

    _classCallCheck(this, KeyDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this76 = _super76.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this76), "COLON_F", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTokens(GraphQLFederationParser.COLON_F);
      } else {
        return this.getToken(GraphQLFederationParser.COLON_F, i);
      }
    });

    _defineProperty(_assertThisInitialized(_this76), "DQUOTE_F", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTokens(GraphQLFederationParser.DQUOTE_F);
      } else {
        return this.getToken(GraphQLFederationParser.DQUOTE_F, i);
      }
    });

    _this76.parser = parser;
    _this76.ruleIndex = GraphQLFederationParser.RULE_keyDirective;
    return _this76;
  }

  _createClass(KeyDirectiveContext, [{
    key: "KEY",
    value: function KEY() {
      return this.getToken(GraphQLFederationParser.KEY, 0);
    }
  }, {
    key: "LPAREN_F",
    value: function LPAREN_F() {
      return this.getToken(GraphQLFederationParser.LPAREN_F, 0);
    }
  }, {
    key: "FIELDS_KEYWORD",
    value: function FIELDS_KEYWORD() {
      return this.getToken(GraphQLFederationParser.FIELDS_KEYWORD, 0);
    }
  }, {
    key: "fieldSet",
    value: function fieldSet() {
      return this.getTypedRuleContext(FieldSetContext, 0);
    }
  }, {
    key: "RPAREN_F",
    value: function RPAREN_F() {
      return this.getToken(GraphQLFederationParser.RPAREN_F, 0);
    }
  }, {
    key: "RESOLVABLE_KEYWORD",
    value: function RESOLVABLE_KEYWORD() {
      return this.getToken(GraphQLFederationParser.RESOLVABLE_KEYWORD, 0);
    }
  }, {
    key: "booleanValue_f",
    value: function booleanValue_f() {
      return this.getTypedRuleContext(BooleanValue_fContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterKeyDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitKeyDirective(this);
      }
    }
  }]);

  return KeyDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var ShareableDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon76) {
  _inherits(ShareableDirectiveContext, _antlr4$ParserRuleCon76);

  var _super77 = _createSuper(ShareableDirectiveContext);

  function ShareableDirectiveContext(parser, parent, invokingState) {
    var _this77;

    _classCallCheck(this, ShareableDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this77 = _super77.call(this, parent, invokingState);
    _this77.parser = parser;
    _this77.ruleIndex = GraphQLFederationParser.RULE_shareableDirective;
    return _this77;
  }

  _createClass(ShareableDirectiveContext, [{
    key: "SHAREABLE",
    value: function SHAREABLE() {
      return this.getToken(GraphQLFederationParser.SHAREABLE, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterShareableDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitShareableDirective(this);
      }
    }
  }]);

  return ShareableDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var OverrideDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon77) {
  _inherits(OverrideDirectiveContext, _antlr4$ParserRuleCon77);

  var _super78 = _createSuper(OverrideDirectiveContext);

  function OverrideDirectiveContext(parser, parent, invokingState) {
    var _this78;

    _classCallCheck(this, OverrideDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this78 = _super78.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this78), "DQUOTE_F", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTokens(GraphQLFederationParser.DQUOTE_F);
      } else {
        return this.getToken(GraphQLFederationParser.DQUOTE_F, i);
      }
    });

    _this78.parser = parser;
    _this78.ruleIndex = GraphQLFederationParser.RULE_overrideDirective;
    return _this78;
  }

  _createClass(OverrideDirectiveContext, [{
    key: "OVERRIDE",
    value: function OVERRIDE() {
      return this.getToken(GraphQLFederationParser.OVERRIDE, 0);
    }
  }, {
    key: "LPAREN_F",
    value: function LPAREN_F() {
      return this.getToken(GraphQLFederationParser.LPAREN_F, 0);
    }
  }, {
    key: "FROM_KEYWORD",
    value: function FROM_KEYWORD() {
      return this.getToken(GraphQLFederationParser.FROM_KEYWORD, 0);
    }
  }, {
    key: "COLON_F",
    value: function COLON_F() {
      return this.getToken(GraphQLFederationParser.COLON_F, 0);
    }
  }, {
    key: "name_f",
    value: function name_f() {
      return this.getTypedRuleContext(Name_fContext, 0);
    }
  }, {
    key: "RPAREN_F",
    value: function RPAREN_F() {
      return this.getToken(GraphQLFederationParser.RPAREN_F, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterOverrideDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitOverrideDirective(this);
      }
    }
  }]);

  return OverrideDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var LinkDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon78) {
  _inherits(LinkDirectiveContext, _antlr4$ParserRuleCon78);

  var _super79 = _createSuper(LinkDirectiveContext);

  function LinkDirectiveContext(parser, parent, invokingState) {
    var _this79;

    _classCallCheck(this, LinkDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this79 = _super79.call(this, parent, invokingState);
    _this79.parser = parser;
    _this79.ruleIndex = GraphQLFederationParser.RULE_linkDirective;
    return _this79;
  }

  _createClass(LinkDirectiveContext, [{
    key: "LINK",
    value: function LINK() {
      return this.getToken(GraphQLFederationParser.LINK, 0);
    }
  }, {
    key: "STRING_LINK",
    value: function STRING_LINK() {
      return this.getToken(GraphQLFederationParser.STRING_LINK, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterLinkDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitLinkDirective(this);
      }
    }
  }]);

  return LinkDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var FieldSetContext = /*#__PURE__*/function (_antlr4$ParserRuleCon79) {
  _inherits(FieldSetContext, _antlr4$ParserRuleCon79);

  var _super80 = _createSuper(FieldSetContext);

  function FieldSetContext(parser, parent, invokingState) {
    var _this80;

    _classCallCheck(this, FieldSetContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this80 = _super80.call(this, parent, invokingState);

    _defineProperty(_assertThisInitialized(_this80), "fieldSetComponent", function (i) {
      if (i === undefined) {
        i = null;
      }

      if (i === null) {
        return this.getTypedRuleContexts(FieldSetComponentContext);
      } else {
        return this.getTypedRuleContext(FieldSetComponentContext, i);
      }
    });

    _this80.parser = parser;
    _this80.ruleIndex = GraphQLFederationParser.RULE_fieldSet;
    return _this80;
  }

  _createClass(FieldSetContext, [{
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterFieldSet(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitFieldSet(this);
      }
    }
  }]);

  return FieldSetContext;
}(_antlr["default"].ParserRuleContext);

var FieldSetComponentContext = /*#__PURE__*/function (_antlr4$ParserRuleCon80) {
  _inherits(FieldSetComponentContext, _antlr4$ParserRuleCon80);

  var _super81 = _createSuper(FieldSetComponentContext);

  function FieldSetComponentContext(parser, parent, invokingState) {
    var _this81;

    _classCallCheck(this, FieldSetComponentContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this81 = _super81.call(this, parent, invokingState);
    _this81.parser = parser;
    _this81.ruleIndex = GraphQLFederationParser.RULE_fieldSetComponent;
    return _this81;
  }

  _createClass(FieldSetComponentContext, [{
    key: "name_f",
    value: function name_f() {
      return this.getTypedRuleContext(Name_fContext, 0);
    }
  }, {
    key: "nestedFieldSet",
    value: function nestedFieldSet() {
      return this.getTypedRuleContext(NestedFieldSetContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterFieldSetComponent(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitFieldSetComponent(this);
      }
    }
  }]);

  return FieldSetComponentContext;
}(_antlr["default"].ParserRuleContext);

var NestedFieldSetContext = /*#__PURE__*/function (_antlr4$ParserRuleCon81) {
  _inherits(NestedFieldSetContext, _antlr4$ParserRuleCon81);

  var _super82 = _createSuper(NestedFieldSetContext);

  function NestedFieldSetContext(parser, parent, invokingState) {
    var _this82;

    _classCallCheck(this, NestedFieldSetContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this82 = _super82.call(this, parent, invokingState);
    _this82.parser = parser;
    _this82.ruleIndex = GraphQLFederationParser.RULE_nestedFieldSet;
    return _this82;
  }

  _createClass(NestedFieldSetContext, [{
    key: "LBRACE_F",
    value: function LBRACE_F() {
      return this.getToken(GraphQLFederationParser.LBRACE_F, 0);
    }
  }, {
    key: "fieldSet",
    value: function fieldSet() {
      return this.getTypedRuleContext(FieldSetContext, 0);
    }
  }, {
    key: "RBRACE_F",
    value: function RBRACE_F() {
      return this.getToken(GraphQLFederationParser.RBRACE_F, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterNestedFieldSet(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitNestedFieldSet(this);
      }
    }
  }]);

  return NestedFieldSetContext;
}(_antlr["default"].ParserRuleContext);

var SchemaDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon82) {
  _inherits(SchemaDirectiveContext, _antlr4$ParserRuleCon82);

  var _super83 = _createSuper(SchemaDirectiveContext);

  function SchemaDirectiveContext(parser, parent, invokingState) {
    var _this83;

    _classCallCheck(this, SchemaDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this83 = _super83.call(this, parent, invokingState);
    _this83.parser = parser;
    _this83.ruleIndex = GraphQLFederationParser.RULE_schemaDirective;
    return _this83;
  }

  _createClass(SchemaDirectiveContext, [{
    key: "directive",
    value: function directive() {
      return this.getTypedRuleContext(DirectiveContext, 0);
    }
  }, {
    key: "schemaFederationDirective",
    value: function schemaFederationDirective() {
      return this.getTypedRuleContext(SchemaFederationDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterSchemaDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitSchemaDirective(this);
      }
    }
  }]);

  return SchemaDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var SchemaFederationDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon83) {
  _inherits(SchemaFederationDirectiveContext, _antlr4$ParserRuleCon83);

  var _super84 = _createSuper(SchemaFederationDirectiveContext);

  function SchemaFederationDirectiveContext(parser, parent, invokingState) {
    var _this84;

    _classCallCheck(this, SchemaFederationDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this84 = _super84.call(this, parent, invokingState);
    _this84.parser = parser;
    _this84.ruleIndex = GraphQLFederationParser.RULE_schemaFederationDirective;
    return _this84;
  }

  _createClass(SchemaFederationDirectiveContext, [{
    key: "linkDirective",
    value: function linkDirective() {
      return this.getTypedRuleContext(LinkDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterSchemaFederationDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitSchemaFederationDirective(this);
      }
    }
  }]);

  return SchemaFederationDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var ScalarDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon84) {
  _inherits(ScalarDirectiveContext, _antlr4$ParserRuleCon84);

  var _super85 = _createSuper(ScalarDirectiveContext);

  function ScalarDirectiveContext(parser, parent, invokingState) {
    var _this85;

    _classCallCheck(this, ScalarDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this85 = _super85.call(this, parent, invokingState);
    _this85.parser = parser;
    _this85.ruleIndex = GraphQLFederationParser.RULE_scalarDirective;
    return _this85;
  }

  _createClass(ScalarDirectiveContext, [{
    key: "directive",
    value: function directive() {
      return this.getTypedRuleContext(DirectiveContext, 0);
    }
  }, {
    key: "scalarFederationDirective",
    value: function scalarFederationDirective() {
      return this.getTypedRuleContext(ScalarFederationDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterScalarDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitScalarDirective(this);
      }
    }
  }]);

  return ScalarDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var ScalarFederationDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon85) {
  _inherits(ScalarFederationDirectiveContext, _antlr4$ParserRuleCon85);

  var _super86 = _createSuper(ScalarFederationDirectiveContext);

  function ScalarFederationDirectiveContext(parser, parent, invokingState) {
    var _this86;

    _classCallCheck(this, ScalarFederationDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this86 = _super86.call(this, parent, invokingState);
    _this86.parser = parser;
    _this86.ruleIndex = GraphQLFederationParser.RULE_scalarFederationDirective;
    return _this86;
  }

  _createClass(ScalarFederationDirectiveContext, [{
    key: "inaccessibleDirective",
    value: function inaccessibleDirective() {
      return this.getTypedRuleContext(InaccessibleDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterScalarFederationDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitScalarFederationDirective(this);
      }
    }
  }]);

  return ScalarFederationDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var ObjectDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon86) {
  _inherits(ObjectDirectiveContext, _antlr4$ParserRuleCon86);

  var _super87 = _createSuper(ObjectDirectiveContext);

  function ObjectDirectiveContext(parser, parent, invokingState) {
    var _this87;

    _classCallCheck(this, ObjectDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this87 = _super87.call(this, parent, invokingState);
    _this87.parser = parser;
    _this87.ruleIndex = GraphQLFederationParser.RULE_objectDirective;
    return _this87;
  }

  _createClass(ObjectDirectiveContext, [{
    key: "directive",
    value: function directive() {
      return this.getTypedRuleContext(DirectiveContext, 0);
    }
  }, {
    key: "objectFederationDirective",
    value: function objectFederationDirective() {
      return this.getTypedRuleContext(ObjectFederationDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterObjectDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitObjectDirective(this);
      }
    }
  }]);

  return ObjectDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var ObjectFederationDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon87) {
  _inherits(ObjectFederationDirectiveContext, _antlr4$ParserRuleCon87);

  var _super88 = _createSuper(ObjectFederationDirectiveContext);

  function ObjectFederationDirectiveContext(parser, parent, invokingState) {
    var _this88;

    _classCallCheck(this, ObjectFederationDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this88 = _super88.call(this, parent, invokingState);
    _this88.parser = parser;
    _this88.ruleIndex = GraphQLFederationParser.RULE_objectFederationDirective;
    return _this88;
  }

  _createClass(ObjectFederationDirectiveContext, [{
    key: "keyDirective",
    value: function keyDirective() {
      return this.getTypedRuleContext(KeyDirectiveContext, 0);
    }
  }, {
    key: "shareableDirective",
    value: function shareableDirective() {
      return this.getTypedRuleContext(ShareableDirectiveContext, 0);
    }
  }, {
    key: "inaccessibleDirective",
    value: function inaccessibleDirective() {
      return this.getTypedRuleContext(InaccessibleDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterObjectFederationDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitObjectFederationDirective(this);
      }
    }
  }]);

  return ObjectFederationDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var InterfaceDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon88) {
  _inherits(InterfaceDirectiveContext, _antlr4$ParserRuleCon88);

  var _super89 = _createSuper(InterfaceDirectiveContext);

  function InterfaceDirectiveContext(parser, parent, invokingState) {
    var _this89;

    _classCallCheck(this, InterfaceDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this89 = _super89.call(this, parent, invokingState);
    _this89.parser = parser;
    _this89.ruleIndex = GraphQLFederationParser.RULE_interfaceDirective;
    return _this89;
  }

  _createClass(InterfaceDirectiveContext, [{
    key: "directive",
    value: function directive() {
      return this.getTypedRuleContext(DirectiveContext, 0);
    }
  }, {
    key: "interfaceFederationDirective",
    value: function interfaceFederationDirective() {
      return this.getTypedRuleContext(InterfaceFederationDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterInterfaceDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitInterfaceDirective(this);
      }
    }
  }]);

  return InterfaceDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var InterfaceFederationDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon89) {
  _inherits(InterfaceFederationDirectiveContext, _antlr4$ParserRuleCon89);

  var _super90 = _createSuper(InterfaceFederationDirectiveContext);

  function InterfaceFederationDirectiveContext(parser, parent, invokingState) {
    var _this90;

    _classCallCheck(this, InterfaceFederationDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this90 = _super90.call(this, parent, invokingState);
    _this90.parser = parser;
    _this90.ruleIndex = GraphQLFederationParser.RULE_interfaceFederationDirective;
    return _this90;
  }

  _createClass(InterfaceFederationDirectiveContext, [{
    key: "inaccessibleDirective",
    value: function inaccessibleDirective() {
      return this.getTypedRuleContext(InaccessibleDirectiveContext, 0);
    }
  }, {
    key: "keyDirective",
    value: function keyDirective() {
      return this.getTypedRuleContext(KeyDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterInterfaceFederationDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitInterfaceFederationDirective(this);
      }
    }
  }]);

  return InterfaceFederationDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var UnionDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon90) {
  _inherits(UnionDirectiveContext, _antlr4$ParserRuleCon90);

  var _super91 = _createSuper(UnionDirectiveContext);

  function UnionDirectiveContext(parser, parent, invokingState) {
    var _this91;

    _classCallCheck(this, UnionDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this91 = _super91.call(this, parent, invokingState);
    _this91.parser = parser;
    _this91.ruleIndex = GraphQLFederationParser.RULE_unionDirective;
    return _this91;
  }

  _createClass(UnionDirectiveContext, [{
    key: "directive",
    value: function directive() {
      return this.getTypedRuleContext(DirectiveContext, 0);
    }
  }, {
    key: "unionFederationDirective",
    value: function unionFederationDirective() {
      return this.getTypedRuleContext(UnionFederationDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterUnionDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitUnionDirective(this);
      }
    }
  }]);

  return UnionDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var UnionFederationDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon91) {
  _inherits(UnionFederationDirectiveContext, _antlr4$ParserRuleCon91);

  var _super92 = _createSuper(UnionFederationDirectiveContext);

  function UnionFederationDirectiveContext(parser, parent, invokingState) {
    var _this92;

    _classCallCheck(this, UnionFederationDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this92 = _super92.call(this, parent, invokingState);
    _this92.parser = parser;
    _this92.ruleIndex = GraphQLFederationParser.RULE_unionFederationDirective;
    return _this92;
  }

  _createClass(UnionFederationDirectiveContext, [{
    key: "inaccessibleDirective",
    value: function inaccessibleDirective() {
      return this.getTypedRuleContext(InaccessibleDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterUnionFederationDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitUnionFederationDirective(this);
      }
    }
  }]);

  return UnionFederationDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var EnumDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon92) {
  _inherits(EnumDirectiveContext, _antlr4$ParserRuleCon92);

  var _super93 = _createSuper(EnumDirectiveContext);

  function EnumDirectiveContext(parser, parent, invokingState) {
    var _this93;

    _classCallCheck(this, EnumDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this93 = _super93.call(this, parent, invokingState);
    _this93.parser = parser;
    _this93.ruleIndex = GraphQLFederationParser.RULE_enumDirective;
    return _this93;
  }

  _createClass(EnumDirectiveContext, [{
    key: "directive",
    value: function directive() {
      return this.getTypedRuleContext(DirectiveContext, 0);
    }
  }, {
    key: "enumFederationDirective",
    value: function enumFederationDirective() {
      return this.getTypedRuleContext(EnumFederationDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterEnumDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitEnumDirective(this);
      }
    }
  }]);

  return EnumDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var EnumFederationDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon93) {
  _inherits(EnumFederationDirectiveContext, _antlr4$ParserRuleCon93);

  var _super94 = _createSuper(EnumFederationDirectiveContext);

  function EnumFederationDirectiveContext(parser, parent, invokingState) {
    var _this94;

    _classCallCheck(this, EnumFederationDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this94 = _super94.call(this, parent, invokingState);
    _this94.parser = parser;
    _this94.ruleIndex = GraphQLFederationParser.RULE_enumFederationDirective;
    return _this94;
  }

  _createClass(EnumFederationDirectiveContext, [{
    key: "inaccessibleDirective",
    value: function inaccessibleDirective() {
      return this.getTypedRuleContext(InaccessibleDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterEnumFederationDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitEnumFederationDirective(this);
      }
    }
  }]);

  return EnumFederationDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var InputObjectDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon94) {
  _inherits(InputObjectDirectiveContext, _antlr4$ParserRuleCon94);

  var _super95 = _createSuper(InputObjectDirectiveContext);

  function InputObjectDirectiveContext(parser, parent, invokingState) {
    var _this95;

    _classCallCheck(this, InputObjectDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this95 = _super95.call(this, parent, invokingState);
    _this95.parser = parser;
    _this95.ruleIndex = GraphQLFederationParser.RULE_inputObjectDirective;
    return _this95;
  }

  _createClass(InputObjectDirectiveContext, [{
    key: "directive",
    value: function directive() {
      return this.getTypedRuleContext(DirectiveContext, 0);
    }
  }, {
    key: "inputObjectFederationDirective",
    value: function inputObjectFederationDirective() {
      return this.getTypedRuleContext(InputObjectFederationDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterInputObjectDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitInputObjectDirective(this);
      }
    }
  }]);

  return InputObjectDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var InputObjectFederationDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon95) {
  _inherits(InputObjectFederationDirectiveContext, _antlr4$ParserRuleCon95);

  var _super96 = _createSuper(InputObjectFederationDirectiveContext);

  function InputObjectFederationDirectiveContext(parser, parent, invokingState) {
    var _this96;

    _classCallCheck(this, InputObjectFederationDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this96 = _super96.call(this, parent, invokingState);
    _this96.parser = parser;
    _this96.ruleIndex = GraphQLFederationParser.RULE_inputObjectFederationDirective;
    return _this96;
  }

  _createClass(InputObjectFederationDirectiveContext, [{
    key: "inaccessibleDirective",
    value: function inaccessibleDirective() {
      return this.getTypedRuleContext(InaccessibleDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterInputObjectFederationDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitInputObjectFederationDirective(this);
      }
    }
  }]);

  return InputObjectFederationDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var InputValueDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon96) {
  _inherits(InputValueDirectiveContext, _antlr4$ParserRuleCon96);

  var _super97 = _createSuper(InputValueDirectiveContext);

  function InputValueDirectiveContext(parser, parent, invokingState) {
    var _this97;

    _classCallCheck(this, InputValueDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this97 = _super97.call(this, parent, invokingState);
    _this97.parser = parser;
    _this97.ruleIndex = GraphQLFederationParser.RULE_inputValueDirective;
    return _this97;
  }

  _createClass(InputValueDirectiveContext, [{
    key: "directive",
    value: function directive() {
      return this.getTypedRuleContext(DirectiveContext, 0);
    }
  }, {
    key: "inputFieldFederationDirective",
    value: function inputFieldFederationDirective() {
      return this.getTypedRuleContext(InputFieldFederationDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterInputValueDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitInputValueDirective(this);
      }
    }
  }]);

  return InputValueDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var InputFieldFederationDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon97) {
  _inherits(InputFieldFederationDirectiveContext, _antlr4$ParserRuleCon97);

  var _super98 = _createSuper(InputFieldFederationDirectiveContext);

  function InputFieldFederationDirectiveContext(parser, parent, invokingState) {
    var _this98;

    _classCallCheck(this, InputFieldFederationDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this98 = _super98.call(this, parent, invokingState);
    _this98.parser = parser;
    _this98.ruleIndex = GraphQLFederationParser.RULE_inputFieldFederationDirective;
    return _this98;
  }

  _createClass(InputFieldFederationDirectiveContext, [{
    key: "inaccessibleDirective",
    value: function inaccessibleDirective() {
      return this.getTypedRuleContext(InaccessibleDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterInputFieldFederationDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitInputFieldFederationDirective(this);
      }
    }
  }]);

  return InputFieldFederationDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var FieldDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon98) {
  _inherits(FieldDirectiveContext, _antlr4$ParserRuleCon98);

  var _super99 = _createSuper(FieldDirectiveContext);

  function FieldDirectiveContext(parser, parent, invokingState) {
    var _this99;

    _classCallCheck(this, FieldDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this99 = _super99.call(this, parent, invokingState);
    _this99.parser = parser;
    _this99.ruleIndex = GraphQLFederationParser.RULE_fieldDirective;
    return _this99;
  }

  _createClass(FieldDirectiveContext, [{
    key: "directive",
    value: function directive() {
      return this.getTypedRuleContext(DirectiveContext, 0);
    }
  }, {
    key: "fieldFederationDirective",
    value: function fieldFederationDirective() {
      return this.getTypedRuleContext(FieldFederationDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterFieldDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitFieldDirective(this);
      }
    }
  }]);

  return FieldDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var FieldFederationDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon99) {
  _inherits(FieldFederationDirectiveContext, _antlr4$ParserRuleCon99);

  var _super100 = _createSuper(FieldFederationDirectiveContext);

  function FieldFederationDirectiveContext(parser, parent, invokingState) {
    var _this100;

    _classCallCheck(this, FieldFederationDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this100 = _super100.call(this, parent, invokingState);
    _this100.parser = parser;
    _this100.ruleIndex = GraphQLFederationParser.RULE_fieldFederationDirective;
    return _this100;
  }

  _createClass(FieldFederationDirectiveContext, [{
    key: "externalDirective",
    value: function externalDirective() {
      return this.getTypedRuleContext(ExternalDirectiveContext, 0);
    }
  }, {
    key: "requiresDirective",
    value: function requiresDirective() {
      return this.getTypedRuleContext(RequiresDirectiveContext, 0);
    }
  }, {
    key: "providesDirective",
    value: function providesDirective() {
      return this.getTypedRuleContext(ProvidesDirectiveContext, 0);
    }
  }, {
    key: "shareableDirective",
    value: function shareableDirective() {
      return this.getTypedRuleContext(ShareableDirectiveContext, 0);
    }
  }, {
    key: "inaccessibleDirective",
    value: function inaccessibleDirective() {
      return this.getTypedRuleContext(InaccessibleDirectiveContext, 0);
    }
  }, {
    key: "overrideDirective",
    value: function overrideDirective() {
      return this.getTypedRuleContext(OverrideDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterFieldFederationDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitFieldFederationDirective(this);
      }
    }
  }]);

  return FieldFederationDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var EnumValueDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon100) {
  _inherits(EnumValueDirectiveContext, _antlr4$ParserRuleCon100);

  var _super101 = _createSuper(EnumValueDirectiveContext);

  function EnumValueDirectiveContext(parser, parent, invokingState) {
    var _this101;

    _classCallCheck(this, EnumValueDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this101 = _super101.call(this, parent, invokingState);
    _this101.parser = parser;
    _this101.ruleIndex = GraphQLFederationParser.RULE_enumValueDirective;
    return _this101;
  }

  _createClass(EnumValueDirectiveContext, [{
    key: "directive",
    value: function directive() {
      return this.getTypedRuleContext(DirectiveContext, 0);
    }
  }, {
    key: "enumValueFederationDirective",
    value: function enumValueFederationDirective() {
      return this.getTypedRuleContext(EnumValueFederationDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterEnumValueDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitEnumValueDirective(this);
      }
    }
  }]);

  return EnumValueDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var EnumValueFederationDirectiveContext = /*#__PURE__*/function (_antlr4$ParserRuleCon101) {
  _inherits(EnumValueFederationDirectiveContext, _antlr4$ParserRuleCon101);

  var _super102 = _createSuper(EnumValueFederationDirectiveContext);

  function EnumValueFederationDirectiveContext(parser, parent, invokingState) {
    var _this102;

    _classCallCheck(this, EnumValueFederationDirectiveContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this102 = _super102.call(this, parent, invokingState);
    _this102.parser = parser;
    _this102.ruleIndex = GraphQLFederationParser.RULE_enumValueFederationDirective;
    return _this102;
  }

  _createClass(EnumValueFederationDirectiveContext, [{
    key: "inaccessibleDirective",
    value: function inaccessibleDirective() {
      return this.getTypedRuleContext(InaccessibleDirectiveContext, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterEnumValueFederationDirective(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitEnumValueFederationDirective(this);
      }
    }
  }]);

  return EnumValueFederationDirectiveContext;
}(_antlr["default"].ParserRuleContext);

var NameContext = /*#__PURE__*/function (_antlr4$ParserRuleCon102) {
  _inherits(NameContext, _antlr4$ParserRuleCon102);

  var _super103 = _createSuper(NameContext);

  function NameContext(parser, parent, invokingState) {
    var _this103;

    _classCallCheck(this, NameContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this103 = _super103.call(this, parent, invokingState);
    _this103.parser = parser;
    _this103.ruleIndex = GraphQLFederationParser.RULE_name;
    return _this103;
  }

  _createClass(NameContext, [{
    key: "keyword",
    value: function keyword() {
      return this.getTypedRuleContext(KeywordContext, 0);
    }
  }, {
    key: "NAME",
    value: function NAME() {
      return this.getToken(GraphQLFederationParser.NAME, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterName(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitName(this);
      }
    }
  }]);

  return NameContext;
}(_antlr["default"].ParserRuleContext);

var Name_fContext = /*#__PURE__*/function (_antlr4$ParserRuleCon103) {
  _inherits(Name_fContext, _antlr4$ParserRuleCon103);

  var _super104 = _createSuper(Name_fContext);

  function Name_fContext(parser, parent, invokingState) {
    var _this104;

    _classCallCheck(this, Name_fContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this104 = _super104.call(this, parent, invokingState);
    _this104.parser = parser;
    _this104.ruleIndex = GraphQLFederationParser.RULE_name_f;
    return _this104;
  }

  _createClass(Name_fContext, [{
    key: "keyword_f",
    value: function keyword_f() {
      return this.getTypedRuleContext(Keyword_fContext, 0);
    }
  }, {
    key: "NAME_F",
    value: function NAME_F() {
      return this.getToken(GraphQLFederationParser.NAME_F, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterName_f(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitName_f(this);
      }
    }
  }]);

  return Name_fContext;
}(_antlr["default"].ParserRuleContext);

var BooleanValue_fContext = /*#__PURE__*/function (_antlr4$ParserRuleCon104) {
  _inherits(BooleanValue_fContext, _antlr4$ParserRuleCon104);

  var _super105 = _createSuper(BooleanValue_fContext);

  function BooleanValue_fContext(parser, parent, invokingState) {
    var _this105;

    _classCallCheck(this, BooleanValue_fContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this105 = _super105.call(this, parent, invokingState);
    _this105.parser = parser;
    _this105.ruleIndex = GraphQLFederationParser.RULE_booleanValue_f;
    return _this105;
  }

  _createClass(BooleanValue_fContext, [{
    key: "TRUE_F",
    value: function TRUE_F() {
      return this.getToken(GraphQLFederationParser.TRUE_F, 0);
    }
  }, {
    key: "FALSE_F",
    value: function FALSE_F() {
      return this.getToken(GraphQLFederationParser.FALSE_F, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterBooleanValue_f(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitBooleanValue_f(this);
      }
    }
  }]);

  return BooleanValue_fContext;
}(_antlr["default"].ParserRuleContext);

var KeywordContext = /*#__PURE__*/function (_antlr4$ParserRuleCon105) {
  _inherits(KeywordContext, _antlr4$ParserRuleCon105);

  var _super106 = _createSuper(KeywordContext);

  function KeywordContext(parser, parent, invokingState) {
    var _this106;

    _classCallCheck(this, KeywordContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this106 = _super106.call(this, parent, invokingState);
    _this106.parser = parser;
    _this106.ruleIndex = GraphQLFederationParser.RULE_keyword;
    return _this106;
  }

  _createClass(KeywordContext, [{
    key: "INPUT_KEYWORD",
    value: function INPUT_KEYWORD() {
      return this.getToken(GraphQLFederationParser.INPUT_KEYWORD, 0);
    }
  }, {
    key: "TYPE_KEYWORD",
    value: function TYPE_KEYWORD() {
      return this.getToken(GraphQLFederationParser.TYPE_KEYWORD, 0);
    }
  }, {
    key: "ENUM_KEYWORD",
    value: function ENUM_KEYWORD() {
      return this.getToken(GraphQLFederationParser.ENUM_KEYWORD, 0);
    }
  }, {
    key: "SCALAR_KEYWORD",
    value: function SCALAR_KEYWORD() {
      return this.getToken(GraphQLFederationParser.SCALAR_KEYWORD, 0);
    }
  }, {
    key: "INTERFACE_KEYWORD",
    value: function INTERFACE_KEYWORD() {
      return this.getToken(GraphQLFederationParser.INTERFACE_KEYWORD, 0);
    }
  }, {
    key: "DIRECTIVE_KEYWORD",
    value: function DIRECTIVE_KEYWORD() {
      return this.getToken(GraphQLFederationParser.DIRECTIVE_KEYWORD, 0);
    }
  }, {
    key: "EXTEND_KEYWORD",
    value: function EXTEND_KEYWORD() {
      return this.getToken(GraphQLFederationParser.EXTEND_KEYWORD, 0);
    }
  }, {
    key: "UNION_KEYWORD",
    value: function UNION_KEYWORD() {
      return this.getToken(GraphQLFederationParser.UNION_KEYWORD, 0);
    }
  }, {
    key: "IMPLEMENTS_KEYWORD",
    value: function IMPLEMENTS_KEYWORD() {
      return this.getToken(GraphQLFederationParser.IMPLEMENTS_KEYWORD, 0);
    }
  }, {
    key: "QUERY_KEYWORD",
    value: function QUERY_KEYWORD() {
      return this.getToken(GraphQLFederationParser.QUERY_KEYWORD, 0);
    }
  }, {
    key: "MUTATION_KEYWORD",
    value: function MUTATION_KEYWORD() {
      return this.getToken(GraphQLFederationParser.MUTATION_KEYWORD, 0);
    }
  }, {
    key: "SUBSCRIPTION_KEYWORD",
    value: function SUBSCRIPTION_KEYWORD() {
      return this.getToken(GraphQLFederationParser.SUBSCRIPTION_KEYWORD, 0);
    }
  }, {
    key: "SCHEMA_KEYWORD",
    value: function SCHEMA_KEYWORD() {
      return this.getToken(GraphQLFederationParser.SCHEMA_KEYWORD, 0);
    }
  }, {
    key: "FRAGMENT_KEYWORD",
    value: function FRAGMENT_KEYWORD() {
      return this.getToken(GraphQLFederationParser.FRAGMENT_KEYWORD, 0);
    }
  }, {
    key: "FIELDS_KEYWORD",
    value: function FIELDS_KEYWORD() {
      return this.getToken(GraphQLFederationParser.FIELDS_KEYWORD, 0);
    }
  }, {
    key: "FROM_KEYWORD",
    value: function FROM_KEYWORD() {
      return this.getToken(GraphQLFederationParser.FROM_KEYWORD, 0);
    }
  }, {
    key: "RESOLVABLE_KEYWORD",
    value: function RESOLVABLE_KEYWORD() {
      return this.getToken(GraphQLFederationParser.RESOLVABLE_KEYWORD, 0);
    }
  }, {
    key: "ON_KEYWORD",
    value: function ON_KEYWORD() {
      return this.getToken(GraphQLFederationParser.ON_KEYWORD, 0);
    }
  }, {
    key: "REPEATABLE_KEYWORD",
    value: function REPEATABLE_KEYWORD() {
      return this.getToken(GraphQLFederationParser.REPEATABLE_KEYWORD, 0);
    }
  }, {
    key: "INPUT_LOCATION",
    value: function INPUT_LOCATION() {
      return this.getToken(GraphQLFederationParser.INPUT_LOCATION, 0);
    }
  }, {
    key: "TYPE_LOCATION",
    value: function TYPE_LOCATION() {
      return this.getToken(GraphQLFederationParser.TYPE_LOCATION, 0);
    }
  }, {
    key: "ENUM_LOCATION",
    value: function ENUM_LOCATION() {
      return this.getToken(GraphQLFederationParser.ENUM_LOCATION, 0);
    }
  }, {
    key: "SCALAR_LOCATION",
    value: function SCALAR_LOCATION() {
      return this.getToken(GraphQLFederationParser.SCALAR_LOCATION, 0);
    }
  }, {
    key: "INTERFACE_LOCATION",
    value: function INTERFACE_LOCATION() {
      return this.getToken(GraphQLFederationParser.INTERFACE_LOCATION, 0);
    }
  }, {
    key: "DIRECTIVE_LOCATION",
    value: function DIRECTIVE_LOCATION() {
      return this.getToken(GraphQLFederationParser.DIRECTIVE_LOCATION, 0);
    }
  }, {
    key: "EXTEND_LOCATION",
    value: function EXTEND_LOCATION() {
      return this.getToken(GraphQLFederationParser.EXTEND_LOCATION, 0);
    }
  }, {
    key: "UNION_LOCATION",
    value: function UNION_LOCATION() {
      return this.getToken(GraphQLFederationParser.UNION_LOCATION, 0);
    }
  }, {
    key: "IMPLEMENTS_LOCATION",
    value: function IMPLEMENTS_LOCATION() {
      return this.getToken(GraphQLFederationParser.IMPLEMENTS_LOCATION, 0);
    }
  }, {
    key: "QUERY_LOCATION",
    value: function QUERY_LOCATION() {
      return this.getToken(GraphQLFederationParser.QUERY_LOCATION, 0);
    }
  }, {
    key: "MUTATION_LOCATION",
    value: function MUTATION_LOCATION() {
      return this.getToken(GraphQLFederationParser.MUTATION_LOCATION, 0);
    }
  }, {
    key: "SUBSCRIPTION_LOCATION",
    value: function SUBSCRIPTION_LOCATION() {
      return this.getToken(GraphQLFederationParser.SUBSCRIPTION_LOCATION, 0);
    }
  }, {
    key: "SCHEMA_LOCATION",
    value: function SCHEMA_LOCATION() {
      return this.getToken(GraphQLFederationParser.SCHEMA_LOCATION, 0);
    }
  }, {
    key: "FRAGMENT_LOCATION",
    value: function FRAGMENT_LOCATION() {
      return this.getToken(GraphQLFederationParser.FRAGMENT_LOCATION, 0);
    }
  }, {
    key: "FIELD_LOCATION",
    value: function FIELD_LOCATION() {
      return this.getToken(GraphQLFederationParser.FIELD_LOCATION, 0);
    }
  }, {
    key: "FRAGMENT_DEFINITION_LOCATION",
    value: function FRAGMENT_DEFINITION_LOCATION() {
      return this.getToken(GraphQLFederationParser.FRAGMENT_DEFINITION_LOCATION, 0);
    }
  }, {
    key: "FRAGMENT_SPREAD_LOCATION",
    value: function FRAGMENT_SPREAD_LOCATION() {
      return this.getToken(GraphQLFederationParser.FRAGMENT_SPREAD_LOCATION, 0);
    }
  }, {
    key: "INLINE_FRAGMENT_LOCATION",
    value: function INLINE_FRAGMENT_LOCATION() {
      return this.getToken(GraphQLFederationParser.INLINE_FRAGMENT_LOCATION, 0);
    }
  }, {
    key: "VARIABLE_DEFINITION_LOCATION",
    value: function VARIABLE_DEFINITION_LOCATION() {
      return this.getToken(GraphQLFederationParser.VARIABLE_DEFINITION_LOCATION, 0);
    }
  }, {
    key: "OBJECT_LOCATION",
    value: function OBJECT_LOCATION() {
      return this.getToken(GraphQLFederationParser.OBJECT_LOCATION, 0);
    }
  }, {
    key: "FIELD_DEFINITION_LOCATION",
    value: function FIELD_DEFINITION_LOCATION() {
      return this.getToken(GraphQLFederationParser.FIELD_DEFINITION_LOCATION, 0);
    }
  }, {
    key: "ARGUMENT_DEFINITION_LOCATION",
    value: function ARGUMENT_DEFINITION_LOCATION() {
      return this.getToken(GraphQLFederationParser.ARGUMENT_DEFINITION_LOCATION, 0);
    }
  }, {
    key: "ENUM_VALUE_LOCATION",
    value: function ENUM_VALUE_LOCATION() {
      return this.getToken(GraphQLFederationParser.ENUM_VALUE_LOCATION, 0);
    }
  }, {
    key: "INPUT_OBJECT_LOCATION",
    value: function INPUT_OBJECT_LOCATION() {
      return this.getToken(GraphQLFederationParser.INPUT_OBJECT_LOCATION, 0);
    }
  }, {
    key: "INPUT_FIELD_DEFINITION_LOCATION",
    value: function INPUT_FIELD_DEFINITION_LOCATION() {
      return this.getToken(GraphQLFederationParser.INPUT_FIELD_DEFINITION_LOCATION, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterKeyword(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitKeyword(this);
      }
    }
  }]);

  return KeywordContext;
}(_antlr["default"].ParserRuleContext);

var Keyword_fContext = /*#__PURE__*/function (_antlr4$ParserRuleCon106) {
  _inherits(Keyword_fContext, _antlr4$ParserRuleCon106);

  var _super107 = _createSuper(Keyword_fContext);

  function Keyword_fContext(parser, parent, invokingState) {
    var _this107;

    _classCallCheck(this, Keyword_fContext);

    if (parent === undefined) {
      parent = null;
    }

    if (invokingState === undefined || invokingState === null) {
      invokingState = -1;
    }

    _this107 = _super107.call(this, parent, invokingState);
    _this107.parser = parser;
    _this107.ruleIndex = GraphQLFederationParser.RULE_keyword_f;
    return _this107;
  }

  _createClass(Keyword_fContext, [{
    key: "INPUT_KEYWORD_F",
    value: function INPUT_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.INPUT_KEYWORD_F, 0);
    }
  }, {
    key: "TYPE_KEYWORD_F",
    value: function TYPE_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.TYPE_KEYWORD_F, 0);
    }
  }, {
    key: "ENUM_KEYWORD_F",
    value: function ENUM_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.ENUM_KEYWORD_F, 0);
    }
  }, {
    key: "SCALAR_KEYWORD_F",
    value: function SCALAR_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.SCALAR_KEYWORD_F, 0);
    }
  }, {
    key: "INTERFACE_KEYWORD_F",
    value: function INTERFACE_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.INTERFACE_KEYWORD_F, 0);
    }
  }, {
    key: "DIRECTIVE_KEYWORD_F",
    value: function DIRECTIVE_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.DIRECTIVE_KEYWORD_F, 0);
    }
  }, {
    key: "EXTEND_KEYWORD_F",
    value: function EXTEND_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.EXTEND_KEYWORD_F, 0);
    }
  }, {
    key: "UNION_KEYWORD_F",
    value: function UNION_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.UNION_KEYWORD_F, 0);
    }
  }, {
    key: "IMPLEMENTS_KEYWORD_F",
    value: function IMPLEMENTS_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.IMPLEMENTS_KEYWORD_F, 0);
    }
  }, {
    key: "QUERY_KEYWORD_F",
    value: function QUERY_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.QUERY_KEYWORD_F, 0);
    }
  }, {
    key: "MUTATION_KEYWORD_F",
    value: function MUTATION_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.MUTATION_KEYWORD_F, 0);
    }
  }, {
    key: "SUBSCRIPTION_KEYWORD_F",
    value: function SUBSCRIPTION_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.SUBSCRIPTION_KEYWORD_F, 0);
    }
  }, {
    key: "SCHEMA_KEYWORD_F",
    value: function SCHEMA_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.SCHEMA_KEYWORD_F, 0);
    }
  }, {
    key: "FRAGMENT_KEYWORD_F",
    value: function FRAGMENT_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.FRAGMENT_KEYWORD_F, 0);
    }
  }, {
    key: "ON_KEYWORD_F",
    value: function ON_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.ON_KEYWORD_F, 0);
    }
  }, {
    key: "REPEATABLE_KEYWORD_F",
    value: function REPEATABLE_KEYWORD_F() {
      return this.getToken(GraphQLFederationParser.REPEATABLE_KEYWORD_F, 0);
    }
  }, {
    key: "enterRule",
    value: function enterRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.enterKeyword_f(this);
      }
    }
  }, {
    key: "exitRule",
    value: function exitRule(listener) {
      if (listener instanceof _GraphQLFederationParserListener["default"]) {
        listener.exitKeyword_f(this);
      }
    }
  }]);

  return Keyword_fContext;
}(_antlr["default"].ParserRuleContext);

GraphQLFederationParser.DocumentContext = DocumentContext;
GraphQLFederationParser.DefinitionContext = DefinitionContext;
GraphQLFederationParser.ExecutableDefinitionContext = ExecutableDefinitionContext;
GraphQLFederationParser.OperationDefinitionContext = OperationDefinitionContext;
GraphQLFederationParser.OperationTypeContext = OperationTypeContext;
GraphQLFederationParser.SelectionSetContext = SelectionSetContext;
GraphQLFederationParser.SelectionContext = SelectionContext;
GraphQLFederationParser.FieldContext = FieldContext;
GraphQLFederationParser.ArgumentsContext = ArgumentsContext;
GraphQLFederationParser.ArgumentContext = ArgumentContext;
GraphQLFederationParser.AliasContext = AliasContext;
GraphQLFederationParser.FragmentSpreadContext = FragmentSpreadContext;
GraphQLFederationParser.FragmentDefinitionContext = FragmentDefinitionContext;
GraphQLFederationParser.FragmentNameContext = FragmentNameContext;
GraphQLFederationParser.TypeConditionContext = TypeConditionContext;
GraphQLFederationParser.InlineFragmentContext = InlineFragmentContext;
GraphQLFederationParser.ValueContext = ValueContext;
GraphQLFederationParser.IntValueContext = IntValueContext;
GraphQLFederationParser.FloatValueContext = FloatValueContext;
GraphQLFederationParser.BooleanValueContext = BooleanValueContext;
GraphQLFederationParser.StringValueContext = StringValueContext;
GraphQLFederationParser.NullValueContext = NullValueContext;
GraphQLFederationParser.EnumValueContext = EnumValueContext;
GraphQLFederationParser.ListValueContext = ListValueContext;
GraphQLFederationParser.ObjectValueContext = ObjectValueContext;
GraphQLFederationParser.ObjectFieldContext = ObjectFieldContext;
GraphQLFederationParser.VariableContext = VariableContext;
GraphQLFederationParser.VariableDefinitionsContext = VariableDefinitionsContext;
GraphQLFederationParser.VariableDefinitionContext = VariableDefinitionContext;
GraphQLFederationParser.DefaultValueContext = DefaultValueContext;
GraphQLFederationParser.Type_Context = Type_Context;
GraphQLFederationParser.NamedTypeContext = NamedTypeContext;
GraphQLFederationParser.ListTypeContext = ListTypeContext;
GraphQLFederationParser.DirectivesContext = DirectivesContext;
GraphQLFederationParser.DirectiveContext = DirectiveContext;
GraphQLFederationParser.TypeSystemDefinitionContext = TypeSystemDefinitionContext;
GraphQLFederationParser.TypeSystemExtensionContext = TypeSystemExtensionContext;
GraphQLFederationParser.SchemaDefinitionContext = SchemaDefinitionContext;
GraphQLFederationParser.RootOperationTypeDefinitionContext = RootOperationTypeDefinitionContext;
GraphQLFederationParser.SchemaExtensionContext = SchemaExtensionContext;
GraphQLFederationParser.OperationTypeDefinitionContext = OperationTypeDefinitionContext;
GraphQLFederationParser.DescriptionContext = DescriptionContext;
GraphQLFederationParser.TypeDefinitionContext = TypeDefinitionContext;
GraphQLFederationParser.TypeExtensionContext = TypeExtensionContext;
GraphQLFederationParser.ScalarTypeDefinitionContext = ScalarTypeDefinitionContext;
GraphQLFederationParser.ScalarTypeExtensionContext = ScalarTypeExtensionContext;
GraphQLFederationParser.ObjectTypeDefinitionContext = ObjectTypeDefinitionContext;
GraphQLFederationParser.ImplementsInterfacesContext = ImplementsInterfacesContext;
GraphQLFederationParser.FieldsDefinitionContext = FieldsDefinitionContext;
GraphQLFederationParser.FieldDefinitionContext = FieldDefinitionContext;
GraphQLFederationParser.ArgumentsDefinitionContext = ArgumentsDefinitionContext;
GraphQLFederationParser.InputValueDefinitionContext = InputValueDefinitionContext;
GraphQLFederationParser.ObjectTypeExtensionContext = ObjectTypeExtensionContext;
GraphQLFederationParser.InterfaceTypeDefinitionContext = InterfaceTypeDefinitionContext;
GraphQLFederationParser.InterfaceTypeExtensionContext = InterfaceTypeExtensionContext;
GraphQLFederationParser.UnionTypeDefinitionContext = UnionTypeDefinitionContext;
GraphQLFederationParser.UnionMemberTypesContext = UnionMemberTypesContext;
GraphQLFederationParser.UnionTypeExtensionContext = UnionTypeExtensionContext;
GraphQLFederationParser.EnumTypeDefinitionContext = EnumTypeDefinitionContext;
GraphQLFederationParser.EnumValuesDefinitionContext = EnumValuesDefinitionContext;
GraphQLFederationParser.EnumValueDefinitionContext = EnumValueDefinitionContext;
GraphQLFederationParser.EnumTypeExtensionContext = EnumTypeExtensionContext;
GraphQLFederationParser.InputObjectTypeDefinitionContext = InputObjectTypeDefinitionContext;
GraphQLFederationParser.InputFieldsDefinitionContext = InputFieldsDefinitionContext;
GraphQLFederationParser.InputObjectTypeExtensionContext = InputObjectTypeExtensionContext;
GraphQLFederationParser.DirectiveDefinitionContext = DirectiveDefinitionContext;
GraphQLFederationParser.DirectiveLocationsContext = DirectiveLocationsContext;
GraphQLFederationParser.DirectiveLocationContext = DirectiveLocationContext;
GraphQLFederationParser.ExecutableDirectiveLocationContext = ExecutableDirectiveLocationContext;
GraphQLFederationParser.TypeSystemDirectiveLocationContext = TypeSystemDirectiveLocationContext;
GraphQLFederationParser.ExternalDirectiveContext = ExternalDirectiveContext;
GraphQLFederationParser.InaccessibleDirectiveContext = InaccessibleDirectiveContext;
GraphQLFederationParser.RequiresDirectiveContext = RequiresDirectiveContext;
GraphQLFederationParser.ProvidesDirectiveContext = ProvidesDirectiveContext;
GraphQLFederationParser.KeyDirectiveContext = KeyDirectiveContext;
GraphQLFederationParser.ShareableDirectiveContext = ShareableDirectiveContext;
GraphQLFederationParser.OverrideDirectiveContext = OverrideDirectiveContext;
GraphQLFederationParser.LinkDirectiveContext = LinkDirectiveContext;
GraphQLFederationParser.FieldSetContext = FieldSetContext;
GraphQLFederationParser.FieldSetComponentContext = FieldSetComponentContext;
GraphQLFederationParser.NestedFieldSetContext = NestedFieldSetContext;
GraphQLFederationParser.SchemaDirectiveContext = SchemaDirectiveContext;
GraphQLFederationParser.SchemaFederationDirectiveContext = SchemaFederationDirectiveContext;
GraphQLFederationParser.ScalarDirectiveContext = ScalarDirectiveContext;
GraphQLFederationParser.ScalarFederationDirectiveContext = ScalarFederationDirectiveContext;
GraphQLFederationParser.ObjectDirectiveContext = ObjectDirectiveContext;
GraphQLFederationParser.ObjectFederationDirectiveContext = ObjectFederationDirectiveContext;
GraphQLFederationParser.InterfaceDirectiveContext = InterfaceDirectiveContext;
GraphQLFederationParser.InterfaceFederationDirectiveContext = InterfaceFederationDirectiveContext;
GraphQLFederationParser.UnionDirectiveContext = UnionDirectiveContext;
GraphQLFederationParser.UnionFederationDirectiveContext = UnionFederationDirectiveContext;
GraphQLFederationParser.EnumDirectiveContext = EnumDirectiveContext;
GraphQLFederationParser.EnumFederationDirectiveContext = EnumFederationDirectiveContext;
GraphQLFederationParser.InputObjectDirectiveContext = InputObjectDirectiveContext;
GraphQLFederationParser.InputObjectFederationDirectiveContext = InputObjectFederationDirectiveContext;
GraphQLFederationParser.InputValueDirectiveContext = InputValueDirectiveContext;
GraphQLFederationParser.InputFieldFederationDirectiveContext = InputFieldFederationDirectiveContext;
GraphQLFederationParser.FieldDirectiveContext = FieldDirectiveContext;
GraphQLFederationParser.FieldFederationDirectiveContext = FieldFederationDirectiveContext;
GraphQLFederationParser.EnumValueDirectiveContext = EnumValueDirectiveContext;
GraphQLFederationParser.EnumValueFederationDirectiveContext = EnumValueFederationDirectiveContext;
GraphQLFederationParser.NameContext = NameContext;
GraphQLFederationParser.Name_fContext = Name_fContext;
GraphQLFederationParser.BooleanValue_fContext = BooleanValue_fContext;
GraphQLFederationParser.KeywordContext = KeywordContext;
GraphQLFederationParser.Keyword_fContext = Keyword_fContext;

