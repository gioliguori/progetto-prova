"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _antlr = _interopRequireDefault(require("antlr4"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

// This class defines a complete listener for a parse tree produced by GraphQLParser.
var GraphQLListener = /*#__PURE__*/function (_antlr4$tree$ParseTre) {
  _inherits(GraphQLListener, _antlr4$tree$ParseTre);

  var _super = _createSuper(GraphQLListener);

  function GraphQLListener() {
    _classCallCheck(this, GraphQLListener);

    return _super.apply(this, arguments);
  }

  _createClass(GraphQLListener, [{
    key: "enterDocument",
    value: // Enter a parse tree produced by GraphQLParser#document.
    function enterDocument(ctx) {} // Exit a parse tree produced by GraphQLParser#document.

  }, {
    key: "exitDocument",
    value: function exitDocument(ctx) {} // Enter a parse tree produced by GraphQLParser#definition.

  }, {
    key: "enterDefinition",
    value: function enterDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#definition.

  }, {
    key: "exitDefinition",
    value: function exitDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#executableDefinition.

  }, {
    key: "enterExecutableDefinition",
    value: function enterExecutableDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#executableDefinition.

  }, {
    key: "exitExecutableDefinition",
    value: function exitExecutableDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#operationDefinition.

  }, {
    key: "enterOperationDefinition",
    value: function enterOperationDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#operationDefinition.

  }, {
    key: "exitOperationDefinition",
    value: function exitOperationDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#operationType.

  }, {
    key: "enterOperationType",
    value: function enterOperationType(ctx) {} // Exit a parse tree produced by GraphQLParser#operationType.

  }, {
    key: "exitOperationType",
    value: function exitOperationType(ctx) {} // Enter a parse tree produced by GraphQLParser#selectionSet.

  }, {
    key: "enterSelectionSet",
    value: function enterSelectionSet(ctx) {} // Exit a parse tree produced by GraphQLParser#selectionSet.

  }, {
    key: "exitSelectionSet",
    value: function exitSelectionSet(ctx) {} // Enter a parse tree produced by GraphQLParser#selection.

  }, {
    key: "enterSelection",
    value: function enterSelection(ctx) {} // Exit a parse tree produced by GraphQLParser#selection.

  }, {
    key: "exitSelection",
    value: function exitSelection(ctx) {} // Enter a parse tree produced by GraphQLParser#field.

  }, {
    key: "enterField",
    value: function enterField(ctx) {} // Exit a parse tree produced by GraphQLParser#field.

  }, {
    key: "exitField",
    value: function exitField(ctx) {} // Enter a parse tree produced by GraphQLParser#arguments.

  }, {
    key: "enterArguments",
    value: function enterArguments(ctx) {} // Exit a parse tree produced by GraphQLParser#arguments.

  }, {
    key: "exitArguments",
    value: function exitArguments(ctx) {} // Enter a parse tree produced by GraphQLParser#argument.

  }, {
    key: "enterArgument",
    value: function enterArgument(ctx) {} // Exit a parse tree produced by GraphQLParser#argument.

  }, {
    key: "exitArgument",
    value: function exitArgument(ctx) {} // Enter a parse tree produced by GraphQLParser#alias.

  }, {
    key: "enterAlias",
    value: function enterAlias(ctx) {} // Exit a parse tree produced by GraphQLParser#alias.

  }, {
    key: "exitAlias",
    value: function exitAlias(ctx) {} // Enter a parse tree produced by GraphQLParser#fragmentSpread.

  }, {
    key: "enterFragmentSpread",
    value: function enterFragmentSpread(ctx) {} // Exit a parse tree produced by GraphQLParser#fragmentSpread.

  }, {
    key: "exitFragmentSpread",
    value: function exitFragmentSpread(ctx) {} // Enter a parse tree produced by GraphQLParser#fragmentDefinition.

  }, {
    key: "enterFragmentDefinition",
    value: function enterFragmentDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#fragmentDefinition.

  }, {
    key: "exitFragmentDefinition",
    value: function exitFragmentDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#fragmentName.

  }, {
    key: "enterFragmentName",
    value: function enterFragmentName(ctx) {} // Exit a parse tree produced by GraphQLParser#fragmentName.

  }, {
    key: "exitFragmentName",
    value: function exitFragmentName(ctx) {} // Enter a parse tree produced by GraphQLParser#typeCondition.

  }, {
    key: "enterTypeCondition",
    value: function enterTypeCondition(ctx) {} // Exit a parse tree produced by GraphQLParser#typeCondition.

  }, {
    key: "exitTypeCondition",
    value: function exitTypeCondition(ctx) {} // Enter a parse tree produced by GraphQLParser#inlineFragment.

  }, {
    key: "enterInlineFragment",
    value: function enterInlineFragment(ctx) {} // Exit a parse tree produced by GraphQLParser#inlineFragment.

  }, {
    key: "exitInlineFragment",
    value: function exitInlineFragment(ctx) {} // Enter a parse tree produced by GraphQLParser#value.

  }, {
    key: "enterValue",
    value: function enterValue(ctx) {} // Exit a parse tree produced by GraphQLParser#value.

  }, {
    key: "exitValue",
    value: function exitValue(ctx) {} // Enter a parse tree produced by GraphQLParser#intValue.

  }, {
    key: "enterIntValue",
    value: function enterIntValue(ctx) {} // Exit a parse tree produced by GraphQLParser#intValue.

  }, {
    key: "exitIntValue",
    value: function exitIntValue(ctx) {} // Enter a parse tree produced by GraphQLParser#floatValue.

  }, {
    key: "enterFloatValue",
    value: function enterFloatValue(ctx) {} // Exit a parse tree produced by GraphQLParser#floatValue.

  }, {
    key: "exitFloatValue",
    value: function exitFloatValue(ctx) {} // Enter a parse tree produced by GraphQLParser#booleanValue.

  }, {
    key: "enterBooleanValue",
    value: function enterBooleanValue(ctx) {} // Exit a parse tree produced by GraphQLParser#booleanValue.

  }, {
    key: "exitBooleanValue",
    value: function exitBooleanValue(ctx) {} // Enter a parse tree produced by GraphQLParser#stringValue.

  }, {
    key: "enterStringValue",
    value: function enterStringValue(ctx) {} // Exit a parse tree produced by GraphQLParser#stringValue.

  }, {
    key: "exitStringValue",
    value: function exitStringValue(ctx) {} // Enter a parse tree produced by GraphQLParser#nullValue.

  }, {
    key: "enterNullValue",
    value: function enterNullValue(ctx) {} // Exit a parse tree produced by GraphQLParser#nullValue.

  }, {
    key: "exitNullValue",
    value: function exitNullValue(ctx) {} // Enter a parse tree produced by GraphQLParser#enumValue.

  }, {
    key: "enterEnumValue",
    value: function enterEnumValue(ctx) {} // Exit a parse tree produced by GraphQLParser#enumValue.

  }, {
    key: "exitEnumValue",
    value: function exitEnumValue(ctx) {} // Enter a parse tree produced by GraphQLParser#listValue.

  }, {
    key: "enterListValue",
    value: function enterListValue(ctx) {} // Exit a parse tree produced by GraphQLParser#listValue.

  }, {
    key: "exitListValue",
    value: function exitListValue(ctx) {} // Enter a parse tree produced by GraphQLParser#objectValue.

  }, {
    key: "enterObjectValue",
    value: function enterObjectValue(ctx) {} // Exit a parse tree produced by GraphQLParser#objectValue.

  }, {
    key: "exitObjectValue",
    value: function exitObjectValue(ctx) {} // Enter a parse tree produced by GraphQLParser#objectField.

  }, {
    key: "enterObjectField",
    value: function enterObjectField(ctx) {} // Exit a parse tree produced by GraphQLParser#objectField.

  }, {
    key: "exitObjectField",
    value: function exitObjectField(ctx) {} // Enter a parse tree produced by GraphQLParser#variable.

  }, {
    key: "enterVariable",
    value: function enterVariable(ctx) {} // Exit a parse tree produced by GraphQLParser#variable.

  }, {
    key: "exitVariable",
    value: function exitVariable(ctx) {} // Enter a parse tree produced by GraphQLParser#variableDefinitions.

  }, {
    key: "enterVariableDefinitions",
    value: function enterVariableDefinitions(ctx) {} // Exit a parse tree produced by GraphQLParser#variableDefinitions.

  }, {
    key: "exitVariableDefinitions",
    value: function exitVariableDefinitions(ctx) {} // Enter a parse tree produced by GraphQLParser#variableDefinition.

  }, {
    key: "enterVariableDefinition",
    value: function enterVariableDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#variableDefinition.

  }, {
    key: "exitVariableDefinition",
    value: function exitVariableDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#defaultValue.

  }, {
    key: "enterDefaultValue",
    value: function enterDefaultValue(ctx) {} // Exit a parse tree produced by GraphQLParser#defaultValue.

  }, {
    key: "exitDefaultValue",
    value: function exitDefaultValue(ctx) {} // Enter a parse tree produced by GraphQLParser#type_.

  }, {
    key: "enterType_",
    value: function enterType_(ctx) {} // Exit a parse tree produced by GraphQLParser#type_.

  }, {
    key: "exitType_",
    value: function exitType_(ctx) {} // Enter a parse tree produced by GraphQLParser#namedType.

  }, {
    key: "enterNamedType",
    value: function enterNamedType(ctx) {} // Exit a parse tree produced by GraphQLParser#namedType.

  }, {
    key: "exitNamedType",
    value: function exitNamedType(ctx) {} // Enter a parse tree produced by GraphQLParser#listType.

  }, {
    key: "enterListType",
    value: function enterListType(ctx) {} // Exit a parse tree produced by GraphQLParser#listType.

  }, {
    key: "exitListType",
    value: function exitListType(ctx) {} // Enter a parse tree produced by GraphQLParser#directives.

  }, {
    key: "enterDirectives",
    value: function enterDirectives(ctx) {} // Exit a parse tree produced by GraphQLParser#directives.

  }, {
    key: "exitDirectives",
    value: function exitDirectives(ctx) {} // Enter a parse tree produced by GraphQLParser#directive.

  }, {
    key: "enterDirective",
    value: function enterDirective(ctx) {} // Exit a parse tree produced by GraphQLParser#directive.

  }, {
    key: "exitDirective",
    value: function exitDirective(ctx) {} // Enter a parse tree produced by GraphQLParser#typeSystemDefinition.

  }, {
    key: "enterTypeSystemDefinition",
    value: function enterTypeSystemDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#typeSystemDefinition.

  }, {
    key: "exitTypeSystemDefinition",
    value: function exitTypeSystemDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#typeSystemExtension.

  }, {
    key: "enterTypeSystemExtension",
    value: function enterTypeSystemExtension(ctx) {} // Exit a parse tree produced by GraphQLParser#typeSystemExtension.

  }, {
    key: "exitTypeSystemExtension",
    value: function exitTypeSystemExtension(ctx) {} // Enter a parse tree produced by GraphQLParser#schemaDefinition.

  }, {
    key: "enterSchemaDefinition",
    value: function enterSchemaDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#schemaDefinition.

  }, {
    key: "exitSchemaDefinition",
    value: function exitSchemaDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#rootOperationTypeDefinition.

  }, {
    key: "enterRootOperationTypeDefinition",
    value: function enterRootOperationTypeDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#rootOperationTypeDefinition.

  }, {
    key: "exitRootOperationTypeDefinition",
    value: function exitRootOperationTypeDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#schemaExtension.

  }, {
    key: "enterSchemaExtension",
    value: function enterSchemaExtension(ctx) {} // Exit a parse tree produced by GraphQLParser#schemaExtension.

  }, {
    key: "exitSchemaExtension",
    value: function exitSchemaExtension(ctx) {} // Enter a parse tree produced by GraphQLParser#operationTypeDefinition.

  }, {
    key: "enterOperationTypeDefinition",
    value: function enterOperationTypeDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#operationTypeDefinition.

  }, {
    key: "exitOperationTypeDefinition",
    value: function exitOperationTypeDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#description.

  }, {
    key: "enterDescription",
    value: function enterDescription(ctx) {} // Exit a parse tree produced by GraphQLParser#description.

  }, {
    key: "exitDescription",
    value: function exitDescription(ctx) {} // Enter a parse tree produced by GraphQLParser#typeDefinition.

  }, {
    key: "enterTypeDefinition",
    value: function enterTypeDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#typeDefinition.

  }, {
    key: "exitTypeDefinition",
    value: function exitTypeDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#typeExtension.

  }, {
    key: "enterTypeExtension",
    value: function enterTypeExtension(ctx) {} // Exit a parse tree produced by GraphQLParser#typeExtension.

  }, {
    key: "exitTypeExtension",
    value: function exitTypeExtension(ctx) {} // Enter a parse tree produced by GraphQLParser#scalarTypeDefinition.

  }, {
    key: "enterScalarTypeDefinition",
    value: function enterScalarTypeDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#scalarTypeDefinition.

  }, {
    key: "exitScalarTypeDefinition",
    value: function exitScalarTypeDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#scalarTypeExtension.

  }, {
    key: "enterScalarTypeExtension",
    value: function enterScalarTypeExtension(ctx) {} // Exit a parse tree produced by GraphQLParser#scalarTypeExtension.

  }, {
    key: "exitScalarTypeExtension",
    value: function exitScalarTypeExtension(ctx) {} // Enter a parse tree produced by GraphQLParser#objectTypeDefinition.

  }, {
    key: "enterObjectTypeDefinition",
    value: function enterObjectTypeDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#objectTypeDefinition.

  }, {
    key: "exitObjectTypeDefinition",
    value: function exitObjectTypeDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#implementsInterfaces.

  }, {
    key: "enterImplementsInterfaces",
    value: function enterImplementsInterfaces(ctx) {} // Exit a parse tree produced by GraphQLParser#implementsInterfaces.

  }, {
    key: "exitImplementsInterfaces",
    value: function exitImplementsInterfaces(ctx) {} // Enter a parse tree produced by GraphQLParser#fieldsDefinition.

  }, {
    key: "enterFieldsDefinition",
    value: function enterFieldsDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#fieldsDefinition.

  }, {
    key: "exitFieldsDefinition",
    value: function exitFieldsDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#fieldDefinition.

  }, {
    key: "enterFieldDefinition",
    value: function enterFieldDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#fieldDefinition.

  }, {
    key: "exitFieldDefinition",
    value: function exitFieldDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#argumentsDefinition.

  }, {
    key: "enterArgumentsDefinition",
    value: function enterArgumentsDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#argumentsDefinition.

  }, {
    key: "exitArgumentsDefinition",
    value: function exitArgumentsDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#inputValueDefinition.

  }, {
    key: "enterInputValueDefinition",
    value: function enterInputValueDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#inputValueDefinition.

  }, {
    key: "exitInputValueDefinition",
    value: function exitInputValueDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#objectTypeExtension.

  }, {
    key: "enterObjectTypeExtension",
    value: function enterObjectTypeExtension(ctx) {} // Exit a parse tree produced by GraphQLParser#objectTypeExtension.

  }, {
    key: "exitObjectTypeExtension",
    value: function exitObjectTypeExtension(ctx) {} // Enter a parse tree produced by GraphQLParser#interfaceTypeDefinition.

  }, {
    key: "enterInterfaceTypeDefinition",
    value: function enterInterfaceTypeDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#interfaceTypeDefinition.

  }, {
    key: "exitInterfaceTypeDefinition",
    value: function exitInterfaceTypeDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#interfaceTypeExtension.

  }, {
    key: "enterInterfaceTypeExtension",
    value: function enterInterfaceTypeExtension(ctx) {} // Exit a parse tree produced by GraphQLParser#interfaceTypeExtension.

  }, {
    key: "exitInterfaceTypeExtension",
    value: function exitInterfaceTypeExtension(ctx) {} // Enter a parse tree produced by GraphQLParser#unionTypeDefinition.

  }, {
    key: "enterUnionTypeDefinition",
    value: function enterUnionTypeDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#unionTypeDefinition.

  }, {
    key: "exitUnionTypeDefinition",
    value: function exitUnionTypeDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#unionMemberTypes.

  }, {
    key: "enterUnionMemberTypes",
    value: function enterUnionMemberTypes(ctx) {} // Exit a parse tree produced by GraphQLParser#unionMemberTypes.

  }, {
    key: "exitUnionMemberTypes",
    value: function exitUnionMemberTypes(ctx) {} // Enter a parse tree produced by GraphQLParser#unionTypeExtension.

  }, {
    key: "enterUnionTypeExtension",
    value: function enterUnionTypeExtension(ctx) {} // Exit a parse tree produced by GraphQLParser#unionTypeExtension.

  }, {
    key: "exitUnionTypeExtension",
    value: function exitUnionTypeExtension(ctx) {} // Enter a parse tree produced by GraphQLParser#enumTypeDefinition.

  }, {
    key: "enterEnumTypeDefinition",
    value: function enterEnumTypeDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#enumTypeDefinition.

  }, {
    key: "exitEnumTypeDefinition",
    value: function exitEnumTypeDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#enumValuesDefinition.

  }, {
    key: "enterEnumValuesDefinition",
    value: function enterEnumValuesDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#enumValuesDefinition.

  }, {
    key: "exitEnumValuesDefinition",
    value: function exitEnumValuesDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#enumValueDefinition.

  }, {
    key: "enterEnumValueDefinition",
    value: function enterEnumValueDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#enumValueDefinition.

  }, {
    key: "exitEnumValueDefinition",
    value: function exitEnumValueDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#enumTypeExtension.

  }, {
    key: "enterEnumTypeExtension",
    value: function enterEnumTypeExtension(ctx) {} // Exit a parse tree produced by GraphQLParser#enumTypeExtension.

  }, {
    key: "exitEnumTypeExtension",
    value: function exitEnumTypeExtension(ctx) {} // Enter a parse tree produced by GraphQLParser#inputObjectTypeDefinition.

  }, {
    key: "enterInputObjectTypeDefinition",
    value: function enterInputObjectTypeDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#inputObjectTypeDefinition.

  }, {
    key: "exitInputObjectTypeDefinition",
    value: function exitInputObjectTypeDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#inputFieldsDefinition.

  }, {
    key: "enterInputFieldsDefinition",
    value: function enterInputFieldsDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#inputFieldsDefinition.

  }, {
    key: "exitInputFieldsDefinition",
    value: function exitInputFieldsDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#inputObjectTypeExtension.

  }, {
    key: "enterInputObjectTypeExtension",
    value: function enterInputObjectTypeExtension(ctx) {} // Exit a parse tree produced by GraphQLParser#inputObjectTypeExtension.

  }, {
    key: "exitInputObjectTypeExtension",
    value: function exitInputObjectTypeExtension(ctx) {} // Enter a parse tree produced by GraphQLParser#directiveDefinition.

  }, {
    key: "enterDirectiveDefinition",
    value: function enterDirectiveDefinition(ctx) {} // Exit a parse tree produced by GraphQLParser#directiveDefinition.

  }, {
    key: "exitDirectiveDefinition",
    value: function exitDirectiveDefinition(ctx) {} // Enter a parse tree produced by GraphQLParser#directiveLocations.

  }, {
    key: "enterDirectiveLocations",
    value: function enterDirectiveLocations(ctx) {} // Exit a parse tree produced by GraphQLParser#directiveLocations.

  }, {
    key: "exitDirectiveLocations",
    value: function exitDirectiveLocations(ctx) {} // Enter a parse tree produced by GraphQLParser#directiveLocation.

  }, {
    key: "enterDirectiveLocation",
    value: function enterDirectiveLocation(ctx) {} // Exit a parse tree produced by GraphQLParser#directiveLocation.

  }, {
    key: "exitDirectiveLocation",
    value: function exitDirectiveLocation(ctx) {} // Enter a parse tree produced by GraphQLParser#executableDirectiveLocation.

  }, {
    key: "enterExecutableDirectiveLocation",
    value: function enterExecutableDirectiveLocation(ctx) {} // Exit a parse tree produced by GraphQLParser#executableDirectiveLocation.

  }, {
    key: "exitExecutableDirectiveLocation",
    value: function exitExecutableDirectiveLocation(ctx) {} // Enter a parse tree produced by GraphQLParser#typeSystemDirectiveLocation.

  }, {
    key: "enterTypeSystemDirectiveLocation",
    value: function enterTypeSystemDirectiveLocation(ctx) {} // Exit a parse tree produced by GraphQLParser#typeSystemDirectiveLocation.

  }, {
    key: "exitTypeSystemDirectiveLocation",
    value: function exitTypeSystemDirectiveLocation(ctx) {} // Enter a parse tree produced by GraphQLParser#name.

  }, {
    key: "enterName",
    value: function enterName(ctx) {} // Exit a parse tree produced by GraphQLParser#name.

  }, {
    key: "exitName",
    value: function exitName(ctx) {} // Enter a parse tree produced by GraphQLParser#keyword.

  }, {
    key: "enterKeyword",
    value: function enterKeyword(ctx) {} // Exit a parse tree produced by GraphQLParser#keyword.

  }, {
    key: "exitKeyword",
    value: function exitKeyword(ctx) {}
  }]);

  return GraphQLListener;
}(_antlr["default"].tree.ParseTreeListener);

exports["default"] = GraphQLListener;

